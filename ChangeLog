2011-02-11  Ann Giammona  <agiammona@stjude.org>

	* NEWS: Update for version 2.2.9

2011-02-11  Ann Giammona  <agiammona@stjude.org>

	* libMEADsolvate/Makefile.in: Makefile template for libMEADsolvate.

	* libMEADsolvate/meadsolvate.h: Header for meadsolvate.cc

	* libMEADsolvate/meadsolinprot.h: Header for meadsolinprot.cc

	* libMEADsolvate/meadsolvate.cc: Library version of solvate.

	* libMEADsolvate/meadsolinprot.cc: Library version of solinprot.

	* libMEADsolvate/domeadsolvate.cc:
	Library version of solvate suitable for calling from FORTRAN.

	* libMEADsolvate/domeadsolinprot.cc:
	Library version of solinprot suitable for calling from FORTRAN.

2011-02-10  Ann Giammona  <agiammona@stjude.org>

	* TODO: potint out-of-grid DONE.

	* NOTES: Checkin for version 2.2.9

	* Makefile.in: Added directives to build libMEADsolvate.a

	* libmead/FDGridLevel.h, libmead/FDGridLevel.cc:
	Added a boolean, ZeroForOutOfRange, and methods to set and get its value.
	This variable controls whether FDGridLevel::potint returns a zero or
	throws an error when point-out-of-range.

	* configure.in: Bump version number to 2.2.9.

	Version 2.2.9 includes the initial implementation of libMEADsolvate and
	modification of FDGridLevel::potint to allow return of zero instead
	of throwing an error when point-out-of-range.

2009-09-15  Don Bashford  <bashford@hc-bashford>

	* NOTES: Check in for version 2.2.8

	* TODO: potint out-of-grid TODO

	* README: A bit more on coming up with charges and radii,
	and a minor correction re COPYING file.

	* configure.in: Check in prelim to 2.2.8a

2009-02-22  Don Bashford  <bashford@hc-bashford>

	* libmead/FDGridLevel.h: Fix bug in get_avsScaleFactor.

2008-11-06  Don Bashford  <bashford@hc-bashford>

	* libmead/DielCubeRep.cc, libmead/AtomSet.cc:
	Explicit inclusion of C string header for functions like
	strncmp and memset.  See Teixeira emails starting 5 Nov. 2008.

2008-03-04  Don Bashford  <bashford@hc-bashford>

	* ChangeLog, NOTES: Check in for tagging release 2.2.7

	* Makefile.in:
	Do the right thing if user types "make install" before "make"

	* README: Fix a nit in the distro making instructions.

	* libmead/Makefile.in, configure.in:
	Deal with the need for libmead.a to be -fpic and sharable if it's
	to be used to make the Python shared library, MEADc.so

2008-03-04  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* NOTES: Check in for tagging release 2.2.7

	* Makefile.in:
	Do the right thing if user types "make install" before "make"

	* README: Fix a nit in the distro making instructions.

	* libmead/Makefile.in, configure.in:
	Deal with the need for libmead.a to be -fpic and sharable if it's
	to be used to make the Python shared library, MEADc.so

2008-03-04  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* Makefile.in:
	Do the right thing if user types "make install" before "make"

	* README: Fix a nit in the distro making instructions.

	* libmead/Makefile.in, configure.in:
	Deal with the need for libmead.a to be -fpic and sharable if it's
	to be used to make the Python shared library, MEADc.so

2008-02-29  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* configure.in: bump version number in advance.

	* apps/pair_interactions/Makefile.in, apps/potscan/Makefile.in, apps/solinprot/Makefile.in, apps/solvate/Makefile.in, apps/sav-driver/Makefile.in, apps/potential/Makefile.in:
	Fix for change in Gnu Make 3.81

2008-02-28  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/SphericalHarmonic.h: Maybe fix a type clash.

2007-11-27  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* ChangeLog: Bring up to date for release.

	* libmead/posix_using.cc: Posix_using is no longer needed

	* 0README.FIRST:
	Various updates, esp w.r.t. building and binaries no longer provided.

	* configure.in: Bump up the version number

	* NOTES: Check in for tag/release.

	* TODO: Check in for tagging/release.

	* swig/Makefile.in: Removal of unused stuff.

	* Makefile.in:
	Modified the dist target to put the distro files one level up from the
	working dir.  Some other cleaning up.

2007-11-27  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/posix_using.cc: Posix_using is no longer needed

	* 0README.FIRST:
	Various updates, esp w.r.t. building and binaries no longer provided.

	* configure.in: Bump up the version number

	* NOTES: Check in for tag/release.

	* TODO: Check in for tagging/release.

	* swig/Makefile.in: Removal of unused stuff.

	* Makefile.in:
	Modified the dist target to put the distro files one level up from the
	working dir.  Some other cleaning up.

2007-11-26  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/Makefile.in: Removal of posix_using.cc

	* libmead/globals.h:
	Removal of posix_using.cc functions, fexists and fdelete.

	* libmead/globals.cc, apps/potential/potential.cc:
	Replace use of removed fexists function with ifstream open attempt.

2007-10-08  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* NOTES: prepare for version 2.2.6

	* configure.in: bump up MEAD version number.

	* config.sub, install-sh, config.guess:
	New config.guess config.sub and install-sh from autoconf-2.61

2007-05-28  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/Polynomial.h, libmead/Potat.cc, libmead/SAVanal_calc.cc, libmead/Sausage.cc, libmead/SphericalHarmonic.cc, libmead/SphericalHarmonic.h, libmead/TPShell.h, libmead/globals.cc, libmead/posix_using.cc, libmead/sor.cc, swig/premade_MEAD_shadow.cc, libmead/CLShell.h, libmead/ChargeCubeRep.cc, libmead/ChargeCubeRep.h, libmead/ChargeDist.cc, libmead/ChargeDist.h, libmead/Coord.h, libmead/Debye.cc, libmead/DielCubeRep.h, libmead/ElectrolyteByAtoms.cc, libmead/ElectrolyteByAtoms.h, libmead/ElstatPotCombination.cc, libmead/FDGridLevel.cc, libmead/FDGridLevel.h, libmead/ManyPointCharge.h, libmead/MomentAnalysis.cc, libmead/MomentAnalysis.h, libmead/MomentAnalysis_tmplts.h, libmead/OnePointCharge.cc, libmead/OnePointCharge.h, libmead/Pair.h, libmead/PairGenBorn.cc, libmead/PhysCond.h, libmead/Polynomial.cc, libmead/AnalySlab.cc, libmead/AnalySphere.cc, libmead/AnalySphere.h, libmead/Angle.h, libmead/AtomChargeSet.cc, libmead/AtomChargeSet.h, libmead/AvsScalarField.cc, libmead/AvsScalarField_input.cc:
	Merge-in of the winbranch-2-2-5

2007-05-27  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* NOTES: Check in for tagging winmerge-2-2-5

	* apps/redti/redti.c, apps/redti/rfixpro.c:
	Correct some non-conformant C-library usage.

	* TODO: Checkin before merge

	* NOTES: Checkin before a merge.

2007-02-22  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/FDGridLevel.cc, libmead/FDGridLevel.h, libmead/FinDiffElstatPot.cc, libmead/FinDiffElstatPot.h, libmead/ManyPointCharge.cc, libmead/ManyPointCharge.h, libmead/OnePointCharge.cc, libmead/OnePointCharge.h, libmead/SAVanal_calc.cc, libmead/globals.cc, libmead/globals.h, libmead/sor.cc, swig/tat.py, ChangeLog, NOTES, README, TODO, apps/libmso/FlexiSite.cc, apps/potential/potential.cc, libmead/AtomChargeSet.cc, libmead/AtomChargeSet.h, libmead/AtomSet.h, libmead/ChargeDist.cc, libmead/ChargeDist.h:
	Merged in main-branch changes as of 21 Feb 07

	* libmead/OnePointCharge.h, libmead/Pair.h, libmead/PairGenBorn.cc, libmead/PhysCond.h, libmead/Polynomial.cc, libmead/Polynomial.h, libmead/Potat.cc, libmead/SAVanal_calc.cc, libmead/Sausage.cc, libmead/SphericalHarmonic.cc, libmead/SphericalHarmonic.h, libmead/TPShell.h, libmead/globals.cc, libmead/posix_using.cc, libmead/sor.cc, libmead/ChargeCubeRep.cc, libmead/ChargeCubeRep.h, libmead/ChargeDist.cc, libmead/ChargeDist.h, libmead/Coord.h, libmead/Debye.cc, libmead/DielCubeRep.h, libmead/ElectrolyteByAtoms.cc, libmead/ElectrolyteByAtoms.h, libmead/ElstatPotCombination.cc, libmead/FDGridLevel.cc, libmead/FDGridLevel.h, libmead/ManyPointCharge.h, libmead/MomentAnalysis.cc, libmead/MomentAnalysis.h, libmead/MomentAnalysis_tmplts.h, libmead/OnePointCharge.cc, libmead/AnalySlab.cc, libmead/AnalySphere.cc, libmead/AnalySphere.h, libmead/Angle.h, libmead/AtomChargeSet.cc, libmead/AtomChargeSet.h, libmead/AvsScalarField.cc, libmead/AvsScalarField_input.cc, libmead/CLShell.h:
	Various changes for compilation under MSVC 7.1.  See NOTES of
	6 Feb 2007

	* swig/premade_MEAD_shadow.cc:
	Ugh!  Had to hand-edit this for comilation with MSVC!
	Added numerous BEGIN/END_CPLUSPLUS_SECTION macro calls and
	_USE_MATH_DEFINES to get M_PI etc. from math.h

2007-02-21  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* apps/libmso/FlexiSite.cc:
	Fix a bug discovered by vivek sharma (email of Feb 21, 2007)
	in which rewinding the conf file fails because it was in a non-good
	state prior to the rewind.  Also put in some error checking on
	the state of this fstream and fixed a bit of blabbing output.

2007-02-05  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/FinDiffElstatPot.h, libmead/FinDiffElstatPot.cc:
	Changes really done around 25 May 2006 involving "ownership"
	of pointed-to AnalyticEP.

2007-02-04  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/SAVanal_calc.cc: Write vertex warnings to blab2, not cerr.

	* libmead/OnePointCharge.h, libmead/OnePointCharge.cc, libmead/ManyPointCharge.h, libmead/ManyPointCharge.cc, libmead/FDGridLevel.cc, libmead/ChargeDist.h, libmead/ChargeDist.cc, libmead/AtomChargeSet.h, libmead/AtomChargeSet.cc:
	The ChargeDist clsses' get_cuberep function now has an option
	to suppress warnings about charges outside the lattice and FDGridLevel
	uses it on all levels but the outermost.  This avoids spurious
	warnings.

2006-05-29  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/sor.cc:
	const qualifier on flat iteration pointers to help vectorizer.

2006-05-23  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/AtomSet.h: Better error messages from operator[]

	* libmead/globals.cc, libmead/globals.h: error takes string arguments

2006-05-04  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* NOTES: check in for May-2006 tag

	* ChangeLog: update via VC

	* TODO: More stuff to do.

	* README: Clarifications on pqr format, esp. w.r.t. chainID.
	The -AvsScaleFactor for potential, and some rewording of other stuff
	there.

	* libmead/FDGridLevel.h, libmead/FDGridLevel.cc, apps/potential/potential.cc:
	Added feature, AvsScaleFactor for units control.
	(Changes made 7 Dec 05, check in much later)

2006-05-04  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* TODO: More stuff to do.

	* README: Clarifications on pqr format, esp. w.r.t. chainID.
	The -AvsScaleFactor for potential, and some rewording of other stuff
	there.

	* libmead/FDGridLevel.h, libmead/FDGridLevel.cc, apps/potential/potential.cc:
	Added feature, AvsScaleFactor for units control.
	(Changes made 7 Dec 05, check in much later)

2005-11-10  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* configure.in: Bump version number to 2.2.5

	* acinclude.m4:
	Fix underquoting per new, more strict aclocal requirements.

2005-11-09  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* TODO: Check in for version 2.2.5

	* NOTES: Check in for tag v-2-2-5

	* utilities/README: Fix a typo (actually done 24 Jan. 2005).

	* libmead/MomentAnalysis_tmplts.h:
	Increase the default value of ninter in sphereint.

	* libmead/AtomSet.cc:
	Fixed a bug that was preventing recognition of HETATM records
	(Actual date was 15 April 2005)

	* apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Now even the David L stuff compiles and runs.

	* apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Changes so it all compiles and runs, without commenting-out code
	except for some Dave L derived stuff at end.

	* apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Under gcc 3.4, Fedora Core 3, only the parts using testAnal are
	confirmed to compile, but it runs and results look good.
	(The last changes to this file were 21 Feb 2005).

	* apps/mulsidecomp/mulsidecomp.cc:
	Some minor bug fixes and improvements really made on 15 April 2005.

2005-06-02  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* README:
	Some clarifications about the interpretation of ATOM and HETATM lines
	and the ouput of "potential".

2005-03-25  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* utilities/assign_parse_radch.pl: Correct typos in usage

2005-01-25  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* libmead/Bigmem.cc:
	Change ptr member of MemNode from void* to char* since deletes
	on the former are possibly meaningless.

	* libmead/posix_using.cc: moved define of _POSIX_SOURCE to top.
	This used to break old Sun C++ compilers, but now just do it.

2005-01-21  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* testing/expect/sphere-test-solvate-epsin4, testing/expect/sphere-test-solvate-epsin1:
	Stop spurious diffs on dirnames.

	* testing/expect/sphere-test-solinprot: stop spurious diffs on dirnames

	* testing/expect/multiflex-lyso-glu7-test:
	Stop spurious diffs on dirnames.

	* Makefile.in: remove any .cvsignore files from dist.

	* TODO: Check in for 2.2.4 release.

	* .cvsignore: Initial version

	* apps/libmso/AtomRegex.h, apps/libmso/AtomRegex.cc:
	Allow for chainid to be specified in .sites file
	Here this requires extension of the AtomRegex format.

	* apps/libmso/SiteInMulti.h, apps/libmso/SiteInMulti.cc:
	Allow for chainid to be specified in .sites file

	* NOTES: Check in for 2.2.4 release

	* NEWS: Bring up to date for 2.2.4

	* README: Document chainid features

	* configure.in: Bump up version number

2005-01-16  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* apps/solvate/Makefile.in: Don't try building the obsolete solvate2
	(see 6 Jan 05 email from nilu@sickkids.ca)

	* libmead/ManyPointCharge.h:
	Include OnePointCharge, per error report of gerwald jogl
	on a Fedora Core 3 system.

2004-12-10  Don.Bashford@stjude.org  <bashford@hc-bashford>

	* INSTALLATION: Small correction

	* libmead/Makefile.in: Get rid of pair-subopt-rule

	* Makefile.in: Sleep a bit befor tar to allow writes to finish.

	* ChangeLog: Check in for release 2.3.3

	* NOTES: check in for new release

	* configure.in:
	Get rid of the pair-subopt-rule thing now that Pair.cc is fixed.

	* INSTALLATION: Update about status on Linux and Mac.

	* swig/sol.py: Don't blab

	* libmead/Pair.cc:
	Fix a possible significant bug: In the "subsequent cleanup" lists,
	cur could be deleted before being used in cur = cur->next.

	* acinclude.m4: Bug fix

	* apps/libmso/Makefile.in, libmead/Makefile.in: Use ranlib

	* Makefile.in:
	Fix some distdelete stuff and infinite recursions triggered
	by non-distributed dirs.

	* swig/interact.py:
	Remove blatent syntax errors, but it's still not a working example.

	* libmead/MomentAnalysis.cc:
	The isnan test is non-portable, so get rid if it.
	Trigtrim should take care of it.

2004-12-10  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* NOTES: check in for new release

	* configure.in:
	Get rid of the pair-subopt-rule thing now that Pair.cc is fixed.

	* INSTALLATION: Update about status on Linux and Mac.

	* swig/sol.py: Don't blab

	* libmead/Pair.cc:
	Fix a possible significant bug: In the "subsequent cleanup" lists,
	cur could be deleted before being used in cur = cur->next.

	* acinclude.m4: Bug fix

	* apps/libmso/Makefile.in, libmead/Makefile.in: Use ranlib

	* Makefile.in:
	Fix some distdelete stuff and infinite recursions triggered
	by non-distributed dirs.

	* swig/interact.py:
	Remove blatent syntax errors, but it's still not a working example.

	* libmead/MomentAnalysis.cc:
	The isnan test is non-portable, so get rid if it.
	Trigtrim should take care of it.

2004-12-09  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* Makefile.in: Python stuff and update new configure features.

	* configure.in, acinclude.m4:
	Overhaul of pyton handling.  Attempts swig, but that's broken anyway
	by swig version skew.

	* swig/Makefile.in:
	Changes corresponding to reworking of configure.in and acinclude.in

	* swig/swig_shadow.rule:
	Makefile rule for generatying MEAD_shadow.cc and MEAD.py
	by running swig et al.

	* swig/copy_shadow.rule:
	Makefile rule for generatying MEAD_shadow.cc and MEAD.py
	by copying from a premade version.

	* swig/premade_MEAD.py:
	Premade MEAD.py for builds where wrapping via swig et al is not done.
	Since swig wrapping is currently broken, this is from a wrapping
	from an earlier version.

2004-12-09  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* Makefile.in: Python stuff and update new configure features.

	* configure.in, acinclude.m4:
	Overhaul of pyton handling.  Attempts swig, but that's broken anyway
	by swig version skew.

	* swig/Makefile.in:
	Changes corresponding to reworking of configure.in and acinclude.in

	* swig/swig_shadow.rule:
	Makefile rule for generatying MEAD_shadow.cc and MEAD.py
	by running swig et al.

	* swig/copy_shadow.rule:
	Makefile rule for generatying MEAD_shadow.cc and MEAD.py
	by copying from a premade version.

	* swig/premade_MEAD.py:
	Premade MEAD.py for builds where wrapping via swig et al is not done.
	Since swig wrapping is currently broken, this is from a wrapping
	from an earlier version.

2004-12-07  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* configure.in: Bump version to 2.2.3

	* libmead/AccTag.h, libmead/Polynomial.h: Typo

2004-12-06  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* acinclude.m4: Simplify finding include dirs for python2

	* swig/premade_MEAD_shadow.cc:
	Initial is the version generated with MEAD-2.2.2.

	* swig/Python_funcs.h: typename qualifier added in various places

	* acinclude.m4: Use python2, since numeric only no longer supports 1.5

	* Makefile.in: Allow for "make dist" without configuring for python

	* NOTES: Another check in for tagging.

	* libmead/TPShell.h, libmead/TPShell.cc, libmead/sor.cc, libmead/SolvAccVol.h, libmead/SolvAccVol.cc, libmead/Shell.h, libmead/Shell.cc, libmead/Sausage.h, libmead/Sausage.cc, libmead/Potat.h, libmead/Potat.cc, libmead/PhysCond.h, libmead/PhysCond.cc, libmead/Pair.h, libmead/Pair.cc, libmead/globals.h, libmead/globals.cc, libmead/FinDiffMethod.h, libmead/FinDiffMethod.cc, libmead/FinDiffElstatPot.h, libmead/FinDiffElstatPot.cc, libmead/FDGridLevel.h, libmead/FDGridLevel.cc, libmead/FDChargeIterator.h, libmead/FDChargeIterator.cc, libmead/ElstatPot.h, libmead/ElstatPotCombination.h, libmead/ElstatPot.cc, libmead/ElectrolyteEnvironment.h, libmead/ElectrolyteEnvironment.cc, libmead/DielectricEnvironment.h, libmead/DielectricEnvironment.cc, libmead/DielCubeRep.h, libmead/DielCubeRep.cc, libmead/CubeLatSpec.h, libmead/CubeLatSpec.cc, libmead/CLShell.h, libmead/CLShell.cc, libmead/ChargeDist.h, libmead/ChargeDist.cc, libmead/ChargeCubeRep.h, libmead/ChargeCubeRep.cc, libmead/AvsScalarField.h, libmead/AvsScalarField.cc, libmead/AtomSet.h, libmead/AtomSet.cc, libmead/AtomID.h, libmead/AtomID.cc, libmead/Atom.h, libmead/AtomChargeSet.h, libmead/AtomChargeSet.cc, libmead/Atom.cc, libmead/AnalySlab.h, libmead/AnalySlab.cc, apps/libmso/SiteInMulti.h, apps/libmso/SiteInMulti.cc, apps/libmso/MultiSiteMolecule.h, apps/libmso/MultiSiteMolecule.cc, apps/libmso/MultiFlexiSiteMol.h, apps/libmso/MultiFlexiSiteMol.cc, apps/libmso/FlexiSite.h, apps/libmso/FlexiSite.cc, apps/libmso/AtomRegex.h, apps/libmso/AtomRegex.cc:
	Removed pragma interface/implementation stuff (see NOTES).

	* NOTES, TODO: Check in for tagging

2004-11-19  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* libmead/Makefile.in, libdevel/Makefile.in, apps/Makefile.common.in:
	Don't put "-o $@" in CXXLINK, instead put it in uses of CXXLINK.
	This removes redundant -o options in makefile commands.

2004-11-15  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* libmead/TPShell.h, libmead/SphericalHarmonic.cc, libmead/SolvAccVol.cc, libmead/Shell.h, libmead/Potat.cc, libmead/Pair.h, libmead/OnePointCharge.h, libmead/OnePointCharge.cc, libmead/ElstatPotCombination.cc, libmead/ElstatPot.cc, libmead/CubeLatSpec.cc, libmead/Coord.h, libmead/CLShell.h, libmead/AvsScalarField_input.cc, libmead/AvsSF_read_header.cc, libmead/AtomSet.cc, libmead/AnalySphere.cc, apps/solvate/solvate.cc, apps/solinprot/solinprot.cc, apps/sav-driver/sav-driver.cc, apps/potscan/potscan.cc, apps/potential/potential.cc, apps/pair_interactions/pair_interactions.cc, apps/multiflex/multiflex.cc, apps/mulsidecomp/mulsidecomp.cc, apps/libmso/SiteInMulti.cc, apps/libmso/AtomRegex.h, apps/libmso/AtomRegex.cc:
	In various files, change from strstream to stringstream (noting that
	ostreamstrings usually need to be finished up with a flush, not
	an endl, before pulling out their strings.
	Also fstreams no longer have nocreate attributes and bin has become
	binary.
	Not excactly a g++ 3.1 issue, but get rid of Coord(int) and
	Coord(float*) ctors (and all uses), which had much potential for error.

	* libmead/Coord.h: Remove ctor Coord(int), which was little used.

2003-10-21  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* TODO: Final item and check-in for scripps-last tag

	* NOTES: Final notes and checkin for scripps-last tag

	* TODO: Several new items added over the last several months

	* NOTES: Check in some very old notes from Oct 01 and May 02

	* swig/test.py: Account for installation under PyMead package.

	* apps/potential/potential.cc:
	Prevent spurious warning when fpt file  is not given,
	but coarsegrid is output.

	* README: Added documentation of .fpt file format.  Noted availability
	of ISCOPE paper on the FTP site.  Change addresses to stjude.

	* 0README.FIRST: Add stuff about some data files to reproduce papers.
	Remove stuff about precompiled executables that aren't really there.
	Change my email to stjude.

2003-05-13  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* utilities/assign_charmm_radch.pl:
	Stop using depricated split feature.

2003-01-18  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* configure.in: Bump up version number

	* NOTES: Checkin for v-2-2-0p2 tage and release

	* README: Bump up version number and dates

	* INSTALLATION:
	Note that it works now on gcc-2.3 and with some newer Pythons

2003-01-17  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* configure.in: MEADVERSION indicates a testing status

	* swig/swigpp.el:
	Don't rely on C preprocessor to nuke comments while preserving line count.

	* NOTES: Notes about some work on python/swig stuff for newer boxes

	* apps/sav-driver/sav-driver.cc, apps/potential/potential.cc:
	main must return an int

	* libmead/OnePointCharge.h: friend syntax fix

	* libmead/AvsScalarField_input.cc, libmead/Potat.cc, libmead/SolvAccVol.cc:
	Don't use non standard ios stuff like ios::bin

	* acinclude.m4:
	Look for pyconfig.h if config.h not found in Python dirs.

	* configure.in: Use srcdir instead of top_srcdir

	* NOTES: Notes about the Vlad patches and new tag on a patch branch

2002-02-03  bashford@hc-dbashfor.stjude.org  <bashford@hc-dbashfor.stjude.org>

	* swig/meadtypes.i:
	Bug fix: LIST_PTR_OUT was wrapping up pointers to pointers, then
	deleting the list of pointers.  Removing an & operator fixes it.

2001-09-11  Don Bashford  <bashford@gage.scripps.edu>

	* /export/cvsroot/mead/TODO: Check in for tagging

2001-09-10  Don Bashford  <bashford@gage.scripps.edu>

	* /export/cvsroot/mead/swig/Makefile.in:
	Fix bug causing MEAD.py to come out as C++ code!

	* /export/cvsroot/mead/configure.in: bump up version number to 2.2.2

	* /export/cvsroot/mead/swig/Makefile.in:
	clean ups and better support of dist making

	* /export/cvsroot/mead/libmead/MomentAnalysis.cc, /export/cvsroot/mead/libmead/SphericalHarmonic.cc, /export/cvsroot/mead/libmead/MomentAnalysis_tmplts.h, /export/cvsroot/mead/libmead/SphericalHarmonic.h, /export/cvsroot/mead/libmead/MomentAnalysis.h:
	Minor corrections to satisfy SGI compiler

2001-09-07  Don Bashford  <bashford@gage.scripps.edu>

	* /export/cvsroot/mead/PROBLEMS: Notes about the python interface

	* /export/cvsroot/mead/0README.FIRST: mention iscope paper.

	* /export/cvsroot/mead/0README.FIRST: Update for the 2.2.0p2 release

2001-09-05  Don Bashford  <bashford@gage.scripps.edu>

	* /export/cvsroot/mead/apps/Makefile.in, /export/cvsroot/mead/Makefile.in:
	Replace ";" with "&&" in several multi-step commands for more robustness.

	* /export/cvsroot/mead/PROBLEMS:
	Stuff about Red Hat, gcc versions and Portland Group compiler.

2001-08-24  Don Bashford  <bashford@gage.scripps.edu>

	* /export/cvsroot/mead/configure.in: No -g flag by default

	* /export/cvsroot/mead/configure.in:
	Bump up patch number in MEADVERSION

2001-08-23  Thien-Thi Nguyen, 49614  <ttnttn@gage>

	* /export/cvsroot/mead/TODO: Add `top_srcdir' kludge removal item.

2001-08-20  Don Bashford  <bashford@gage.scripps.edu>

	* /export/cvsroot/mead/libmead/Angle.h:
	Comment out annoying "zero length" warning.

	* /export/cvsroot/mead/configure.in:
	Update optimization/cpu flags for SGIs

2001-07-13  Don Bashford  <bashford@gage.scripps.edu>

	* /export/cvsroot/mead/NOTES, /export/cvsroot/mead/TODO:
	Check in before vacation.

	* /export/cvsroot/mead/configure.in:
	Provide CXX_NOOPTFLAGS, for when optimization should be turned
	off (like in compiling the huge, autogenerated MEAD_shadow.cc).

	* /export/cvsroot/mead/libmead/SphericalHarmonic.h:
	nowraps on friends and assignment operators to stop swig whining.

	* /export/cvsroot/mead/swig/meadtypes.i:
	Add typemaps for string and x by 4 numeric arrays

	* /export/cvsroot/mead/swig/Makefile.in:
	Make a reasonable chain of implicit rules for getting from
	.h to .j files.  Preserve intermediate files.

	* /export/cvsroot/mead/swig/MEAD.j: Add MomentAnalysis module.

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Moved some local functions out to MomentAnalysis in libmead
	and make the generally useful.

	* /export/cvsroot/mead/libmead/Makefile.in:
	Add MomentAnalysis.o to MEAD_OBJECTS

	* /export/cvsroot/mead/libmead/MomentAnalysis.h:
	Many changes.  Moved templates out to MomentAnalysis_tmplts.h,
	and some functions to MomentAnalysis.cc.  Added some analysis
	functions and arithmetic operators.  Stuff for Python/NumPy.

	* /export/cvsroot/mead/libmead/MomentAnalysis_tmplts.h:
	Some templates that don't need to be in the regular interface
	moved out of MomentAnalysis.h

	* /export/cvsroot/mead/libmead/MomentAnalysis.cc:
	Some function implemtations moved out of MomentAnalysis.h

2001-07-13  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/NOTES, /export/cvsroot/mead/TODO:
	Check in before vacation.

	* /export/cvsroot/mead/configure.in:
	Provide CXX_NOOPTFLAGS, for when optimization should be turned
	off (like in compiling the huge, autogenerated MEAD_shadow.cc).

	* /export/cvsroot/mead/libmead/SphericalHarmonic.h:
	nowraps on friends and assignment operators to stop swig whining.

	* /export/cvsroot/mead/swig/meadtypes.i:
	Add typemaps for string and x by 4 numeric arrays

	* /export/cvsroot/mead/swig/Makefile.in:
	Make a reasonable chain of implicit rules for getting from
	.h to .j files.  Preserve intermediate files.

	* /export/cvsroot/mead/swig/MEAD.j: Add MomentAnalysis module.

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Moved some local functions out to MomentAnalysis in libmead
	and make the generally useful.

	* /export/cvsroot/mead/libmead/Makefile.in:
	Add MomentAnalysis.o to MEAD_OBJECTS

	* /export/cvsroot/mead/libmead/MomentAnalysis.h:
	Many changes.  Moved templates out to MomentAnalysis_tmplts.h,
	and some functions to MomentAnalysis.cc.  Added some analysis
	functions and arithmetic operators.  Stuff for Python/NumPy.

	* /export/cvsroot/mead/libmead/MomentAnalysis_tmplts.h:
	Some templates that don't need to be in the regular interface
	moved out of MomentAnalysis.h

	* /export/cvsroot/mead/libmead/MomentAnalysis.cc:
	Some function implemtations moved out of MomentAnalysis.h

2001-07-07  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/swig/Makefile.in:
	Add MomentAnalysis.j to list of .j files

2001-07-06  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/configure.in:
	add Makefile generation in apps/sphericalHarmonic_test

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Add tests featuring ChargeDists, ElstatPots and their analysis
	using MomentAnalysis.h stuff. (File very messy, but stuff works!)

	* /export/cvsroot/mead/libmead/globals.cc:
	make ::error blab to standard error, even with USE_EXCEPTIONS.

	* /export/cvsroot/mead/libmead/Angle.h:
	Supress warning about zero-length vector in Angle ctor.

	* /export/cvsroot/mead/libmead/SphericalHarmonic.cc, /export/cvsroot/mead/libmead/SphericalHarmonic.h:
	Handle negative m indices for SphericalHarmonics.
	New class representing series of SphericalHarmonics.

	* /export/cvsroot/mead/libmead/MomentAnalysis.h:
	Tools for analyzing charge distributions, scalar fields
	(including ElstatPots), and spherical functions in terms of spherical
	moments and spherical harmonics.

2001-07-05  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Add code for testing SphericalHarmonic class, including
	integrator over unit sphere, and generalization of normalization
	tests to handle different return types (like complex) different
	expected norms and different integration functions.

	* /export/cvsroot/mead/libmead/SphericalHarmonic.cc:
	Added SphericalHarmonic class.
	Provide for Poly to alter the "x" string used for output.

	* /export/cvsroot/mead/libmead/SphericalHarmonic.h:
	Added SphericalHarmonic class.
	Provide for Poly to alter the "x" string used for output.
	Important bug fix:
	PreSpheHarm copy ctor takes a const reference, not a non-const.

2001-07-04  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Deleted the commented-out ModSpheHarm stuff.

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Implementation of classes AssocLegendre and PreSpheHarm moved
	out to files SphericalHarmonic.{h,cc} in libmead.

	* /export/cvsroot/mead/libmead/SphericalHarmonic.cc, /export/cvsroot/mead/libmead/SphericalHarmonic.h:
	Implementation of classes AssocLegendre and PreSpheHarm moved
	in from file sphericalHarmonic_test.

	* /export/cvsroot/mead/libmead/SphericalHarmonic.cc:
	Fix recursive Fibonacci-like slowness in Legendre(int,int) ctor.

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Change SimPreSH name to PreSpheHarm, and comment out all things
	pertaining to (now abandoned) ModSpheHarm.

2001-07-03  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/libmead/SphericalHarmonic.cc:
	Fix awful bug in Polynomial subtract operator.
	For lagging compilers:  <cmath> abs() -->  <math.h> fabs().   (Yuk.)

	* /export/cvsroot/mead/libmead/SphericalHarmonic.h:
	Add memfun to get coefficients of a polynomial.
	Add using std::ostream

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Added lots of experimental code --- AssocLegendre class,
	and two variants of a Pre-spherical-harmonic class,
	and code to test it.  At this point all seems to work.

2001-07-03  John Bergsma  <bergsma@phineas.scripps.edu>

	* /export/cvsroot/mead/docs/pymead.tex: The PyMead User Manual

	* /export/cvsroot/mead/swig/README:
	Added a small reference to the HOWTO-WRAPPING notes

	* /export/cvsroot/mead/swig/HOWTO-WRAPPING:
	Notes on wrapping using the programs and typemaps created by John Bergsma

2001-07-02  John Bergsma  <bergsma@phineas.scripps.edu>

	* /export/cvsroot/mead/swig/mkoverloaded.pl:
	Use J_FILE name as basename for the _overloaded.py and _defs.defs temporary files.

	* /export/cvsroot/mead/libmead/Atom.h:
	Added a Python write() method.

	* /export/cvsroot/mead/libmead/Coord.h: Added a Python write() method

	* /export/cvsroot/mead/libmead/AtomSet.h:
	Changed values() to return a list of pointers to preserve Python references
	Commented out items() because it leaks memory. Has something to do with converting to a list of tuples.

	* /export/cvsroot/mead/swig/meadtypes.i:
	Added typemaps for converting list of pointers to deal with preserving Python references

	* /export/cvsroot/mead/swig/Python_funcs.h:
	Return lists of pointers so that Python references are preserved in dict operations like values()

2001-06-29  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/Makefile.in:
	Makefile.in for sphericalHarmonic_test

	* /export/cvsroot/mead/apps/sphericalHarmonic_test/sphericalHarmonic_test.cc:
	Test driver for classes in SphericalHarmonic.h

	* /export/cvsroot/mead/libmead/Polynomial.h, /export/cvsroot/mead/libmead/Polynomial.cc:
	Improve some const-ness

	* /export/cvsroot/mead/libmead/Makefile.in:
	Add SphericalHarmonic.o to MEAD_OBJECTS

	* /export/cvsroot/mead/libmead/AnalySphere.cc:
	No real changes, just adding comments

	* /export/cvsroot/mead/libmead/AtomChargeSet.cc:
	Fix bug in total_charge

	* /export/cvsroot/mead/swig/MEAD.j:
	Add SphericalHarmonic to the list of includes

	* /export/cvsroot/mead/swig/Makefile.in:
	Fixes to support compilation in separate directory.
	Add SphericalHarmonic to the list of headers to wrap.

	* /export/cvsroot/mead/swig/meadtypes.i:
	Added support for in/out vectors of wrapped class objects via
	some macros provided by John, and used it to get a typemap
	for vector<Legendre>.

	* /export/cvsroot/mead/libmead/SphericalHarmonic.cc, /export/cvsroot/mead/libmead/SphericalHarmonic.h:
	Ultimately this should implement spherical harmonics.
	For now, just a general polynomial base class, Poly,
	and Legendre polynomials.

2001-06-29  John Bergsma  <bergsma@phineas.scripps.edu>

	* /export/cvsroot/mead/swig/mkoperators.pl:
	Added operator() support (ie __call__) with the limitation of accepting
	at most 2 arguments. It can, however, be multiply defined.

2001-06-29  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/configure.in: Bump up MEADVERSION by p1

	* /export/cvsroot/mead/libmead/AnalySphere.cc:
	Bug fix: use internally stored epext, not the one in PhysCond.

	* /export/cvsroot/mead/libmead/AtomChargeSet.cc:
	Fix bug in total_charge

2001-06-28  John Bergsma  <bergsma@phineas.scripps.edu>

	* /export/cvsroot/mead/swig/mkoverloaded.pl:
	No longer derives a class from itself to overload methods, but rather
	creates dummy classes and assigns methods from the dummy class to the base
	class. This has the advantage of allowing dir(classname)  to report all
	methods available in the class.

	* /export/cvsroot/mead/swig/mkoperators.pl:
	Now properly handles both member and non-member operator overloading.

2001-06-27  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/libmead/AnalySphere.cc:
	Bug fix, take the epsext set by the ctor, not from PhysCond

2001-06-26  John Bergsma  <bergsma@phineas.scripps.edu>

	* /export/cvsroot/mead/apps/solvate/Makefile.in:
	Needed to specify appname for clean

	* /export/cvsroot/mead/swig/Makefile.in:
	Added cleanup command for the *_overloaded.py intermediate files

	* /export/cvsroot/mead/apps/pair_interactions/Makefile.in:
	Added the srcdir definitions for this new application

	* /export/cvsroot/mead/apps/solvate/Makefile.in:
	Fixed specification of the two appnames

	* /export/cvsroot/mead/swig/genpot.py, /export/cvsroot/mead/swig/meadtypes.i, /export/cvsroot/mead/swig/mkoperators.pl, /export/cvsroot/mead/swig/mkoverloaded.pl, /export/cvsroot/mead/swig/removedefs.pl, /export/cvsroot/mead/swig/sol.py, /export/cvsroot/mead/swig/swigpp.el, /export/cvsroot/mead/swig/tat.py, /export/cvsroot/mead/swig/test.py, /export/cvsroot/mead/libmead/PointCharge.h, /export/cvsroot/mead/libmead/SolvAccVol.cc, /export/cvsroot/mead/libmead/SolvAccVol.h, /export/cvsroot/mead/libmead/UniformDielectric.h, /export/cvsroot/mead/libmead/UniformElectrolyte.h, /export/cvsroot/mead/libmead/globals.cc, /export/cvsroot/mead/swig/AccTag.py, /export/cvsroot/mead/swig/CenteringStyle.py, /export/cvsroot/mead/swig/MEAD.j, /export/cvsroot/mead/swig/MEAD_shadow.pat, /export/cvsroot/mead/swig/MEADexcept.py, /export/cvsroot/mead/swig/Makefile.in, /export/cvsroot/mead/swig/PhysCondInstance.py, /export/cvsroot/mead/swig/Python_funcs.h, /export/cvsroot/mead/swig/doctest.py, /export/cvsroot/mead/libmead/ElstatPot.h, /export/cvsroot/mead/libmead/ElstatPotCombination.cc, /export/cvsroot/mead/libmead/ElstatPotCombination.h, /export/cvsroot/mead/libmead/ElySphere.h, /export/cvsroot/mead/libmead/FinDiffElstatPot.h, /export/cvsroot/mead/libmead/FinDiffMethod.cc, /export/cvsroot/mead/libmead/FinDiffMethod.h, /export/cvsroot/mead/libmead/MEADexcept.h, /export/cvsroot/mead/libmead/Makefile.in, /export/cvsroot/mead/libmead/ManyPointCharge.cc, /export/cvsroot/mead/libmead/ManyPointCharge.h, /export/cvsroot/mead/libmead/OnePointCharge.cc, /export/cvsroot/mead/libmead/OnePointCharge.h, /export/cvsroot/mead/libmead/PhysCond.h, /export/cvsroot/mead/libmead/ChargeDist.h, /export/cvsroot/mead/libmead/Coord.h, /export/cvsroot/mead/libmead/CubeLatSpec.h, /export/cvsroot/mead/libmead/Debye.h, /export/cvsroot/mead/libmead/DielByAtoms.h, /export/cvsroot/mead/libmead/DielMembAtoms.h, /export/cvsroot/mead/libmead/DielectricEnvironment.cc, /export/cvsroot/mead/libmead/DielectricEnvironment.h, /export/cvsroot/mead/libmead/DielectricSlab.h, /export/cvsroot/mead/libmead/DielectricSphere.h, /export/cvsroot/mead/libmead/ElectrolyteByAtoms.h, /export/cvsroot/mead/libmead/ElectrolyteEnvironment.cc, /export/cvsroot/mead/libmead/ElectrolyteEnvironment.h, /export/cvsroot/mead/libmead/ElstatPot.cc, /export/cvsroot/mead/libmead/Atom.h, /export/cvsroot/mead/libmead/AtomChargeSet.cc, /export/cvsroot/mead/libmead/AtomChargeSet.h, /export/cvsroot/mead/libmead/AtomID.cc, /export/cvsroot/mead/libmead/AtomID.h, /export/cvsroot/mead/libmead/AtomSet.cc, /export/cvsroot/mead/libmead/AtomSet.h, /export/cvsroot/mead/libmead/ChargeDist.cc, /export/cvsroot/mead/apps/solvate/solvate.cc, /export/cvsroot/mead/apps/solvate/solvate2.cc, /export/cvsroot/mead/libmead/AnalySlab.h, /export/cvsroot/mead/libmead/AnalySphere.cc, /export/cvsroot/mead/libmead/AnalySphere.h, /export/cvsroot/mead/libmead/Atom.cc, /export/cvsroot/mead/apps/Makefile.in, /export/cvsroot/mead/apps/pair_enerdens_test/pair_enerdens_test.cc, /export/cvsroot/mead/apps/solvate/Makefile.in, /export/cvsroot/mead/configure.in, /export/cvsroot/mead/acinclude.m4:
	Changes to enable the new Python Interface - tagged as v-2-2-1

	* /export/cvsroot/mead/apps/pair_interactions/Makefile.in, /export/cvsroot/mead/apps/pair_interactions/pair_interactions.cc, /export/cvsroot/mead/apps/pair_interactions/pair_interactions.py:
	New MEAD application

	* /export/cvsroot/mead/apps/pair_interactions/Makefile.in, /export/cvsroot/mead/apps/pair_interactions/pair_interactions.cc, /export/cvsroot/mead/apps/pair_interactions/pair_interactions.py:
	New file.

2001-06-16  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/INSTALLATION:
	mention about VPATH feature of make

	* /export/cvsroot/mead/PROBLEMS: add stuff about make problems

	* /export/cvsroot/mead/apps/Makefile.common.in:
	Don't wipe out conventional SUFFIXES.
	Use more standard implicit rule syntax in place of % : %.o

	* /export/cvsroot/mead/apps/redti/Makefile.in:
	Remember to set appname so install will work

2001-06-14  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/NOTES: Check-in for the 2.2.0 release

	* /export/cvsroot/mead/Makefile.in:
	Don't distribute (highly preliminary) docs subdir.

	* /export/cvsroot/mead/NEWS: added news for the 2.2.0 release

	* /export/cvsroot/mead/TODO: The PyMEAD directory thing got done.
	Added a todo about AVS stuff.

	* /export/cvsroot/mead/PROBLEMS: Major update

	* /export/cvsroot/mead/README: Major rewrite of top sections.

	* /export/cvsroot/mead/INSTALLATION: Major update

2001-06-13  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/swig/Makefile.in:
	MEAD module should live in PyMead package

	* /export/cvsroot/mead/swig/tat.py:
	Remove because sol.py and genpot.py do the same thing more clearly

	* /export/cvsroot/mead/swig/genpot.py, /export/cvsroot/mead/swig/sol.py, /export/cvsroot/mead/swig/bug.py:
	MEAD module should live in PyMead package

	* /export/cvsroot/mead/configure.in: Bumped version number up to 2.2.0

	* /export/cvsroot/mead/apps/Makefile.common.in:
	Fix bug causing mkinstalldirs not to be found.

2001-06-01  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/apps/solvate/Makefile.in, /export/cvsroot/mead/apps/solinprot/Makefile.in, /export/cvsroot/mead/apps/sav-driver/Makefile.in, /export/cvsroot/mead/apps/redti/Makefile.in, /export/cvsroot/mead/apps/potscan/Makefile.in, /export/cvsroot/mead/apps/potential/Makefile.in, /export/cvsroot/mead/apps/pair_enerdens_test/Makefile.in, /export/cvsroot/mead/apps/multiflex/Makefile.in, /export/cvsroot/mead/apps/mulsidecomp/Makefile.in, /export/cvsroot/mead/apps/kirkwood_test/Makefile.in, /export/cvsroot/mead/apps/gbtest/Makefile.in, /export/cvsroot/mead/apps/debye_test/Makefile.in, /export/cvsroot/mead/apps/add_charge_test/Makefile.in, /export/cvsroot/mead/apps/Makefile.common.in:
	srcdir and top_srcdir must be defined from the local Makefiles,
	not the common one.  (Fixes bug when building in separate directory.)

	* /export/cvsroot/mead/examples/lysozyme/README:
	added the old lysozyme example

	* /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del7, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del8, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del9, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.eps, /export/cvsroot/mead/examples/myoglobin/CTgly.st, /export/cvsroot/mead/examples/myoglobin/GLU.st, /export/cvsroot/mead/examples/myoglobin/HISdel.st, /export/cvsroot/mead/examples/myoglobin/HISeps.st, /export/cvsroot/mead/examples/myoglobin/LYS.st, /export/cvsroot/mead/examples/myoglobin/NTval.st, /export/cvsroot/mead/examples/myoglobin/PROPA.st, /export/cvsroot/mead/examples/myoglobin/PROPD.st, /export/cvsroot/mead/examples/myoglobin/README, /export/cvsroot/mead/examples/myoglobin/TYR.st, /export/cvsroot/mead/examples/myoglobin/collect-curves.pl, /export/cvsroot/mead/examples/myoglobin/make-globals.pl, /export/cvsroot/mead/examples/myoglobin/master.sh, /export/cvsroot/mead/examples/myoglobin/run_mol_multimead.sh, /export/cvsroot/mead/examples/myoglobin/runmcti.sh, /export/cvsroot/mead/examples/solvacc/sav-test.sh, /export/cvsroot/mead/examples/solvacc/trna.pqr, /export/cvsroot/mead/examples/br/GLU.st, /export/cvsroot/mead/examples/br/HE.mgm, /export/cvsroot/mead/examples/br/HE.ogm, /export/cvsroot/mead/examples/br/HE.pqr, /export/cvsroot/mead/examples/br/HE.sites, /export/cvsroot/mead/examples/br/LYR.st, /export/cvsroot/mead/examples/br/LYS.st, /export/cvsroot/mead/examples/br/README, /export/cvsroot/mead/examples/br/RU.mgm, /export/cvsroot/mead/examples/br/RU.ogm, /export/cvsroot/mead/examples/br/RU.pqr, /export/cvsroot/mead/examples/br/RU.sites, /export/cvsroot/mead/examples/br/TYR.st, /export/cvsroot/mead/examples/myoglobin/ARG.st, /export/cvsroot/mead/examples/myoglobin/ASP.st, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.mgm, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.ogm, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.pqr, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del1, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del10, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del11, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del2, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del3, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del4, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del5, /export/cvsroot/mead/examples/myoglobin/COx-AmberBondi.sites.del6, /export/cvsroot/mead/examples/born/README, /export/cvsroot/mead/examples/born/born.ogm, /export/cvsroot/mead/examples/born/born.pqr, /export/cvsroot/mead/examples/br/ARG.st, /export/cvsroot/mead/examples/br/ASP.st, /export/cvsroot/mead/examples/br/ASX.st:
	Add files for reproducing lit results from ~/newmead/std-tests/reproduce

	* /export/cvsroot/mead/examples/lysozyme/ASPsgl.st, /export/cvsroot/mead/examples/lysozyme/CTLEUsgl.st, /export/cvsroot/mead/examples/lysozyme/GLUsgl.st, /export/cvsroot/mead/examples/lysozyme/HSCsgl.st, /export/cvsroot/mead/examples/lysozyme/LYSsgl.st, /export/cvsroot/mead/examples/lysozyme/NTLYSsgl.st, /export/cvsroot/mead/examples/lysozyme/TYRsgl.st, /export/cvsroot/mead/examples/lysozyme/tric.mgm, /export/cvsroot/mead/examples/lysozyme/tric.ogm, /export/cvsroot/mead/examples/lysozyme/tric.pqr, /export/cvsroot/mead/examples/lysozyme/tric.sites:
	added the old lysozyme example

2001-05-10  Don Bashford  <bashford@phineas.scripps.edu>

	* /export/cvsroot/mead/Makefile.in: try a bug fix

	* /export/cvsroot/mead/Makefile.in: bug fix

	* /export/cvsroot/mead/swig/Makefile.in: Bug fixes

	* /export/cvsroot/mead/ChangeLog, /export/cvsroot/mead/NOTES:
	Check in for tag

	* /export/cvsroot/mead/libmead/Makefile.in:
	Provide for installation of include files.

	* /export/cvsroot/mead/apps/redti/Makefile.in:
	Adopt something closer to the standard scheme for app makefiles

	* /export/cvsroot/mead/apps/multiflex/Makefile.in, /export/cvsroot/mead/apps/mulsidecomp/Makefile.in:
	Fix a bug that caused unnecessary re-linking

	* /export/cvsroot/mead/configure.in:
	Bump up version number and add comments about make dist kludge.

	* /export/cvsroot/mead/apps/Makefile.in, /export/cvsroot/mead/Makefile.in:
	Changes mainly pertaining to making a distribution,
	which requires suppressing libdevel and any apps depending
	on it, as well as broken apps.

2001-05-10  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Check in for tag

	* libmead/Makefile.in: Provide for installation of include files.

	* apps/redti/Makefile.in:
	Adopt something closer to the standard scheme for app makefiles

	* apps/multiflex/Makefile.in, apps/mulsidecomp/Makefile.in:
	Fix a bug that caused unnecessary re-linking

	* configure.in:
	Bump up version number and add comments about make dist kludge.

	* apps/Makefile.in, Makefile.in:
	Changes mainly pertaining to making a distribution,
	which requires suppressing libdevel and any apps depending
	on it, as well as broken apps.

2001-05-09  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.in:
	Removed thi's scheme for replacing the minusdist-deleted dirs
	with dirs having do-nothing Makefiles only.  (Don't know why it
	was done.)

2001-04-22  Don Bashford  <bashford@gage.scripps.edu>

	* libmead/Sausage.cc, libmead/Shell.h, libmead/SolvAccVol.cc, libmead/SolvAccVol.h, libmead/UniformElectrolyte.cc, libmead/globals.cc, libmead/globals.h, libmead/posix_using.cc, swig/MEAD.j, swig/Makefile.in, swig/meadtypes.i, libmead/FDGridLevel.cc, libmead/FinDiffMethod.cc, libmead/PairGenBorn.cc, libmead/PhysCond.cc, libmead/Polynomial.cc, libmead/Polynomial.h, libmead/Potat.cc, libmead/SAVanal_calc.cc, libmead/SAVcalc_cuberep.cc, libmead/SAVtag_points.cc, libmead/AvsScalarField.h, libmead/AvsScalarField_input.cc, libmead/Bigmem.cc, libmead/ChargeCubeRep.h, libmead/Coord.h, libmead/DielCubeRep.cc, libmead/DielMembAtoms.cc, libmead/DielectricEnvironment.cc, libmead/ElectrolyteByAtoms.cc, libmead/ElectrolyteEnvironment.h, libmead/ElstatMaker.cc, libmead/ElstatMaker.h, libmead/ElstatPot.cc, libmead/FDChargeIterator.h, libmead/FDElstatMaker.cc, libmead/FDElstatMaker.h, libdevel/ADF_13_27_Data.h, libdevel/AvsScalarFromVec.cc, libdevel/QmMolecule.h, libdevel/integrate1D.cc, libdevel/integrate1D.h, libdevel/integrate3D.cc, libmead/AnalyMaker.cc, libmead/AnalyMaker.h, libmead/AnalySlab.cc, libmead/AnalySphere.cc, libmead/Angle.h, libmead/Atom.cc, libmead/AtomID.h, libmead/AtomSet.cc, libmead/AvsSF_read_header.cc, libmead/AvsScalarField.cc, apps/potscan/potscan.cc, apps/qmsolvate/qmsolvate.cc, apps/saltscan/saltscan.cc, apps/sav-driver/sav-driver.cc, apps/solinprot/solinprot.cc, apps/solvate/solvate.cc, libdevel/ADF_13_27_Data.cc, apps/mulsidecomp/mulsidecomp.cc, apps/multiflex/Makefile.in, apps/multiflex/multiflex.cc, apps/nlpotential/nlpotential.cc, apps/out2avs/out2avs.cc, apps/pair_enerdens_test/Makefile.in, apps/pair_enerdens_test/pair_enerdens_test.cc, apps/potential/potential.cc, apps/libmso/MultiSiteMolecule.cc, apps/libmso/SiteInMulti.cc, apps/libmso/SiteInMulti.h, apps/mulsidecomp/Makefile.in, TODO, apps/Makefile.in, apps/adf2sls/adf2sls.cc, apps/avs2avs/avs2avs.cc, apps/enerdens/enerdens.cc, apps/gbtest/gbtest.cc, apps/kirkwood_test/kirkwood_test.cc, apps/libmso/AtomRegex.cc, apps/libmso/FlexiSite.cc:
	Merged in winbranch-2-1-12

	* configure.in:
	Merge in the windows branch.  Also correct the version tag in here.

	* NOTES: Woops.  A bit more conflict resolution

	* NOTES: NOTE the merge, the conflict resolution of this file (only)
	and intent to make a new tag.

2001-04-21  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Merge is coming

	* NOTES: Check-in for tag, winbranch-2-1-12-winfix

	* libmead/SAVanal_calc.cc, libmead/FDGridLevel.cc:
	Put std:: before declarations of vector<whatever>::iterator, even
	though we've done using std::vector.  This works around a quirk
	of the microsoft compiler.

2001-04-20  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Check in for tagging.

	* NOTES: Some catch-up not taking and a few recent events.

	* libmead/Polynomial.h: Try forward declaring the friends-to-be.
	(This change actually made 29 Jan.)

	* configure.in:
	For the SGI CC compiler, require std version of language.

	* TODO: Add a few items (mod actually made 29 Jan 2001

2001-04-19  John Bergsma  <bergsma@gage>

	* docs/meadclasses.tex: Description of the C++ classes used in MEAD.
	Although this is incomplete, these classes
	have been wrapped by SWIG (to various degrees of
	success) for the Python scripting language.

2001-04-18  Don Bashford  <bashford@gage.scripps.edu>

	* docs/meaddoc.tex: Change to book documentclass

2001-04-17  Don Bashford  <bashford@gage.scripps.edu>

	* docs/meaddoc.tex:
	Some actual software documentation pertaining to some of the MEAD
	classes, at the higher levels.  Also some Atom and Coord stuff from
	John.

2001-03-30  Don Bashford  <bashford@gage.scripps.edu>

	* libmead/AnalySphere.cc:
	Signal error if any charges are outside dielectric sphere.

	* apps/kirkwood_test/kirkwood_test.cc:
	Make sure radius is big enough to enclose all charges,
	even when atoms are not at center.

	* libmead/AnalySphere.cc:
	Bug fix: in value, use the electrolyte radius stored in the object
	rather than calculating it from PhysCond::get_sterlen

2001-01-28  Don Bashford  <bashford@gage.scripps.edu>

	* apps/mulsidecomp/Makefile.in, apps/multiflex/Makefile.in:
	Use CXXLINK to link

	* libmead/globals.cc: Workaround for an SGI std::fstream bug

2001-01-27  Don Bashford  <bashford@gage.scripps.edu>

	* apps/qmsolvate/qmsolvate.cc, apps/saltscan/saltscan.cc, apps/sav-driver/sav-driver.cc, apps/solinprot/solinprot.cc, apps/solvate/solvate.cc, apps/mulsidecomp/mulsidecomp.cc, apps/multiflex/multiflex.cc, apps/nlpotential/nlpotential.cc, apps/out2avs/out2avs.cc, apps/potential/potential.cc, apps/potscan/potscan.cc, apps/adf2sls/adf2sls.cc, apps/avs2avs/avs2avs.cc, apps/enerdens/enerdens.cc, apps/gbtest/gbtest.cc, apps/kirkwood_test/kirkwood_test.cc, apps/libmso/AtomRegex.cc, apps/libmso/FlexiSite.cc, apps/libmso/MultiSiteMolecule.cc, apps/libmso/SiteInMulti.cc, apps/libmso/SiteInMulti.h, libdevel/ADF_13_27_Data.cc, libdevel/ADF_13_27_Data.h, libdevel/AvsScalarFromVec.cc, libdevel/QmMolecule.h, libdevel/integrate1D.cc, libdevel/integrate1D.h, libdevel/integrate3D.cc:
	iostream.h -> iostream, etc., and get it working on SGI

	* apps/Makefile.in: Bug fix in the broken_apps loop
	Move pair_enerdens_test from broken_apps to test_apps

	* apps/pair_enerdens_test/pair_enerdens_test.cc:
	Included some things from the libdevel directory.
	Change from iostream.h -> iostream, etc.

	* apps/pair_enerdens_test/Makefile.in: Link in libdevel

2001-01-25  Don Bashford  <bashford@gage.scripps.edu>

	* swig/MEAD.j, swig/Makefile.in, swig/meadtypes.i, libmead/Potat.cc, libmead/SAVanal_calc.cc, libmead/SAVcalc_cuberep.cc, libmead/SAVtag_points.cc, libmead/Sausage.cc, libmead/Shell.h, libmead/SolvAccVol.cc, libmead/SolvAccVol.h, libmead/UniformElectrolyte.cc, libmead/globals.cc, libmead/globals.h, libmead/posix_using.cc, libmead/ChargeCubeRep.h, libmead/Coord.h, libmead/DielCubeRep.cc, libmead/DielMembAtoms.cc, libmead/DielectricEnvironment.cc, libmead/ElectrolyteByAtoms.cc, libmead/ElectrolyteEnvironment.h, libmead/ElstatMaker.cc, libmead/ElstatMaker.h, libmead/ElstatPot.cc, libmead/FDChargeIterator.h, libmead/FDElstatMaker.cc, libmead/FDElstatMaker.h, libmead/FinDiffMethod.cc, libmead/PairGenBorn.cc, libmead/PhysCond.cc, libmead/Polynomial.cc, libmead/Polynomial.h, libmead/AnalyMaker.cc, libmead/AnalyMaker.h, libmead/AnalySlab.cc, libmead/AnalySphere.cc, libmead/Angle.h, libmead/Atom.cc, libmead/AtomID.h, libmead/AtomSet.cc, libmead/AvsSF_read_header.cc, libmead/AvsScalarField.cc, libmead/AvsScalarField.h, libmead/AvsScalarField_input.cc, libmead/Bigmem.cc:
	iostream.h -> iostream, etc., and get it working on SGI

2001-01-10  Thien-Thi Nguyen, 49614  <ttnttn@gage>

	* NOTES: Use correct year.

2001-01-09  Don Bashford  <bashford@gage.scripps.edu>

	* ChangeLog, NOTES: update just before new tag, v-2-1-12.

2001-01-09  Don Bashford  <bashford@gage>

	* Makefile.in: Don't distribute OUTLINE or TODO

	* TODO: minor change

	* swig/swigpp.el:
	Generated #include directives use names like "MEAD/PhysCond.h"
	rather than "../../mead/libmead/PhysCond.h"

	* swig/README:
	More detailed info about building, especially for "ordinary users"

	* INSTALLATION: Stuff about --disable-exceptions

2001-01-08  Don Bashford  <bashford@gage>

	* swig/Makefile.in: dist depends on MEAD.py also

	* Makefile.in: Revert back to requiring DISTTAG

2001-01-06  Don Bashford  <bashford@gage>

	* testing/Makefile.in: Fix typo

	* testing/Makefile.in: Fix bug introduced in last checkin

	* swig/bug.py: Fix typo

	* swig/bug.py:
	Deliberate bug in a MEAD module call to test exception handling.

	* swig/MEAD.j: Add simple exception handling.

	* testing/Makefile.in, swig/Makefile.in: Reduce use of GNUmake-isms

	* configure.in: An option to enable/disable using exceptions

2001-01-05  Don Bashford  <bashford@gage>

	* swig/MEAD.j: Handle MEADexcept

	* libmead/FinDiffElstatPot.cc: Bug fix: Initialize solved to zero

	* libmead/MEADexcept.h: An exception to throw

	* libmead/globals.cc:
	error throws exception instead of dying if USE_EXCEPTIONS
	is defined.

	* swig/meadtypes.i: Add input typemap for C++ string type.

2001-01-04  Don Bashford  <bashford@gage>

	* README: Added some stuff pertaining to python wrapping

	* apps/libmso/FlexiSite.cc: Give the seekdir argument to seekg.

	* libmead/AvsScalarField_input.cc, apps/libmso/FlexiSite.cc:
	Use seekg to position ifstreams rather than the lower-level
	pubseekoff or seekoff functions.

	* libmead/AvsScalarField_input.cc, apps/libmso/FlexiSite.cc:
	grrr. MIPS/SGI compiler still uses seekoff rather than pubseekoff

	* NOTES: Sun support progress.

	* TODO: minor change

	* apps/mulsidecomp/mulsidecomp.cc:
	Don't put explicit dir name for SiteInMulti.h include;
	let -I take care of it.

	* apps/libmso/Makefile.in, configure.in, apps/Makefile.common.in, apps/multiflex/Makefile.in, apps/mulsidecomp/Makefile.in, apps/Makefile.in:
	Makefile changes for move of libmso files from directory
	multiflex to a directory of their own (libmso).

2001-01-03  Don Bashford  <bashford@gage>

	* apps/libmso/MultiSiteMolecule.h, apps/multiflex/MultiSiteMolecule.h:
	Moved MultiSiteMolecule.h from multiflex dir to libmso

	* apps/libmso/FlexiSite.h, apps/multiflex/FlexiSite.h:
	Moved FlexiSite.h from multiflex dir to libmso

	* apps/libmso/MultiSiteMolecule.cc, apps/multiflex/MultiSiteMolecule.cc:
	Moved MultiSiteMolecule.cc from multiflex dir to libmso

	* apps/libmso/FlexiSite.cc, apps/multiflex/FlexiSite.cc:
	Moved FlexiSite.cc from multiflex dir to libmso

	* apps/libmso/SiteUtil.h, apps/multiflex/SiteUtil.h:
	Moved SiteUtil.h from multiflex dir to libmso

	* apps/libmso/MultiFlexiSiteMol.h, apps/multiflex/MultiFlexiSiteMol.h:
	Moved MultiFlexiSiteMol.h from multiflex dir to libmso

	* apps/libmso/SiteUtil.cc, apps/multiflex/SiteUtil.cc:
	Moved SiteUtil.cc from multiflex dir to libmso

	* apps/libmso/MultiFlexiSiteMol.cc, apps/multiflex/MultiFlexiSiteMol.cc:
	Moved MultiFlexiSiteMol.cc from multiflex dir to libmso

	* apps/libmso/AtomRegex.h, apps/multiflex/AtomRegex.h:
	Moved AtomRegex.h from multiflex dir to libmso

	* apps/libmso/SiteInMulti.h, apps/multiflex/SiteInMulti.h:
	Moved SiteInMulti.h from multiflex dir to libmso

	* apps/libmso/AtomRegex.cc, apps/multiflex/AtomRegex.cc:
	Moved AtomRegex.cc from multiflex dir to libmso

	* apps/libmso/SiteInMulti.cc, apps/multiflex/SiteInMulti.cc:
	Moved SiteInMulti.cc from multflex dir to libmso

	* ChangeLog: *** empty log message ***

	* libmead/AnalySphere.cc:
	Change local variable names to avoid confusing shadowing
	of class member data names.

	* configure.in:
	Introduce the makefile substitution variable CXX_DYNLIB_FLAGS
	for cases where some extra libraries need to be explicitly linked
	in when dynamic loading is done.
	Set it properly for Sun C++ verion 5.0, and also properly
	set CXX_SHAREDFLAGS for this case.

	* swig/Makefile.in:
	Make use of the CXX_DYNLIB_FLAGS supplied by configure

	* libmead/globals.cc: split posix using functions for checking on file
	existence, etc. into separate file.
	Remove now-unneeded includes.

	* libmead/posix_using.cc, libmead/Makefile.in:
	split posix using functions for checking on file
	existence, etc. into separate file.

	* libmead/AtomChargeSet.h: const fussiness from Sun 5.0 C++ compiler.

	* libmead/AvsScalarField_input.cc, apps/multiflex/FlexiSite.cc:
	Standard conformance: use pubseekoff rather than seekoff
	on file stream buffers.

	* apps/mulsidecomp/mulsidecomp.cc:
	const fussiness from Sun 5.0 C++ compiler.

2001-01-03  Don Bashford  <bashford@adam>

	* libmead/AnalySphere.cc:
	Change local variable names to avoid confusing shadowing
	of class member data names.

	* configure.in:
	Introduce the makefile substitution variable CXX_DYNLIB_FLAGS
	for cases where some extra libraries need to be explicitly linked
	in when dynamic loading is done.
	Set it properly for Sun C++ verion 5.0, and also properly
	set CXX_SHAREDFLAGS for this case.

	* swig/Makefile.in:
	Make use of the CXX_DYNLIB_FLAGS supplied by configure

	* libmead/globals.cc: split posix using functions for checking on file
	existence, etc. into separate file.
	Remove now-unneeded includes.

	* libmead/posix_using.cc, libmead/Makefile.in:
	split posix using functions for checking on file
	existence, etc. into separate file.

	* libmead/AtomChargeSet.h: const fussiness from Sun 5.0 C++ compiler.

	* libmead/AvsScalarField_input.cc, apps/multiflex/FlexiSite.cc:
	Standard conformance: use pubseekoff rather than seekoff
	on file stream buffers.

	* apps/mulsidecomp/mulsidecomp.cc:
	const fussiness from Sun 5.0 C++ compiler.

2001-01-02  Don Bashford  <bashford@adam>

	* configure.in:
	In conditionals, use -h rather than -L to test more portably
	for symlinks.

	* Makefile.in: Back to less verbosity for dist target command

2001-01-01  Don Bashford  <bashford@adam>

	* Makefile.in: *** empty log message ***

2000-12-31  Don Bashford  <bashford@adam>

	* TODO: *** empty log message ***

	* swig/Makefile.in:
	Empty __init__.py made by touching rather than copying /dev/null

2000-12-30  Don Bashford  <bashford@adam>

	* libmead/SAVanal_calc.cc:
	Fix up buggy handling of sausage_count resulting from Plex -> vector
	translation.

	* swig/Makefile.in: copy MEAD.py from distro to build dir, if needed.

	* Makefile.in: Minor fix

	* swig/Makefile.in:
	In buildign from distro, don't require swig.  Just use
	distro-supplied MEAD_shadow.cc even if it's outdated.

	* Makefile.in: Allow distro building in separate directory
	Descent into swig subdir depends on having python, not swig

2000-12-29  Don Bashford  <bashford@adam>

	* Makefile.in, testing/Makefile.in:
	Get distclean to work properly in the testing subdir

	* swig/Makefile.in:
	Don't re-make .j files (and re-run swig) if MEAD_shadow.cc
	already exists and is up to date relative to the MEAD.j
	and ../libmead/*.h files

	* NOTES: Work on separate building and new version of swig

2000-12-29  Thien-Thi Nguyen, 49614  <ttnttn@adam>

	* swig/README: Mention .jbyhand files.

2000-12-27  Don Bashford  <bashford@adam>

	* swig/swigpp.el:
	Accomodate swig's increased specificity for application of typemaps:
	Now the signature really must be Foo&, not just Foo, to cause the
	typemap for Foo& to be applied.  (As of swig1.3a5)

	* swig/meadtypes.i, swig/MEAD.j:
	Accomodate change in swig's internal naming conditions as of swig1.3a5
	from things like SWIGTYPE_FinDiffElstatPot_p to
	SWIGTYPE_p_FinDiffElstatPot

	* apps/multiflex/Makefile.in: Link math libraries via -lm flag

	* Makefile.in: Don't build libdevel by default

2000-12-26  Don Bashford  <bashford@adam>

	* apps/multiflex/SiteInMulti.cc:
	Make maybe_dirname more cautious and portable

2000-12-16  Don Bashford  <bashford@adam>

	* apps/Makefile.common.in:
	Don't let autoconf define INSTALL here, since it is really used
	in subdirs below.

	* libdevel/Makefile.in, apps/solvate/Makefile.in, apps/solinprot/Makefile.in, apps/sav-driver/Makefile.in, apps/saltscan/Makefile.in, apps/redti/Makefile.in, apps/qmsolvate/Makefile.in, apps/potscan/Makefile.in, apps/potential/Makefile.in, apps/pair_enerdens_test/Makefile.in, apps/out2avs/Makefile.in, apps/nlpotential/Makefile.in, apps/multiflex/Makefile.in, apps/mulsidecomp/Makefile.in, apps/kirkwood_test/Makefile.in, apps/gbtest/Makefile.in, apps/enerdens/Makefile.in, apps/debye_test/Makefile.in, apps/avs2avs/Makefile.in, apps/adf2sls/Makefile.in, apps/add_charge_test/Makefile.in:
	Enable building in a separate directory via VPATH, etc.

	* testing/Makefile: Replaced by a Makefile.in

	* testing/Makefile.in, configure.in:
	Enable testing in separate build dir.

2000-11-01  thi  <ttn@glug.org>

	* TODO: Remove "integrate examples and test suite" (done).

	* NOTES: New entry.

	* configure.in: Add more post-configure symlinking (examples/data
	as testing/data).

	* Makefile.in (check): New target.

	* testing/expect/lyso-glu7.g, testing/expect/lyso-glu7.pkint,
	testing/expect/lyso-glu7.summ,
	testing/expect/multiflex-lyso-glu7-test,
	testing/expect/sphere-test-solinprot,
	testing/expect/sphere-test-solvate-epsin1,
	testing/expect/sphere-test-solvate-epsin4, testing/Makefile,
	testing/README, examples/README: New file.

	* examples/data/ASPsgl.st, examples/data/CTLEUsgl.st,
	examples/data/GLUsgl.st, examples/data/HSCsgl.st,
	examples/data/LYSsgl.st, examples/data/NTLYSsgl.st,
	examples/data/TYRsgl.st, examples/data/bigsphere.pqr,
	examples/data/lyso.mgm, examples/data/lyso.ogm,
	examples/data/lyso.pqr, examples/data/lyso.sites,
	examples/data/sphere.ogm, examples/data/sphere.pqr: Intial
	revision

	* apps/multiflex/SiteInMulti.cc (maybe_dirname):
	Remove debugging output.

	* apps/multiflex/SiteInMulti.cc (maybe_dirname): New static func.
	(SiteInMulti::setup_site_adjusting_refstate): Use `maybe_dirname'
	when forming sitetype filename.

2000-08-30  thi  <ttn@glug.org>

	* TODO: Add task to integrate examples and test suite ("make
	check" support).  Add task to handle `map<A,B>'.  Remove
	build-proper-python-installation task (no longer relevant).

	* acinclude.m4 (AC_PROG_SWIG):
	Do not signal error when SWIG is not found.
	Instead, only emit warning.

	* apps/redti/Makefile.in (prefix, exec_prefix, bindir,
	mkinstalldirs, INSTALL, INSTALL_PROGRAM): New vars.
	(install, uninstall): New targets.

2000-08-29  thi  <ttn@glug.org>

	* Makefile.in (install, uninstall):
	Handle configuration w/o `--enable-wrapping'.

	* swig/Makefile.in (MEAD_shadow.cc):
	Make sure `$(SWIG)' is defined before invoking it.

	* acinclude.m4:
	Fix bug: Remove all (improper) uses of `AC_REQUIRE'.

	* Makefile.in (minusdist): Add 0README.FIRST.

	* README:
	Set version to 2.2.0 in preparation for release.

	* configure.in (MEADVERSION):
	Set to 2.2.0 in preparation for release.

2000-08-29  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* acinclude.m4 (AC_PROG_SWIG): Do not signal error when SWIG is
	not found. Instead, only emit warning.

	* apps/redti/Makefile.in (prefix, exec_prefix, bindir,
	mkinstalldirs, INSTALL, INSTALL_PROGRAM): New vars.
	(install, uninstall): New targets.

	* Makefile.in (install, uninstall): Handle configuration w/o
	`--enable-wrapping'.

	* swig/Makefile.in (MEAD_shadow.cc):
	Make sure `$(SWIG)' is defined before invoking it.

	* acinclude.m4: Fix bug: Remove all (improper) uses of `AC_REQUIRE'.

	* Makefile.in (minusdist): Add 0README.FIRST.

	* README: Set version to 2.2.0 in preparation for release.

	* configure.in (MEADVERSION):
	Set to 2.2.0 in preparation for release.

2000-08-25  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* TODO: Remove swig/swigpp.el foo<bar> -> foo_bar bugfix (done).

2000-08-24  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: New entry.

	* TODO: Remove swig/swigpp.el foo<bar> -> foo_bar bugfix (done).

	* swig/Makefile.in (MEAD_shadow.cc):
	No longer depend on AtomSet.jbyhand.

	* swig/AtomSet.jbyhand: bye bye

	* swig/MEAD.j (AtomSet.jbyhand):
	No longer `%include'.
	(AtomSet.j): Do `%include'.

	* swig/swigpp.el (swigpp-mangle-template-arg):
	New func.
	(swigpp-parse-list): Map `swigpp-mangle-template-arg' over result.

	* swig/Makefile.in (clean):
	Also remove ".swigpp-*" files.

2000-08-08  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* TODO: Remove swig/gen.el bugfix (done).

	* NOTES: New entry.

	* TODO: Remove swigpp-generated .cc files entry (done).

	* swig/swigpp.el (swigpp-process-file):
	No longer create .cc files from inlines.

	* swig/Makefile.in (maintclean): New target.
	* NOTES: New entry.

	* TODO: Remove apps makefile entry (done).  Remove "make dist" and
	"make install" finalization entry (done).

	* Makefile.in (minusdist): Add INSTALLATION.OLD.

	* INSTALLATION: Fix typo.

	* INSTALLATION: Remove version number.  Add section headers: Quick
	Start, MEAD-Specific Configuration Options, and Troubleshooting.
	Add descriptions for `--enable-wrapping' and
	`py-site-packages-dir' ./configure options.  Update apps list and
	do other cleanup.

	* swig/Makefile.in (INSTALL_PROGRAM): New var.

	* swig/Makefile.in, apps/Makefile.in (uninstall): New target.

	* libmead/Makefile.in (install): Call mkinstalldirs first.

	* libmead/Makefile.in (install): Depend on libmead.a.

	* libmead/Makefile.in (uninstall): New target.

	* Makefile.in (install): Fix typo.
	(uninstall): New target.

	* apps/Makefile.common.in (mkinstalldirs): Fix relative-dir bug.

	(clean, install): Use `$(appname)', which must be defined by
	makefiles that include this file.

	(uninstall): New target.

	* apps/solvate/Makefile.in, apps/solinprot/Makefile.in,
	apps/sav-driver/Makefile.in, apps/saltscan/Makefile.in (appname):
	New var.
	(default): Use `appname'.

	* apps/redti/Makefile.in (target, clean_target, distclean_target):
	Delete these targets.

	(appname): New var.
	(default): New target.

	* apps/qmsolvate/Makefile.in, apps/potscan/Makefile.in,
	apps/potential/Makefile.in, apps/pair_enerdens_test/Makefile.in,
	apps/out2avs/Makefile.in, apps/nlpotential/Makefile.in,
	apps/multiflex/Makefile.in, apps/mulsidecomp/Makefile.in,
	apps/kirkwood_test/Makefile.in, apps/gbtest/Makefile.in,
	apps/enerdens/Makefile.in, apps/debye_test/Makefile.in,
	apps/avs2avs/Makefile.in, apps/adf2sls/Makefile.in,
	apps/add_charge_test/Makefile.in (appname): New var.
	(default): Use `appname'.

2000-08-07  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: New entry.

2000-08-02  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* apps/solvate/solvate.py: Also import `sys'.

2000-08-01  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* apps/mulsidecomp/mulsidecomp.cc: Prefix "multiflex" to
	SiteInMulti.h #include directive.

	* apps/Makefile.common.in (srcdir): New var.  (LOCALINCS): Include
	`srcdir'.

	* apps/multiflex/Makefile.in (multiflex): Use `LOCALLIBS' instead
	of `CXXLOADLIBS'.

	* apps/mulsidecomp/Makefile.in (default): New target.

	* apps/Makefile.common.in (CXX_AR_CMD): New var.

	* apps/multiflex/Makefile.in, apps/solvate/Makefile.in,
	apps/solinprot/Makefile.in, apps/sav-driver/Makefile.in,
	apps/saltscan/Makefile.in, apps/qmsolvate/Makefile.in,
	apps/potscan/Makefile.in, apps/pair_enerdens_test/Makefile.in,
	apps/out2avs/Makefile.in, apps/nlpotential/Makefile.in (default):
	New target.

	* apps/multiflex/Makefile.in, apps/mulsidecomp/Makefile.in: Move
	include directive to end of file.

	* apps/kirkwood_test/Makefile.in, apps/gbtest/Makefile.in,
	apps/enerdens/Makefile.in, apps/debye_test/Makefile.in,
	apps/avs2avs/Makefile.in, apps/adf2sls/Makefile.in,
	apps/add_charge_test/Makefile.in, apps/potential/Makefile.in
	(default): New target.

	* configure.in (AC_OUTPUT): Add apps/Makefile.common,
	apps/add_charge_test/Makefile, apps/adf2sls/Makefile,
	apps/avs2avs/Makefile, apps/debye_test/Makefile,
	apps/enerdens/Makefile, apps/gbtest/Makefile,
	apps/kirkwood_test/Makefile, apps/nlpotential/Makefile,
	apps/out2avs/Makefile, apps/pair_enerdens_test/Makefile,
	apps/potential/Makefile, apps/potscan/Makefile,
	apps/qmsolvate/Makefile, apps/saltscan/Makefile,
	apps/sav-driver/Makefile, apps/solinprot/Makefile,
	apps/solvate/Makefile.  No longer symlink Makefiles under app to
	the one in app.

	* apps/solvate/Makefile.in, apps/solinprot/Makefile.in,
	apps/sav-driver/Makefile.in, apps/saltscan/Makefile.in,
	apps/qmsolvate/Makefile.in, apps/potscan/Makefile.in,
	apps/potential/Makefile.in, apps/pair_enerdens_test/Makefile.in,
	apps/out2avs/Makefile.in, apps/nlpotential/Makefile.in: Initial
	revision.

	* apps/multiflex/Makefile.in, apps/mulsidecomp/Makefile.in: Factor
	out common elements to ../Makefile.common.in.  Include that file.

	* apps/kirkwood_test/Makefile.in, apps/gbtest/Makefile.in,
	apps/enerdens/Makefile.in, apps/debye_test/Makefile.in,
	apps/avs2avs/Makefile.in, apps/adf2sls/Makefile.in,
	apps/add_charge_test/Makefile.in, apps/Makefile.common.in: Initial
	revision.

	* apps/Makefile.in (TARGET, LIBDEVEL): Delete these vars.

	(prefix, exec_prefix, bindir, mkinstalldirs, INSTALL,
	INSTALL_PROGRAM, PYSITEPKGDIR, mead_inst_dir, LOCALINCS,
	LOCALLIBS, CXX_OPTFLAGS, CXX_DEBUGFLAGS, CC_OPTFLAGS,
	CC_DEBUGFLAGS, CXX, CC, CPPFLAGS, CXX_DEFS< REGEX_LIB, REGEX_CPP,
	LIBS, top_srcdir, ALL_CPPFLAGS, ALL_CXXFLAGS, ALL_CFLAGS,
	CXXLINK): Move these vars to file Makefile.common.in.

	(target, clean_target, distclean_target): Delete these targets.

	($(TARGET):$(TARGET).o): Move to Makefile.common.in, rewriting to
	use "%" notation.

	(default): New initial target.

	(real_apps, test_apps, broken_apps, clean, distclean, install):
	Rewrite to delegate to each subdirectory's Makefile.

	(.PHONY): Update.

	* apps/README: Mention ../configure.in dependency.

2000-07-28  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: New entry.

	* README: Add developer instructions, in a `DistDelete' block.

	* Makefile.in (dist):
	Filter out "DistDelete" sections from distribution README.

	* README.dist: Now generated on "make dist"

	* README: Update location of Beroza programs.

	* Makefile.in (minusdist): Add NOTES.

	* Makefile.in (dist): Check for var `DISTTAG' and fail if not set.
	Use it when doing "cvs export".

	* swig/Makefile.in (clean): Do not remove MEAD.py and MEAD_shadow.cc.

	(dist): Create file diststamp in swig distribution directory.
	(distclean): Remove MEAD_shadow.cc and MEAD.py but
	only if diststamp does not exist.

2000-07-27  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Makefile.in (dist): Enable `minusdist' processing.
	If an element in `minusdist' is a directory,
	make a stub Makefile and Makefile.in in it.

	* Makefile.in (extradist): Add aclocal.m4.

	* Makefile.in (MEADVERSION):
	Use configure-substituted var instead of hardcoding.

	* configure.in (MEADVERSION): New substituted var.

2000-07-26  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* TODO: Update.

2000-07-21  Don Bashford  <bashford@shelf.scripps.edu>

	* libdevel/ADF_13_27_Data.cc, libdevel/QmMolecule.cc,
	apps/solvate/solvate.cc, apps/sav-driver/sav-driver.cc,
	apps/qmsolvate/qmsolvate.cc, apps/mulsidecomp/mulsidecomp.cc,
	apps/nlpotential/nlpotential.cc, apps/potential/potential.cc,
	apps/solinprot/solinprot.cc, apps/potscan/potscan.cc,
	apps/pair_enerdens_test/pair_enerdens_test.cc,
	apps/multiflex/MultiSiteMolecule.cc, apps/multiflex/FlexiSite.cc,
	apps/multiflex/SiteInMulti.cc: Bug fix: Use of string::data
	replaced by string::c_str

2000-07-15  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: New entry.

	* Makefile.in (extradist): Add configure.

	* Makefile.in (dist): Fix syntax error.

	* swig/Makefile.in (dist): Do not distribute .j->.cc files.

	* acinclude.m4 (AC_PYTHON_DIRS): Fix typo.

	* swig/Makefile.in (list-gluefiles): Delete this target.

	(swig-dd): New var.  (dist): New target.

	* Makefile.in (dd, extradist, minusdist): New vars.  (dist): New
	target.

	* swig/Makefile.in (list-gluefiles): New target.

	* swig/Makefile.in (mead_inst_dir): Use "MEAD".

	(install): Do not install other .py files -- there aren't any!
	Use empty file for __init__.py.

	* apps/solvate/solvate.py: Remove ttn-specific packaging hacks.
	Add "#!" invocation magic.

	* apps/Makefile.in (prefix, exec_prefix, bindir, mkinstalldirs,
	INSTALL,INSTALL_PROGRAM, mead_inst_dir): New vars.  (install):
	New target.

	* acinclude.m4 (AC_PYTHON_DIRS): In function `site_packages_dir',
	find first dir that starts with `sys.exec_prefix' and ends with
	"site-packages".  Also, add test for shell var `PYSITEPKGDIR' and
	exit w/ error if unset.

2000-07-14  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/Makefile.in (install): Fix typo.

	* swig/Makefile.in (mkinstalldirs, INSTALL, INSTALL_SCRIPT,
	PYSITEPKGDIR,mead_inst_dir): New vars, some substituted by
	configure.

	(install): New target.

	* mkinstalldirs: Initial revision.

	* acinclude.m4 (AC_WITH_PYSITEPKGDIR): New macro.
	(AC_PYTHON_DIRS): Require `AC_WITH_PYSITEPKGDIR'.  Handle override
	of shell var `PYSITEPKGDIR', and `AC_SUBST' it.

	* acinclude.m4 (AC_PYTHON_DIRS): Set stub shell var
	`PYSITEPKGDIR'.

	* acinclude.m4 (AC_PYTHON_DIRS): Also look for site-packages dir,
	setting shell variable `PYSITEPKGDIR' to it.

	* configure.in (AC_PROG_INSTALL): Call this macro.

	* libmead/Makefile.in (INSTALL, prefix, exec_prefix, libdir): New
	vars.

	(install): New target.

	* Makefile.in (install): Do not recurse into libdevel.  Recurse
	into apps.

	* Makefile.in (install): New target.

2000-07-08  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/Makefile.in (VPATH): Add `srcdir'- and `top_srcdir'-based
	dirs.  (SWIG_OPTS): Add "-I$(srcdir)".

	(make-j): New var.  (%.j : %.h): Use `make-j'.  Rework to use
	vpath instead of explicit path.

	(clean): No longer depend on `specific-clean'.  (specific-clean,
	CoordPlay.cc, ../libmead/CoordPlay.h): Delete these targets.

2000-07-01  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* configure.in: Fix parallel-build bug: Also symlink MEAD to
	libmead in original source directory.

2000-06-29  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/Makefile.in (clean): Also remove artifacts of an
	interrupted SWIG, including files w/ extensions: head, ii, init,
	wrap.

	* swig/Makefile.in (clean): Also remove .cc files associated w/ .j
	files.

	* swig/Makefile.in (clean): Also remove .j files.

	* swig/test-Atom.so.py, swig/test-AtomSet.so.py,
	swig/test-Coord.so.py: Bye bye

	* swig/wrapped: Bye bye -- register files in Makefile.in now

	* swig/test-SwigPlay2.so.py, swig/test-SwigPlay3.so.py,
	swig/test-SwigPlay4.so.py, swig/testpyCoordPlay.py,
	swig/SwigPlay4.j, swig/test++CoordPlay.cc,
	swig/test-CoordPlay.so.py, swig/test-SwigPlay1.so.py,
	swig/SwigPlay3.h, swig/SwigPlay3.j, swig/SwigPlay4.cc,
	swig/SwigPlay4.h, swig/SwigPlay2.cc, swig/SwigPlay2.h,
	swig/SwigPlay2.i, swig/SwigPlay3.cc, swig/CoordPlay.h,
	swig/CoordPlay.jbyhand, swig/SwigPlay1.cc, swig/SwigPlay1.h,
	swig/SwigPlay1.i: Bye bye

	* swig/README: Update.

	* swig/shadowed: Bye bye -- register files in Makefile.in now

	* swig/Makefile.in (J_FILES): List explicitly instead of mining
	out of file shadowed.  This is now the canonical place to register
	.j files.

2000-06-20  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* TODO (Rework of wrapping configuration/building): Delete task --
	done by ttn.

	* TODO: Assign installation tasks to ttn.

2000-06-16  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/fe-info.sh: Functionality moved into ../acinclude.m4

	* Makefile.in (distclean): Also remove symlink MEAD.

	* configure.in: Move swig stuff into acinclude.m4, a new file.

	(AC_OUTPUT): Remove swig/paths.makefile.  Add swig/Makefile.

	* acinclude.m4: New file.

	* swig/paths.makefile.in: Incorporated into Makefile.in

	* swig/GNUmakefile: Renamed to Makefile

	* swig/Makefile.in: This file inherits GNUmakefile history.  It
	has been massively rewritten.

	* swig/MEAD.j: Include "numeric/arrayobject.h" instead of simply
	"arrayobject.h".

2000-06-14  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: New entry.

	* libmead/globals.h: Add "using std::string".

	* libmead/Sausage.h: Commenting cleanup, no functional change.

	* libmead/Potat.h, libmead/FinDiffElstatPot.h,
	libmead/FDGridLevel.h, libmead/AtomSet.h, libmead/AtomID.h: Add
	"using std::string".

	* Makefile.in (clean, distclean): Also recurse into subdir
	libdevel.

2000-06-13  Don Bashford  <bashford@shelf.scripps.edu>

	* libmead/AvsScalarField.h: Add "using std::string"

2000-06-13  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* configure.in (AC_OUTPUT): Generate ./Makefile last so that var
	`top_srcdir' is correct.

	* ChangeLog: Initial revision.

	* libmead/NonUnif.Plex.cc, libmead/NonUnif.Plex.h,
	libmead/NonUnif.XPlex.cc, libmead/NonUnif.XPlex.h,
	libmead/NonUnif.defs.h, libmead/Sausage.MPlex.cc,
	libmead/Sausage.MPlex.h, libmead/Sausage.Plex.cc,
	libmead/Sausage.Plex.h, libmead/Sausage.defs.h: Delete
	genclass-related files.

2000-06-13  Don Bashford  <bashford@shelf.scripps.edu>

	* NOTES: A little flurry of NOTE making for the v-2-1-1 tag.

	* libdevel/NLFDGridLevel.cc: Get rid of an unnecessary include of
	NonUnif.XPlex.h

	* libdevel/QmMolecule.h: Rather than doing "using std::string" at
	global scope in a header file, I did "typedef std::string string"
	inside the class definitions.  This is an experiment, for now.

2000-06-13  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: Tell of make_windows_dist.sh bit-rot.

	* make_windows_dist.sh: Add warning.  Exit failurefully w/o doing
	anything.

	* INSTALLATION: Remove paragraph explaining subdir gnustuff.

	* README: Replace in-house symlink-to-RCS instructions w/
	reference to /home/ttnttn/build/misc-docs/mead-under-cvs.

	* TODO: Remove reference to gnustuff.

	* NOTES: New entry.

2000-06-12  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Makefile.in (clean, distclean): Use "-" prefix for all actions.

	* configure.in: Revert to 1.22 (var `top_srcdir' not available
	when invoking swig/fe-info).

	* libmead/AtomSet.cc, libmead/AvsScalarField_input.cc,
	libmead/FinDiffMethod.cc, libmead/Potat.cc, libmead/SolvAccVol.cc,
	libmead/globals.cc: Throughout, use `string::c_str' instead of
	`string::data'.

	* swig/meadtypes.i (STRING_IN_MAP): Revert to 1.10.
	(STRING_OUT_MAP): Fix bug: Use `string::c_str' instead of
	`string::data'.

	* libmead/globals.cc: Use "std::string" instead of "string".

	* libmead/globals.h: Replace "using std::string" with explicit
	"std::" prefixes.

2000-06-12  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Makefile.in (clean, distclean): Use "-" prefix for all actions.

	* configure.in: Revert to 1.22 (var `top_srcdir' not available
	when invoking swig/fe-info).

	* libmead/AtomSet.cc, libmead/AvsScalarField_input.cc,
	libmead/FinDiffMethod.cc, libmead/Potat.cc, libmead/SolvAccVol.cc,
	libmead/globals.cc: Throughout, use `string::c_str' instead of
	`string::data'.

	* swig/meadtypes.i (STRING_IN_MAP): Revert to 1.10.
	(STRING_OUT_MAP): Fix bug: Use `string::c_str' instead of
	`string::data'.

	* libmead/globals.cc: Use "std::string" instead of "string".

	* libmead/globals.h: Replace "using std::string" with explicit
	"std::" prefixes.

2000-06-12  Don Bashford  <bashford@gage.scripps.edu>

	* apps/solvate/solvate.cc: Add "using std::string"

	* apps/solinprot/solinprot.cc: Add "using std::string" Also
	convert my previous mods for membranes from using "String" to
	using "string".

	* apps/qmsolvate/qmsolvate.cc, apps/potential/potential.cc,
	apps/multiflex/multiflex.cc: Add "using std::string"

	* apps/mulsidecomp/mulsidecomp.cc: Add "using std::string" Also an
	include fixup.

2000-06-12  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* configure.in: Fix parallel-build bug: Use var `top_srcdir' when
	invoking swig/fe-info.sh.

	* configure.in: Fix parallel-build bug: Use var `top_srcdir' when
	sym-linking `MEAD'.

	* swig/meadtypes.i (STRING_IN_MAP): Kludge: Rework this macro to
	use two-arg `string' constructor instead of one-arg ctor.

2000-06-09  Don Bashford  <bashford@gage.scripps.edu>

	* libmead/multPotxCharge.cc: Get rid of dependency on Pix.h

	* libmead/globals.h, libmead/SolvAccVol.h: Add "using std::string"

	* libmead/SolvAccVol.cc: Include <string> and add "using
	std::string"

	* libmead/SAVanal_calc.cc: Add "using std::vector"

	* libmead/FinDiffMethod.h, libmead/Atom.h: Add "using std::string"

	* libmead/FDGridLevel.cc: Add "using std::vector"

2000-06-07  Don Bashford  <bashford@gage.scripps.edu>

	* apps/solinprot/solinprot.cc: Allow for a membrane that has the
	same dielectric constant as the protein, using the new
	ThreeValueDielMembAtomsAtoms class.

	* libmead/Elstat_list_init.cc, libmead/DielMembAtoms.h,
	libmead/DielMembAtoms.cc: Added the ThreeValueDielMembAtomsAtoms
	class.

2000-06-03  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/meadtypes.i: Rework using "<string>" instead of
	"<String.h>".

2000-06-02  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* libmead/FDGridLevel.cc: Include `<vector>' as a dependency.
	Include MEAD/NonUnif.h as a dependency.  Do not include
	MEAD/NonUnif.XPlex.h as a dependency.

	(FDGridLevel::set_up_sor): Re-type `nuevenplex' and `nuoddplex' as
	`vector<NonUnif>' instead of `NonUnifXPlex', and map NonUnifXPlex
	methods appropriately.

	* libmead/SAVanal_calc.cc: Do not include MEAD/Sausage.MPlex.h as
	a dependency.  Include `<vector>' as a dependency.

	(SolvAccVolRep::anal_calc): Re-type `sg_plex' as
	`vector<Sausage>', and map SausageMPlex methods appropriately.
	Also, declare local var `empty_plex' for assignment as a
	replacement for `SausageMPlex::clear()'.

	* libmead/Makefile.in (MEAD_OBJECTS): Delete elements:
	NonUnif.Plex.o, NonUnif.XPlex.o, Sausage.MPlex.o and
	Sausage.Plex.o.

	* libmead/PointCharge.h: Delete GNU C++ specific "#pragma
	interface".

	* swig/gen.el: Use C++-style typedefs instead of SWIG-style
	(surround w/ `%{' and `%}').

	* swig/meadtypes.i: Rerun gen.el, capture output.  Do not generate
	`vector<String>'.  Rewrite `vector<String>' as `vector<string>'.

	* swig/GNUmakefile (distclean): New target.

	* swig/AtomSet.jbyhand: Rework using "<string>" instead of
	"<String.h>".

	* Makefile.in (distclean): Also recurse into subdir swig.

	* swig/gen.el (gen-subst): Only prefix "MEAD/" if `c-type' begins
	w/ a capital letter.

	* swig/gen.el (gen-subst): Prefix header w/ "MEAD/".

	* swig/gen.el: For typedefs, use std::FOO instead of just FOO.

2000-06-01  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* apps/multiflex/multiflex.cc, libdevel/QmMolecule.cc,
	libdevel/ADF_13_27_Data.cc: More rework using "<string>" instead
	of "<String.h>".

	* libdevel/Makefile.in (LOCALINCS): Use `top_srcdir'.

	* NOTES: Augment Plex->vector notes.

	* NOTES: Add notes on Plex usage.

2000-05-31  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* apps/Makefile.in (LOCALINCS): Kludge parent dir prefix.

	* swig/paths.makefile.in (top_srcdir): New var, substituted.

	* swig/GNUmakefile (MEADINC): Use `top_srcdir'.

	* apps/multiflex/Makefile.in, apps/mulsidecomp/Makefile.in,
	apps/Makefile.in (LOCALINCS): Use `top_srcdir'.

	* libmead/Makefile.in (INCLUDES): Use `top_srcdir'.

	* configure.in: Change post-configure MEAD symlinking to do it
	from `top_srcdir'.

	* libmead/AtomChargeSet.cc: Prefix "MEAD/" to Bigmem.h.

	* libmead/FinDiffElstatPot.h: Prefix "MEAD/" to AtomChargeSet.h.

	* libmead/ChargeDist.h: Prefix "MEAD/" to globals.h.

	* Makefile.in (clean, distclean): No longer handle subdir
	gnustuff.

	* Makefile.in (subdirs): Remove `gnustuff'.

	* configure.in: Do not check for libg++.  (GNUSTUFF_LIB,
	GNUSTUFF_OBJS_NEEDED): Do not set or substitute these variables.

	(AC_OUTPUT): Delete gnustuff/Makefile.

	* libmead/globals.cc (two_arg_error, ttn_hack): Delete.

	* swig/GNUmakefile (MEADINCS, MEADLIBS): Remove gnustuff-related
	elements.

	* apps/multiflex/Makefile.in (LOCALINCS, CXXLOADLIBS): Remove
	gnustuff-related elements.

	* apps/mulsidecomp/Makefile.in, apps/Makefile.in (LOCALINCS,
	LOCALLIBS): Remove gnustuff-related elements.

	* apps/Makefile.in (GNUSTUFF_LIB): Delete.

	* libdevel/Makefile.in (GNUSTUFF_LIB, GNUSTUFF_OBJS_NEEDED):
	Delete.

	* libmead/Makefile.in (GNUSTUFF_LIB, GNUSTUFF_OBJS_NEEDED):
	Delete.

	(INCLUDES): Remove gnustuff-related elements.

	* configure.in: Do not check for String.h.

	* libdevel/ADF_13_27_Data.cc, libdevel/ADF_13_27_Data.h,
	libdevel/AvsScalarFromVec.h, libdevel/NLFDGridLevel.h,
	libdevel/NonLinElyt.h, libdevel/QmMolecule.cc,
	libdevel/QmMolecule.h: Rework using "<string>" instead of
	"<String.h>".

	* libmead/Potat.h, libmead/AvsScalarField.h: Remove unused
	comment; no functional change.

	* apps/multiflex/FlexiSite.h, apps/multiflex/MultiFlexiSiteMol.cc,
	apps/multiflex/MultiFlexiSiteMol.h,
	apps/multiflex/MultiSiteMolecule.cc,
	apps/multiflex/MultiSiteMolecule.h, apps/multiflex/SiteInMulti.cc,
	apps/multiflex/SiteInMulti.h, apps/multiflex/SiteUtil.cc,
	apps/multiflex/SiteUtil.h, apps/multiflex/multiflex.cc,
	apps/nlpotential/nlpotential.cc, apps/out2avs/out2avs.cc,
	apps/pair_enerdens_test/pair_enerdens_test.cc,
	apps/potential/potential.cc, apps/potscan/potscan.cc,
	apps/qmsolvate/qmsolvate.cc, apps/saltscan/saltscan.cc,
	apps/sav-driver/sav-driver.cc, apps/solinprot/solinprot.cc,
	apps/solvate/solvate.cc, apps/adf2sls/adf2sls.cc,
	apps/avs2avs/avs2avs.cc, apps/enerdens/enerdens.cc,
	apps/gbtest/gbtest.cc, apps/kirkwood_test/kirkwood_test.cc,
	apps/mulsidecomp/mulsidecomp.cc, apps/multiflex/FlexiSite.cc:
	Rework using "<string>" instead of "<String.h>".

2000-05-30  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* libmead/Atom.h, libmead/AtomID.cc, libmead/AtomID.h,
	libmead/AtomSet.cc, libmead/AtomSet.h,
	libmead/AvsSF_read_header.cc, libmead/AvsScalarField.cc,
	libmead/AvsScalarField.h, libmead/AvsScalarField_input.cc,
	libmead/FDGridLevel.cc, libmead/FDGridLevel.h,
	libmead/FinDiffElstatPot.cc, libmead/FinDiffElstatPot.h,
	libmead/FinDiffMethod.cc, libmead/FinDiffMethod.h,
	libmead/Potat.cc, libmead/Potat.h, libmead/Sausage.cc,
	libmead/Sausage.h, libmead/Shell.cc, libmead/SolvAccVol.cc,
	libmead/SolvAccVol.h: Rework using "<string>" instead of
	"<String.h>".

	* libmead/globals.h: Rework using `<string>' instead of
	`<String.h>'.

	* libmead/globals.cc: Rework using `<string>' instead of
	`<String.h>'.

	(two_arg_error): New static func.  (ttn_hack): New var, but this
	will be deleted after gnustuff is removed.

	* TODO: Take ownership of packaging.

	* TODO: Reformat w/ owner info first.

2000-05-27  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: Document "MEAD/" #include change.

	* configure.in: Add a post-configure commands to symlink build-dir
	libmead/MEAD to source-dir libmead.  This is to accommodate
	libmead/*.h having "MEAD/" prefixes in their #include lines.

	* configure.in: Comment, no functional change.

	* apps/add_charge_test/add_charge_test.cc,
	apps/adf2sls/adf2sls.cc, apps/avs2avs/avs2avs.cc,
	apps/debye_test/debye_test.cc, apps/enerdens/enerdens.cc,
	apps/gbtest/gbtest.cc, apps/kirkwood_test/kirkwood_test.cc,
	apps/mulsidecomp/mulsidecomp.cc, apps/multiflex/AtomRegex.cc,
	apps/multiflex/FlexiSite.cc, apps/multiflex/FlexiSite.h,
	apps/multiflex/MultiSiteMolecule.cc,
	apps/multiflex/MultiSiteMolecule.h, apps/multiflex/SiteInMulti.cc,
	apps/multiflex/SiteInMulti.h, apps/multiflex/SiteUtil.cc,
	apps/multiflex/SiteUtil.h, apps/multiflex/multiflex.cc,
	apps/nlpotential/nlpotential.cc, apps/out2avs/out2avs.cc,
	apps/pair_enerdens_test/pair_enerdens_test.cc,
	apps/potential/potential.cc, apps/potscan/potscan.cc,
	apps/qmsolvate/qmsolvate.cc, apps/saltscan/saltscan.cc,
	apps/sav-driver/sav-driver.cc, apps/solinprot/solinprot.cc,
	apps/solvate/solvate.cc, apps/solvate/solvate.py,
	libdevel/ADF_13_27_Data.cc, libdevel/AmstFitDens.cc,
	libdevel/AmstFitDens.h, libdevel/AvsScalarFromVec.h,
	libdevel/BoltNonLinElytByAtoms.cc,
	libdevel/BoltNonLinElytByAtoms.h,
	libdevel/DummyNonLinElytByAtoms.h, libdevel/NLFDElstat.cc,
	libdevel/NLFDElstat.h, libdevel/NLFDGridLevel.cc,
	libdevel/NLFDGridLevel.h, libdevel/NonLinElyt.h,
	libdevel/NonLin_Elstat_list_init.cc, libdevel/QmElement.cc,
	libdevel/QmMolecule.cc, libdevel/QmMolecule.h,
	libdevel/USternNonLinElytByAtoms.cc,
	libdevel/USternNonLinElytByAtoms.h, libdevel/integrate3D.h,
	libdevel/nlsor.cc, libmead/AnalyMaker.cc, libmead/AnalySlab.cc,
	libmead/AnalySphere.cc, libmead/Angle.cc, libmead/Atom.cc,
	libmead/AtomChargeSet.cc, libmead/AtomID.cc, libmead/AtomSet.cc,
	libmead/AvsSF_read_header.cc, libmead/AvsScalarField.cc,
	libmead/AvsScalarField_input.cc, libmead/Bigmem.cc,
	libmead/CLShell.cc, libmead/ChargeCubeRep.cc,
	libmead/ChargeDist.cc, libmead/CubeLatSpec.cc, libmead/Debye.cc,
	libmead/DielByAtoms.cc, libmead/DielCubeRep.cc,
	libmead/DielMembAtoms.cc, libmead/DielectricEnvironment.cc,
	libmead/DielectricSlab.cc, libmead/DielectricSphere.cc,
	libmead/ElectrolyteByAtoms.cc, libmead/ElectrolyteEnvironment.cc,
	libmead/ElstatMaker.cc, libmead/ElstatPot.cc,
	libmead/Elstat_list_init.cc, libmead/ElySphere.cc,
	libmead/FDChargeIterator.cc, libmead/FDElstatMaker.cc,
	libmead/FDGridLevel.cc, libmead/FinDiffElstatPot.cc,
	libmead/FinDiffMethod.cc, libmead/ManyPointCharge.cc,
	libmead/NonUnif.Plex.cc, libmead/NonUnif.Plex.h,
	libmead/NonUnif.XPlex.cc, libmead/NonUnif.XPlex.h,
	libmead/OnePointCharge.cc, libmead/Pair.cc,
	libmead/PairGenBorn.cc, libmead/PhysCond.cc,
	libmead/Polynomial.cc, libmead/Potat.cc, libmead/SAVanal_calc.cc,
	libmead/SAVcalc_cuberep.cc, libmead/SAVtag_points.cc,
	libmead/Sausage.MPlex.cc, libmead/Sausage.MPlex.h,
	libmead/Sausage.Plex.cc, libmead/Sausage.Plex.h,
	libmead/Sausage.cc, libmead/Shell.cc, libmead/SolvAccVol.cc,
	libmead/TPShell.cc, libmead/UniformDielectric.cc,
	libmead/UniformElectrolyte.cc, libmead/globals.cc,
	libmead/multPotxCharge.cc, libmead/sor.cc,
	libmead/ElectrolyteEnvironment.h, libmead/AnalyMaker.h,
	libmead/AnalySlab.h, libmead/AnalySphere.h, libmead/Angle.h,
	libmead/Atom.h, libmead/AtomChargeSet.h, libmead/AtomID.h,
	libmead/AtomSet.h, libmead/AvsScalarField.h, libmead/CLShell.h,
	libmead/ChargeCubeRep.h, libmead/ChargeDist.h,
	libmead/CubeLatSpec.h, libmead/Debye.h, libmead/DielByAtoms.h,
	libmead/DielCubeRep.h, libmead/DielMembAtoms.h,
	libmead/DielectricEnvironment.h, libmead/DielectricSlab.h,
	libmead/DielectricSphere.h, libmead/ElectrolyteByAtoms.h,
	libmead/ElstatMaker.h, libmead/ElstatPot.h, libmead/ElySphere.h,
	libmead/FDChargeIterator.h, libmead/FDElstatMaker.h,
	libmead/FDGridLevel.h, libmead/FinDiffElstatPot.h,
	libmead/FinDiffMethod.h, libmead/ManyPointCharge.h,
	libmead/NonUnif.defs.h, libmead/OnePointCharge.h, libmead/Pair.h,
	libmead/PairGenBorn.h, libmead/PhysCond.h, libmead/PointCharge.h,
	libmead/Potat.h, libmead/Sausage.defs.h, libmead/Sausage.h,
	libmead/Shell.h, libmead/SolvAccVol.h, libmead/TPShell.h,
	libmead/UniformDielectric.h, libmead/UniformElectrolyte.h,
	libmead/VertElem.h, libmead/Vertex.h: Prefix "MEAD/" to #include
	files.

2000-05-26  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* TODO: Reformat using Outline Mode.

2000-05-25  Don Bashford  <bashford@gage.scripps.edu>

	* TODO: New item for Don to do.

	* NOTES: Check in for tagging version v-2-1-0

	* TODO: Something about dependency generation for Makefiles

	* apps/debye_test/debye_test.cc,
	apps/add_charge_test/add_charge_test.cc: Don't try to use get_info
	(which is no longer there).

	* libdevel/USternNonLinElytByAtoms.h,
	libdevel/USternNonLinElytByAtoms.cc, libdevel/NonLinElyt.h,
	libdevel/NonLinElyt.cc, libdevel/NLFDElstat.h,
	libdevel/NLFDElstat.cc, libdevel/DummyNonLinElytByAtoms.h,
	libdevel/DummyNonLinElytByAtoms.cc,
	libdevel/BoltNonLinElytByAtoms.h,
	libdevel/BoltNonLinElytByAtoms.cc, libdevel/AmstFitDens.h,
	libdevel/AmstFitDens.cc: Removed rtti faking and
	info_string/get_info stuff.

2000-05-24  Don Bashford  <bashford@gage.scripps.edu>

	* swig/GNUmakefile: Point to right place for Python include files
	(This is a hack that by-passes configure, etc.)

2000-05-23  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Check in for tagging, merged-simplify-for-win

	* TODO: Check-in for tagging.

	* swig/GNUmakefile: MEAD_shadow.cc depends on MEAD.j

	* swig/MEAD.j: Oops.  Remove call to now-nonexistent function,
	initialize_globaldata

	* swig/genpot.py: Calculate a potential of a molecule and put in a
	Numeric array.  Initial version is same as on my overheads of May
	2000 for Novartis.

	* swig/interact.py: Change to make it identical to the version on
	my May 2000 overheads for Novartis.

	* swig/sol.py: Initial rev is same as overhead in my May 2000 talk
	for Novartis.

	* NOTES: Stuff about the merge.

	* TODO: A list of things to do.  Initital rev.

	* libmead/ElstatPot.cc, libmead/ElstatPot.h,
	libmead/Elstat_list_init.cc, libmead/ElySphere.cc,
	libmead/ElySphere.h, libmead/FDElstatMaker.cc,
	libmead/FDElstatMaker.h, libmead/FDGridLevel.h,
	libmead/FinDiffElstatPot.cc, libmead/FinDiffElstatPot.h,
	libmead/FinDiffMethod.h, libmead/ManyPointCharge.cc,
	libmead/ManyPointCharge.h, libmead/OnePointCharge.cc,
	libmead/OnePointCharge.h, libmead/PairGenBorn.cc,
	libmead/PairGenBorn.h, libmead/SAVanal_calc.cc,
	libmead/SolvAccVol.cc, libmead/SolvAccVol.h,
	libmead/UniformDielectric.cc, libmead/UniformDielectric.h,
	libmead/UniformElectrolyte.cc, libmead/UniformElectrolyte.h,
	libmead/wrap_typeinfo, swig/AtomSet.jbyhand, swig/MEAD.j, NOTES,
	configure.in, libmead/AnalyMaker.cc, libmead/AnalyMaker.h,
	libmead/AnalySlab.cc, libmead/AnalySlab.h, libmead/AnalySphere.cc,
	libmead/AnalySphere.h, libmead/AtomChargeSet.cc,
	libmead/AtomChargeSet.h, libmead/AtomSet.cc, libmead/AtomSet.h,
	libmead/ChargeDist.cc, libmead/ChargeDist.h,
	libmead/CubeLatSpec.cc, libmead/CubeLatSpec.h, libmead/Debye.cc,
	libmead/Debye.h, libmead/DielByAtoms.cc, libmead/DielByAtoms.h,
	libmead/DielCubeRep.cc, libmead/DielCubeRep.h,
	libmead/DielMembAtoms.cc, libmead/DielMembAtoms.h,
	libmead/DielectricEnvironment.cc, libmead/DielectricEnvironment.h,
	libmead/DielectricSlab.cc, libmead/DielectricSlab.h,
	libmead/DielectricSphere.cc, libmead/DielectricSphere.h,
	libmead/ElectrolyteByAtoms.cc, libmead/ElectrolyteByAtoms.h,
	libmead/ElectrolyteEnvironment.cc,
	libmead/ElectrolyteEnvironment.h, libmead/ElstatMaker.cc,
	libmead/ElstatMaker.h, make_windows_dist.sh: Merging in changes
	from the simplify-for-win branch.

	* NOTES: Check-in for version, win-sgi-work

	* make_windows_dist.sh: Minor fixes

2000-05-22  Don Bashford  <bashford@gage.scripps.edu>

	* swig/AtomSet.jbyhand: A by-hand fix up of swigpp-generated
	header which allows for proper wrapping of the new
	build_from_vectors member function.

	* swig/AtomSet.jbyhand: New file.

2000-05-18  Don Bashford  <bashford@gage.scripps.edu>

	* configure.in: Turn on -g flag for debugging in more situations.

2000-05-14  Don Bashford  <bashford@gage.scripps.edu>

	* libmead/CubeLatSpec.h: Remove a spurious nowrap tag left behind
	from the get_info function removal.

2000-05-13  Don Bashford  <bashford@gage.scripps.edu>

	* make_windows_dist.sh: Don't need to deal with wrap_typeinfo

	* libmead/wrap_typeinfo: Don't need this file since we no longer
	need to fake RTTI

	* libmead/FinDiffMethod.h: String.h must be included because of
	changes elswere

	* libmead/FDElstatMaker.cc: Don't fake RTTI (use real thing)

	* libmead/UniformElectrolyte.h, libmead/UniformElectrolyte.cc,
	libmead/UniformDielectric.h, libmead/UniformDielectric.cc,
	libmead/SolvAccVol.h, libmead/SolvAccVol.cc,
	libmead/SAVanal_calc.cc, libmead/PairGenBorn.h,
	libmead/PairGenBorn.cc, libmead/OnePointCharge.h,
	libmead/OnePointCharge.cc, libmead/ManyPointCharge.h,
	libmead/ManyPointCharge.cc, libmead/FinDiffElstatPot.h,
	libmead/FinDiffElstatPot.cc, libmead/FDGridLevel.h,
	libmead/FDElstatMaker.h, libmead/ElySphere.h,
	libmead/ElySphere.cc, libmead/ElstatPot.h, libmead/ElstatPot.cc,
	libmead/ElstatMaker.h, libmead/ElstatMaker.cc,
	libmead/ElectrolyteEnvironment.h,
	libmead/ElectrolyteEnvironment.cc, libmead/ElectrolyteByAtoms.h,
	libmead/ElectrolyteByAtoms.cc, libmead/DielectricSphere.h,
	libmead/DielectricSphere.cc, libmead/DielectricSlab.h,
	libmead/DielectricSlab.cc, libmead/DielectricEnvironment.h,
	libmead/DielectricEnvironment.cc, libmead/DielMembAtoms.h,
	libmead/DielMembAtoms.cc, libmead/DielCubeRep.h,
	libmead/DielCubeRep.cc, libmead/DielByAtoms.h,
	libmead/DielByAtoms.cc, libmead/Debye.h, libmead/Debye.cc,
	libmead/CubeLatSpec.h, libmead/CubeLatSpec.cc,
	libmead/ChargeDist.h, libmead/ChargeDist.cc, libmead/AtomSet.h,
	libmead/AtomSet.cc, libmead/AtomChargeSet.h,
	libmead/AtomChargeSet.cc, libmead/AnalySphere.h,
	libmead/AnalySphere.cc, libmead/AnalySlab.h, libmead/AnalySlab.cc,
	libmead/AnalyMaker.h, libmead/AnalyMaker.cc: General change
	involving many files: Removed the faking of RTTI (use the real
	thing) Removed the storage of info_string and the get_string
	function from classes that had it.

	* NOTES: Check in for branch snapshot.

	* swig/MEAD.j: Arrange for Python to call initialize_globaldata
	upon loading.

	* apps/solvate/solvate.cc: call initialize_globaldata

	* libmead/globals.cc, libmead/globals.h: New scheme for
	initializing global data via explicit function call

	* libmead/SAVcalc_cuberep.cc, libmead/SAVtag_points.cc: Use
	cnullpt rather than &cnull for test

	* libmead/Elstat_list_init.cc: Lists are now initilized by calling
	do_elstat_inits.

	* NOTES: Check in for snapshot sgi-works-win-sorta

	* apps/mulsidecomp/mulsidecomp.cc: more std:: qualifiers

	* make_windows_dist.sh: Initial rev

2000-05-12  Don Bashford  <bashford@gage.scripps.edu>

	* libmead/AtomChargeSet.h: Don't wrap pc_begin and pc_end

	* libmead/AtomChargeSet.h, libmead/FinDiffElstatPot.h: Don't wrap
	get_info (avoids Windows problem)

	* libmead/Polynomial.cc: Fix Windows fix

	* libmead/OnePointCharge.cc: More std declarations for Windows

	* libmead/FDGridLevel.h: Include NonUnif.h, even though it
	shouldn't be necessary.  This works around a Windows C++
	compiler/linker bug.

	* libmead/Potat.h: Fix typo

	* libmead/Polynomial.cc, libmead/Polynomial.h: More std
	declarations for Windows

	* libmead/PairGenBorn.h: Include AtomID.h.  Shouldn't be needed
	but Windows compiler/link gets confused.

	* libmead/ManyPointCharge.h, libmead/PairGenBorn.h,
	libmead/Potat.h: More std declarations for Windows

	* libmead/globals.cc: Fix type in Win32 stuff

	* libmead/PairGenBorn.cc: More std:: stuff

	* libmead/Polynomial.cc: Cater to Windows lack of modern for init
	scope.

	* libmead/Polynomial.cc: Workaround for some missing templates in
	Windows

	* libmead/AnalySphere.cc: Cater to Windows lack of modern for init
	scope.

	* libmead/AtomChargeSet.cc, libmead/AtomSet.cc,
	libmead/PairGenBorn.cc: More std declarations for Windows

	* libmead/Potat.cc: little fix

	* libmead/Potat.cc: More std declarations for Windows

	* libmead/globals.cc: Another Windows workaround

	* libmead/globals.cc: Work around Windows header oddities

	* libmead/OnePointCharge.cc: More std declarations for Windows

	* swig/interact.py: Interaction between two molecules A
	non-working example.  For illustrative purposes only.

	* swig/tat.py: A few more tests on the get_coarse_field result

	* swig/GNUmakefile: Add hackish AtomSet.jbyhand dependency

	* swig/MEAD.j: Fixed up the Numeric_array/get_coarse_field
	function

	* swig/tat.py: Add a test of get coarse field

	* swig/MEAD.j: Init import array thingy.

	* libmead/AtomSet.h: Yet another std qualifier

	* swig/GNUmakefile: Debugging flag on, more includes for numeric
	py

	* configure.in: back off: mips4 -> mips3

	* swig/meadtypes.i: Better std:: declarations.

2000-05-11  Don Bashford  <bashford@gage.scripps.edu>

	* swig/MEAD.j: Shadow FinDiffMethod and add native function
	FDEP_to_ElstatPot

	* libmead/FinDiffElstatPot.h: Mods seen by SWIG/Python only: Tag
	the right ctor for wrapping Add function energy_of_ACS_FDEP
	(similar to energy_of in ElstatPot.h)

	* swig/tat.py: Much more extensive testing, inlcuding solvate-like
	stuff and more.

	* swig/shadowed: Add FinDiffElstatPot

	* swig/meadtypes.i: A lot of hand editing to get these typemaps to
	really work, particularly the ones involving "native" types like
	int.

	* libmead/FinDiffElstatPot.cc, libmead/FinDiffElstatPot.h: Add
	functions to allow getting out coarse grid data as arrays, and
	finding info about its spacing etc.

	* libmead/FDGridLevel.cc: Added grid_to_c_array (fixed err msg
	typo elswhere)

	* libmead/FDGridLevel.h: Added grid_to_c_array

	* libmead/AtomSet.h, libmead/AtomSet.cc: Added build_from_vectors

2000-05-11  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/MEAD.j (Numeric_array): Add native method, exported as
	`get_coarse_field'.

2000-05-11  Don Bashford  <bashford@gage.scripps.edu>

	* swig/tat.py: Test function for build from arrays

	* libmead/AtomSet.cc: Implemented build_from_arrays

	* libmead/AtomSet.h: Try wrapping build_from_arrays (pointer
	version)

2000-05-11  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* libmead/Makefile.in (INCLUDES): Add "-I../gnustuff" since
	String.h is generated via configure-substitution.

	* libmead/Makefile.in: Fix typo.

	* libmead/Makefile.in (INCLUDES): New var.  (ALL_CPPFLAGS): Use
	`INCLUDES'.

	* libmead/FinDiffElstatPot.h: Add swigpp directives for `class
	FinDiffElstatPot'.

	(FinDiffElstatPot::coarse_field_into_array): New public member
	func.

	* swig/MEAD.j (CubeLatSpec.j): Include.

2000-05-11  Don Bashford  <bashford@gage.scripps.edu>

	* swig/GNUmakefile: Hack using ifeq to get things to work with
	SGI's CC.  This shouldn't break Linux support, but I haven't
	tested it.

	* swig/paths.makefile.in: Get CXX and so on

	* swig/meadtypes.i: Move typedefs involving std into C++ literal
	section (since SWIG chokes on namespace syntax)

	* libdevel/integrate3D.h: fix typo

	* swig/GNUmakefile: fix non-standard ln usage

	* apps/multiflex/Makefile.in: Support for AR command other than ar
	(e.g. "CC -ar -o" under SGI) which is sometimes needed to get the
	right templates instantiated in the library.  Also fix library
	ordering problem on link command.

	* apps/mulsidecomp/mulsidecomp.cc: Put .h extensions on iostream,
	etc. for SGI

	* libdevel/AvsScalarFromVec.h: Minor bug fixes for SGI

	* libdevel/AvsScalarFromVec.cc: Add std namespace qualifier

	* libdevel/integrate3D.h: Provide return value for operator=

	* libmead/Makefile.in, libdevel/Makefile.in, configure.in: Support
	for AR command other than ar (e.g. "CC -ar -o" under SGI) which is
	sometimes needed to get the right templates instantiated in the
	library.

	* apps/gbtest/gbtest.cc: Put .h extensions on iostream, etc. for
	SGI

2000-05-11  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/shadowed (CubeLatSpec): Add.

	* libmead/CubeLatSpec.h: Add swigpp directives for classes
	`CubeLatSpec'.

	* libmead/AtomSet.cc (AtomSet::build_from_arrays): New method,
	empty.  TODO.

	* libmead/AtomSet.h (AtomSet::build_from_arrays): New method.

2000-05-10  Don Bashford  <bashford@gage.scripps.edu>

	* swig/meadtypes.i: Add some namespace specifiers to satisfy MS
	compiler

	* configure.in: Fix a non-standard ln usage

2000-05-07  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/MEAD.j (PhysCond.j): Include.

	* swig/shadowed (PhysCond): Add.

	* libmead/PhysCond.h: Add swigpp directives for `class PhysCond'.

2000-05-01  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* apps/solvate/solvate.py: Add RCS tags, no functional change.

	* apps/solvate/solvate.py: Initial revision.

	* swig/test-AtomSet.so.py: Import `MEAD' instead of `AtomSet'.

	* swig/MEAD.j: Initial revision.

	* swig/GNUmakefile (J_FILES): New var.

	(MEADLIBS): Reorder libgnustuff after libmead.

	(all): Rewrite to build overall-wrap from MEAD.j.

	(%_wrap.cc:%.i, %_shadow.cc:%.j): Use "-c" in swig invocation.

	(.PRECIOUS): Add `%.o'.

	* swig/swigpp.el (swigpp-mask-arg-default-values): New func.
	(swigpp-mask): Call `swigpp-mask-arg-default-values'.

	(swigpp-map-ctor): No longer do implicit default-ctor handling.
	Return nil if no ctors are found.  (swigpp-map-members): Handle
	nil return of `swigpp-map-ctor'.

	(swigpp-render-class): Include inheritence info in output.  Fix
	scope abuse bug: Use symbol properties instead of dynamic vars.

	(swigpp-process-class): Wrap in `save-excursion'.  Comment out
	extra-class processing (for now).  Arglist now includes `workbuf'
	instead of generating one locally.  Arglist now includes `inher',
	which is saved in a symbol property.

	(swigpp-process-file): Capture inheritence info, and pass to
	`swigpp-process-class'.  Ignore templates (for now).  Generate
	working buffer and pass to `swigpp-process-class'.

	* swig/shadowed (ChargeDist, AtomChargeSet,
	DielectricEnvironment,DielByAtoms, TwoValueDielectricByAtoms,
	ElectrolyteByAtoms,ElectrolyteEnvironment, FinDiffMethod,
	ElstatPot): Add.

	* libmead/FinDiffMethod.h: Add swigpp directives for class
	`FinDiffMethod'.

	* libmead/ElstatPot.h: Add swigpp directives for classes
	`ElstatPot' and `ElstatPot_lett'.

	* libmead/ElectrolyteEnvironment.h: Add swigpp directives for
	classes `ElectrolyteEnvironment' and
	`ElectrolyteEnvironment_lett'.

	* libmead/ElectrolyteByAtoms.h: Add swigpp directives for class
	`ElectrolyteByAtoms'.

	* libmead/DielectricEnvironment.h: Add swigpp directives for
	classes `DielectricEnvironment' and `DielectricEnvironment_lett'.

	* libmead/DielByAtoms.h: Add swigpp directives for class
	`TwoValueDielectricByAtoms'.

	* libmead/Coord.h: Modify swigpp directives for class `Coord' to
	disable wrapping of `Coord()'.

	* libmead/ChargeDist.h: Add swigpp directives for classes
	`ChargeDist' and `ChargeDist_lett'.

	* libmead/AtomSet.h: Modify swigpp directives for class `AtomSet'
	to enable wrapping of `geom_cent()'.

	* libmead/AtomChargeSet.h: Add swigpp directives for class
	`AtomChargeSet'.

2000-04-29  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-process-file): Surround entire output w/
	ifndef preprocessor directives to guard against double-inclusion.

	* swig/swigpp.el (swigpp-process-file): When generating .cc file,
	do not create backup files.

	* swig/swigpp.el (swigpp-process-file): When generating .cc file,
	do not do "#include ../libmead/CLASS.h".

2000-04-28  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/test-AtomSet.so.py: Also see if we can read ../tric.pqr.

	* swig/test-AtomSet.so.py: New file.

	* libmead/Atom.h (Atom::print): Do not wrap these two methods.

	* libmead/Coord.h (Coord::print): Do not wrap this method.

	* swig/swigpp.el (swigpp-parse-tree): Rewrite func handling.
	(swigpp-render-func): Rewrite.

	* swig/swigpp.el (swigpp-map-members): Fix bug: For funcs, use
	`func' tag, not `sig'.

	(swigpp-process-file): Handle post-"class" declarations.

	* swig/swigpp.el (swigpp-map-members): Fix bug: Filter `func'
	instead of `funcs'.

	* swig/swigpp.el (swigpp-next-member): Fix docstring typo.

	(swigpp-mask, swigpp-map-members): Munge debugging output, no
	functional change.

	(swigpp-map-extra-class-methods): Use `car-safe'.

	(swigpp-untokenize): Handle "."-style tokens.

2000-04-14  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/shadowed: Reorder `Coord' before `Atom'.  Add `AtomSet'.

	* libmead/AtomSet.h: Add swigpp directives for `class AtomSet'.

	* swig/swigpp.el (swigpp-process-file): When processing inlines,
	do not insert original implementation.

	* swig/gen.el (gen-subst): Also include STL and constituent type
	headers.

	* swig/shadowed: Formatting, no functional change.

	* swig/CoordPlay.h: Move `#include <strstream.h>' to meadtypes.i.

	* swig/meadtypes.i: Run `gen-meadtypes', capturing output.  Also,
	add `#include <strstream.h>'.

	* swig/CoordPlay.h (MeadWrapBug): Declare this class in the
	swigpp-literal section.

	* swig/swigpp.el (swigpp-process-file): Move literal insertion
	after class-processing.  This was how it used to be.

	* swig/swigpp.el (swigpp-map-extra-class-operator): Fix hardcode
	bug: Use `me'.

2000-04-13  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/CoordPlay.h: In literal text section, do not declare
	`__mul__' and `__div__' since those are now generated by
	swigpp.el.

	* swig/GNUmakefile (specific-clean): Also delete CoordPlay.cc.

	* swig/meadtypes.i: Fix bug: Move C-side #include into %{-%}
	block.

	* swig/GNUmakefile (CoordPlay.cc): New specific target.

	* swig/swigpp.el (swigpp-process-file): Move meadtypes.i inclusion
	after module declaration.

	* swig/GNUmakefile (distclean): New target.

	* swig/GNUmakefile (%_wrap.cc : %.i): Use `SWIG_OPTS' in swig
	invocation.

	* swig/paths.makefile.in (SWIG_OPTS): Turn on verbosity.  Specify
	Python include dir.

	* swig/shadowed: Reformat, no functional change.

	* NOTES: Ref swig/README for class selection.

2000-04-05  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/fe-info.sh: Fix typo, no functional change.

	* swig/gen.el (gen-subst): Elide local var, no functional change.

	* swig/gen.el (gen-from-list, gen-from-vector, gen-from-map): No
	longer support interactive usage.

	* swig/meadtypes.i: Run `gen-meadtypes', capturing output.

	* swig/gen.el: Initial revision.

2000-04-03  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Notes about porting to new DEC (Compaq) alpha machine.

	* apps/mulsidecomp/Makefile.in: Cleaner solution to the DEC C++
	instantiation-finding problem by using the local library in
	../multiflex.

	* apps/multiflex/Makefile.in: Make and use a local library of the
	objs associated with multiflex (this helps out mulsidecomp
	problems on DEC C++)

	* configure.in, libmead/Makefile.in: REPO_FILES_IF_NEEDED
	transmits the possible need for the repository of template
	instantiations to be explicitly included in the library

	* apps/redti/Makefile.in: Support for clean_target and
	distclean_target.

	* config.sub: Recognize alphaev6 as a valid CPU type.

	* apps/multiflex/Makefile.in: Support for clean_target and
	distclean_target.

	* apps/mulsidecomp/mulsidecomp.cc: Don't use ios::setstate, since
	DEC's C++ library doesn't allow it.

	* apps/mulsidecomp/Makefile.in: Explicit Rule and flags for
	producing .o from .cc files Support for clean_target and
	distclean_target.  Tricky (ugly) stuff for linking in the template
	instatiations in ../multiflex when compiling with DEC C++.

2000-04-01  Don Bashford  <bashford@gage.scripps.edu>

	* apps/multiflex/Makefile.in: Various changes to work under DEC

	* libmead/PointCharge.h, libmead/OnePointCharge.h,
	libmead/ManyPointCharge.h, libmead/ChargeDist.cc,
	libmead/AtomChargeSet.h: Workaround for lack of member-template
	support in DEC C++

	* apps/mulsidecomp/Makefile.in, Makefile.in: Don't use
	non-standard -C option for sub-makes (cd instead)

	* apps/Makefile.in: Don't use non-standard -C option for sub-makes
	(cd instead) Some attempts to get the needed link flags for DEC,
	including -lm

2000-04-01  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/GNUmakefile (VPATH, MEADINC, MEADLIBS, %.j:../%.h,
	../CoordPlay.h,specific-clean): Accomodate new directory
	structure.

	* swig/swigpp.el (swigpp-process-file): Accomodate new directory
	structure.

	* adf2sls.cc, add_charge_test.cc: bye bye

	* libdevel/Makefile.in: Initial revision.

	* apps/Makefile.in (LIBDEVEL): New var.

	(broken_apps): New target.

	(LOCALLIBS): Also include `LIBDEVEL'.

	* configure.in (AC_OUTPUT): Also generate libdevel/Makefile.

	* Makefile.in (subdirs): Add `libdevel'.

2000-04-01  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Noted stuff about re-arranging directory tree, and so on.

	* configure.in: Add generation of Makefile in apps/mulsidecomp.

	* Makefile.in: Sub-makes must use `-f Makefile' in case subdirs
	have GNUmakefile.  Fix up cleaning targes.

	* libmead/Makefile.in: Add clean and distclean targets.

	* librx/Makefile.in: Standardize the cleaning targets

	* apps/Makefile.in: Split up `appdirs' into real_app_dirs,
	test_app_dirs, and broken_app_dirs, and make targets corresponding
	to the first two Only real_app_dirs is built by default.  To build
	test programs, user cd's into apps and does `make test_apps'.  The
	broken_app_dirs are the ones the currently fail to build, probably
	because they need libdevel stuff.

	* apps/redti/Makefile.in, apps/multiflex/Makefile.in: Add `target'
	target for compatability with upper level.  Also, standard cleanup
	targets.

	* apps/mulsidecomp/Makefile.in: This app needs its own Makefile,
	because it must grab a few .o files from ../multiflex (Yuck).

2000-03-31  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* libmead/Makefile.in: Many changes to accomodate new directory
	structure.

	* configure.in: Intialize w/ `libmead' instead of `ElstatPot.cc'.

	Accomodate new directory structure.

	No longer remove cxxorule.in since it is needed by config.status.

	(AC_OUTPUT): Do substitution for files: apps/multiflex/Makefile,
	apps/redti/Makefile, and libmead/Makefile.  Symlink Makefiles
	under app to the one in app.

	* apps/redti/Makefile.in, apps/multiflex/Makefile.in: Initial
	revision.

	* apps/Makefile.in, Makefile.in: Many changes to accomodate new
	directory structure.

	* sav-test.sh: bye bye

	* sav-test.sh: moved to apps/sav-driver

	* defs.hP, try_addChargeDist.cc, nlsor.cc: bye bye

	* nlsor.cc: moved to libdevel

	* integrate3D.h: bye bye

	* integrate3D.h: moved to libdevel

	* integrate3D.cc: bye bye

	* integrate3D.cc: moved to libdevel

	* integrate1D.h: bye bye

	* integrate1D.h: moved to libdevel

	* integrate1D.cc: bye bye

	* integrate1D.cc: moved to libdevel

	* USternNonLinElytByAtoms.h: bye bye

	* USternNonLinElytByAtoms.h: moved to libdevel

	* USternNonLinElytByAtoms.cc: bye bye

	* USternNonLinElytByAtoms.cc: moved to libdevel

	* QmMolecule.h: bye bye

	* QmMolecule.h: moved to libdevel

	* QmMolecule.cc: bye bye

	* QmMolecule.cc: moved to libdevel

	* QmElement.cc: bye bye

	* QmElement.cc: moved to libdevel

	* NonLin_Elstat_list_init.cc: bye bye

	* NonLin_Elstat_list_init.cc: moved to libdevel

	* NonLinElyt.h: bye bye

	* NonLinElyt.h: moved to libdevel

	* NonLinElyt.cc: bye bye

	* NonLinElyt.cc: moved to libdevel

	* NLFDGridLevel.h: bye bye

	* NLFDGridLevel.h: moved to libdevel

	* NLFDGridLevel.cc: bye bye

	* NLFDGridLevel.cc: moved to libdevel

	* NLFDElstat.h: bye bye

	* NLFDElstat.h: moved to libdevel

	* NLFDElstat.cc: bye bye

	* NLFDElstat.cc: moved to libdevel

	* DummyNonLinElytByAtoms.h: bye bye

	* DummyNonLinElytByAtoms.h: moved to libdevel

	* DummyNonLinElytByAtoms.cc: bye bye

	* DummyNonLinElytByAtoms.cc: moved to libdevel

	* BoltNonLinElytByAtoms.h: bye bye

	* BoltNonLinElytByAtoms.h: moved to libdevel

	* BoltNonLinElytByAtoms.cc: bye bye

	* BoltNonLinElytByAtoms.cc: moved to libdevel

	* AvsScalarFromVec.h: bye bye

	* AvsScalarFromVec.h: moved to libdevel

	* AvsScalarFromVec.cc: bye bye

	* AvsScalarFromVec.cc: moved to libdevel

	* AmstFitDens.h: bye bye

	* AmstFitDens.h: moved to libdevel

	* AmstFitDens.cc: bye bye

	* AmstFitDens.cc: moved to libdevel

	* ADF_13_27_Data.h: bye bye

	* ADF_13_27_Data.h: moved to libdevel

	* ADF_13_27_Data.cc: bye bye

	* ADF_13_27_Data.cc: moved to libdevel

	* tc.c: bye bye

	* tc.c: moved to apps/redti

	* rfixprosee.c: bye bye

	* rfixprosee.c: moved to apps/redti

	* rfixpro.c: bye bye

	* rfixpro.c: moved to apps/redti

	* pfix.c: bye bye

	* pfix.c: moved to apps/redti

	* SiteUtil.h: bye bye

	* SiteUtil.h: moved to apps/multiflex

	* SiteUtil.cc: bye bye

	* SiteUtil.cc: moved to apps/multiflex

	* SiteInMulti.h: bye bye

	* SiteInMulti.h: moved to apps/multiflex

	* SiteInMulti.cc: bye bye

	* SiteInMulti.cc: moved to apps/multiflex

	* MultiSiteMolecule.h: bye bye

	* MultiSiteMolecule.h: moved to apps/multiflex

	* MultiSiteMolecule.cc: bye bye

	* MultiSiteMolecule.cc: moved to apps/multiflex

	* MultiFlexiSiteMol.h: bye bye

	* MultiFlexiSiteMol.h: moved to apps/multiflex

	* MultiFlexiSiteMol.cc: bye bye

	* MultiFlexiSiteMol.cc: moved to apps/multiflex

	* FlexiSite.h: bye bye

	* FlexiSite.h: moved to apps/multiflex

	* FlexiSite.cc: bye bye

	* FlexiSite.cc: moved to apps/multiflex

	* AtomRegex.h: bye bye

	* AtomRegex.h: moved to apps/multiflex

	* AtomRegex.cc: bye bye

	* AtomRegex.cc: moved to apps/multiflex

	* wrap_typeinfo: bye bye

	* wrap_typeinfo: moved to libmead

	* AnalyMaker.cc: bye bye

	* AnalyMaker.cc: moved to libmead

	* Vertex.h: bye bye

	* Vertex.h: moved to libmead

	* VertElem.h: bye bye

	* VertElem.h: moved to libmead

	* PointCharge.h: bye bye

	* PointCharge.h: moved to libmead

	* Cone.h: bye bye

	* Cone.h: moved to libmead

	* CenteringStyle.h: bye bye

	* CenteringStyle.h: moved to libmead

	* AnalyMaker.h: bye bye

	* AnalyMaker.h: moved to libmead

	* AccTag.h: bye bye

	* AccTag.h: moved to AnalyMaker.h

	* Sausage.defs.h: bye bye

	* Sausage.defs.h: moved to libmead

	* NonUnif.defs.h: bye bye

	* NonUnif.defs.h: moved to libmead

	* NonUnif.h: bye bye

	* NonUnif.h: moved to libmead

	* Coord.h: bye bye

	* Coord.h: moved to libmead

	* globals.h: bye bye

	* globals.h: moved to libmead

	* UniformElectrolyte.h: bye bye

	* UniformElectrolyte.h: moved to libmead

	* UniformDielectric.h: bye bye

	* UniformDielectric.h: moved to libmead

	* TPShell.h: bye bye

	* TPShell.h: moved to libmead

	* SolvAccVol.h: bye bye

	* SolvAccVol.h: moved to libmead

	* Shell.h: bye bye

	* Shell.h: moved to libmead

	* Sausage.h: bye bye

	* Sausage.h: moved to libmead

	* Sausage.Plex.h: bye bye

	* Sausage.Plex.h: moved to libmead

	* Sausage.MPlex.h: bye bye

	* Sausage.MPlex.h: moved to libmead

	* Potat.h: bye bye

	* Potat.h: moved to libmead

	* Polynomial.h: bye bye

	* Polynomial.h: moved to libmead

	* PhysCond.h: bye bye

	* PhysCond.h: moved to libmead

	* PairGenBorn.h: bye bye

	* PairGenBorn.h: moved to libmead

	* Pair.h: bye bye

	* Pair.h: moved to libmead

	* OnePointCharge.h: bye bye

	* OnePointCharge.h: moved to libmead

	* NonUnif.XPlex.h: bye bye

	* NonUnif.XPlex.h: moved to libmead

	* NonUnif.Plex.h: bye bye

	* NonUnif.Plex.h: moved to libmead

	* ManyPointCharge.h: bye bye

	* ManyPointCharge.h: moved to libmead

	* FinDiffMethod.h: bye bye

	* FinDiffMethod.h: moved to libmead

	* FinDiffElstatPot.h: bye bye

	* FinDiffElstatPot.h: moved to libmead

	* FDGridLevel.h: bye bye

	* FDGridLevel.h: moved to libmead

	* FDElstatMaker.h: bye bye

	* FDElstatMaker.h: moved to libmead

	* FDChargeIterator.h: bye bye

	* FDChargeIterator.h: moved to libmead

	* ElySphere.h: bye bye

	* ElySphere.h: moved to libmead

	* ElstatPot.h: bye bye

	* ElstatPot.h: moved to libmead

	* ElstatMaker.h: bye bye

	* ElstatMaker.h: moved to libmead

	* ElectrolyteEnvironment.h: bye bye

	* ElectrolyteEnvironment.h: moved to libmead

	* ElectrolyteByAtoms.h: bye bye

	* ElectrolyteByAtoms.h: moved to libmead

	* DielectricSphere.h: bye bye

	* DielectricSphere.h: moved to libmead

	* DielectricSlab.h: bye bye

	* DielectricSlab.h: moved to libmead

	* DielectricEnvironment.h: bye bye

	* DielectricEnvironment.h: moved to libmead

	* DielMembAtoms.h: bye bye

	* DielMembAtoms.h: moved to libmead

	* DielCubeRep.h: bye bye

	* DielCubeRep.h: moved to libmead

	* DielByAtoms.h: bye bye

	* DielByAtoms.h: moved to libmead

	* Debye.h: bye bye

	* Debye.h: moved to libmead

	* CubeLatSpec.h: bye bye

	* CubeLatSpec.h: moved to libmead

	* ChargeDist.h: bye bye

	* ChargeDist.h: moved to libmead

	* ChargeCubeRep.h: bye bye

	* ChargeCubeRep.h: moved to libmead

	* CLShell.h: bye bye

	* CLShell.h: moved to libmead

	* Bigmem.h: bye bye

	* Bigmem.h: moved to libmead

	* AvsScalarField.h: bye bye

	* AvsScalarField.h: moved to libmead

	* AtomSet.h: bye bye

	* AtomSet.h: moved to libmead

	* AtomID.h: bye bye

	* AtomID.h: moved to libmead

	* AtomChargeSet.h: bye bye

	* AtomChargeSet.h: moved to libmead

	* Atom.h: bye bye

	* Atom.h: moved to libmead

	* Angle.h: bye bye

	* Angle.h: moved to libmead

	* AnalySphere.h: bye bye

	* AnalySphere.h: moved to libmead

	* AnalySlab.h: bye bye

	* AnalySlab.h: moved to libmead

	* sor.cc: bye bye

	* sor.cc: moved to libmead

	* multPotxCharge.cc: bye bye

	* multPotxCharge.cc: moved to libmead

	* globals.cc: bye bye

	* globals.cc: moved to libmead

	* UniformElectrolyte.cc: bye bye

	* UniformElectrolyte.cc: moved to libmead

	* UniformDielectric.cc: bye bye

	* UniformDielectric.cc: moved to libmead

	* TPShell.cc: bye bye

	* TPShell.cc: moved to libmead

	* SolvAccVol.cc: bye bye

	* SolvAccVol.cc: moved to libmead

	* Shell.cc: bye bye

	* Shell.cc: moved to libmead

	* Sausage.cc: bye bye

	* Sausage.cc: moved to libmead

	* Sausage.Plex.cc: bye bye

	* Sausage.Plex.cc: moved to libmead

	* Sausage.MPlex.cc: bye bye

	* Sausage.MPlex.cc: moved to libmead

	* SAVtag_points.cc: bye bye

	* SAVtag_points.cc: moved to libmead

	* SAVcalc_cuberep.cc: bye bye

	* SAVcalc_cuberep.cc: moved to libmead

	* SAVanal_calc.cc: bye bye

	* SAVanal_calc.cc: moved to libmead

	* Potat.cc: bye bye

	* Potat.cc: moved to libmead

	* Polynomial.cc: bye bye

	* Polynomial.cc: moved to libmead

	* PhysCond.cc: bye bye

	* PhysCond.cc: moved to libmead

	* PairGenBorn.cc: bye bye

	* PairGenBorn.cc: moved to libmead

	* Pair.cc: bye bye

	* Pair.cc: moved to libmead

	* OnePointCharge.cc: bye bye

	* OnePointCharge.cc: moved to libmead

	* NonUnif.XPlex.cc: bye bye

	* NonUnif.XPlex.cc: moved to libmead

	* NonUnif.Plex.cc: bye bye

	* NonUnif.Plex.cc: moved to libmead

	* ManyPointCharge.cc: bye bye

	* ManyPointCharge.cc: moved to libmead

	* FinDiffMethod.cc: bye bye

	* FinDiffMethod.cc: moved to libmead

	* FinDiffElstatPot.cc: bye bye

	* FinDiffElstatPot.cc: moved to libmead

	* FDGridLevel.cc: bye bye

	* FDGridLevel.cc: moved to libmead

	* FDElstatMaker.cc: bye bye

	* FDElstatMaker.cc: moved to libmead

	* FDChargeIterator.cc: bye bye

	* FDChargeIterator.cc: moved to libmead

	* ElySphere.cc: bye bye

	* ElySphere.cc: moved to libmead

	* Elstat_list_init.cc: bye bye

	* Elstat_list_init.cc: moved to libmead

	* ElstatPot.cc: bye bye

	* ElstatPot.cc: moved to libmead

	* ElstatMaker.cc: bye bye

	* ElstatMaker.cc: moved to libmead

	* ElectrolyteEnvironment.cc: bye bye

	* ElectrolyteEnvironment.cc: moved to libmead

	* ElectrolyteByAtoms.cc: bye bye

	* ElectrolyteByAtoms.cc: moved to libmead

	* DielectricSphere.cc: bye bye

	* DielectricSphere.cc: moved to libmead

	* DielectricSlab.cc: bye bye

	* DielectricSlab.cc: moved to libmead

	* DielectricEnvironment.cc: bye bye

	* DielectricEnvironment.cc: moved to libmead

	* DielMembAtoms.cc: bye bye

	* DielMembAtoms.cc: moved to libmead

	* DielCubeRep.cc: bye bye

	* DielCubeRep.cc: moved to libmead

	* DielByAtoms.cc: bye bye

	* DielByAtoms.cc: moved to libmead

	* Debye.cc: bye bye

	* Debye.cc: moved to libmead

	* CubeLatSpec.cc: bye bye

	* CubeLatSpec.cc: moved to libmead

	* ChargeDist.cc: bye bye

	* ChargeDist.cc: moved to libmead

	* ChargeCubeRep.cc: bye bye

	* ChargeCubeRep.cc: moved to libmead

	* CLShell.cc: bye bye

	* CLShell.cc: moved to libmead

	* Bigmem.cc: bye bye

	* Bigmem.cc: moved to libmead

	* AvsScalarField_input.cc: bye bye

	* AvsScalarField_input.cc: moved to libmead

	* AvsScalarField.cc: bye bye

	* AvsScalarField.cc: moved to libmead

	* AvsSF_read_header.cc: bye bye

	* AvsSF_read_header.cc: moved to libtool

	* AtomSet.cc: bye bye

	* AtomSet.cc: moved to libtool

	* AtomID.cc: bye bye

	* AtomID.cc: moved to libtool

	* AtomChargeSet.cc: bye bye

	* AtomChargeSet.cc: moved to libtool

	* Atom.cc: bye bye

	* Atom.cc: moved to libtool

	* Angle.cc: bye bye

	* Angle.cc: moved to libtool

	* AnalySphere.cc: bye bye

	* AnalySphere.cc: moved to libtool

	* AnalySlab.cc: bye bye

	* AnalySlab.cc: moved to libtool

2000-03-31  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.in: Improve building in another dir

2000-03-23  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Makefile.in: Add whitespace for readability; no functional
	change.

2000-03-22  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* NOTES: Tell of GNUmakefile, Makefile, and apps changes.

	* Makefile.in: Add comment telling of "GNU make" requirement.

	(MEAD_OBJECTS): New var.

	(ALL_PROGRAMS): Delete this var.

	(all): Make libmead.a, and recurse into subdir apps.

	(libmead.a): New target.

	(solvaccvol_objs, atomset_objs, charge_objs, diel_objs,
	avs_base_objs, elpot_objs, elyt_objs, util_objs, sav_driver_objs,
	potential_objs, solvate_objs, solinprot_objs, multiflex_objs,
	redti_objs): Delete these vars.

	(sav-driver, potential, solvate, solinprot, multiflex, redti):
	Delete these targets.

	(.PHONY): Add `all'.

	(clean): Delete libmead.a, and recurse into subdir apps.

	(%.d : %.cc): Move this rule here from the late GNUmakefile.

	* configure.in: Also do `AC_OUTPUT' substitution on apps/Makefile.

	* solvate.cc: Moved to apps/solvate.cc

	* solvate.cc: Inform of imminent move.

	* solinprot.cc: Moved to apps/solinprot.cc

	* solinprot.cc: Inform of imminent move.

	* sav-driver.cc: Moved to apps/sav-driver.cc

	* sav-driver.cc: Inform of imminent move.

	* saltscan.cc: Moved to apps/saltscan.cc

	* saltscan.cc: Inform of imminent move.

	* redti.c: Moved to apps/redti.c

	* redti.c: Inform of imminent move.

	* qmsolvate.cc: Moved to apps/qmsolvate.cc

	* qmsolvate.cc: Inform of imminent move.

	* potscan.cc: Moved to apps/potscan.cc

	* potscan.cc: Inform of imminent move.

	* potential.cc: Moved to apps/potential.cc

	* potential.cc: Inform of imminent move.

	* pair_enerdens_test.cc: Moved to apps/pair_enerdens_test.cc

	* pair_enerdens_test.cc: Inform of imminent move.

	* out2avs.cc: Moved to apps/out2avs.cc

	* out2avs.cc: Inform of imminent move.

	* nlpotential.cc: Moved to apps/nlpotential.cc

	* nlpotential.cc: Inform of imminent move.

	* multiflex.cc: Moved to apps/multiflex.cc

	* multiflex.cc: Inform of imminent move.

	* mulsidecomp.cc: Moved to apps/mulsidecomp.cc

	* mulsidecomp.cc: Inform of imminent move.

	* kirkwood_test.cc: Moved to apps/kirkwood_test.cc

	* kirkwood_test.cc: Inform of imminent move.

	* gbtest.cc: Moved to apps/gbtest.cc

	* gbtest.cc: Inform of imminent move.

	* enerdens.cc: Moved to apps/enerdens.cc

	* enerdens.cc: Inform of imminent move.

	* debye_test.cc: Moved to apps/debye_test.cc

	* debye_test.cc: Inform of imminent move.

	* avs2avs.cc: Moved to apps/avs2avs.cc

	* avs2avs.cc, adf2sls.cc: Inform of imminent move.

	* apps/Makefile.in, apps/README: Initial revision.

	* Makefile.ultra, Makefile.sgiIRIX6para, Makefile.cray: bye bye

	* GNUmakefile: Integrating this into Makefile.

	* GNUmakefile: Inform of imminent deletion.

2000-03-17  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/test-CoordPlay.so.py: Only import `CoordPlay' module once.

	* swig/test-Coord.so.py: Use constructed `Coord' object for
	comparison.

	* swig/GNUmakefile (srcdir): Delete var; it is included in
	paths.makefile.

	(%.clean): New rule.

	* swig/paths.makefile.in (srcdir): New var.

	* swig/shadowed (CoordPlay, Atom): New classes.

	* swig/test-Atom.so.py: Update w/ newer tests.

	* Atom.h, libmead/Atom.h: Add `SWIGPP_LITERAL_INCLUDE' block.

	* swig/meadtypes.i: Initial revision.

	* swig/swigpp.el (swigpp-scrub-input-file): Add surrounding
	comments to literal text.  (swigpp-process-file): Include
	./meadtypes.i.  Move literal insertion before class-processing.

	* swig/swigpp.el (swigpp-scrub-input-file): Note literal text.
	(swigpp-process-file): Insert previously-noted text instead of
	doing the scan here.

2000-03-16  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/GNUmakefile (srcdir): New var.

	* Atom.h, libmead/Atom.h (Atom): Mark this class to be wrapped.

	* swig/test-Atom.so.py: New file.

	* swig/GNUmakefile (clean): Also depend on `specific-clean'.

	(../CoordPlay.h, specific-clean): New targets.

2000-03-15  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Coord.h, libmead/Coord.h: (Coord operator* (float, const Coord
	&)): Inhibit wrapping.

	* swig/swigpp.el (swigpp-process-file): No longer use `deadzone'
	text-property.

	* swig/swigpp.el (swigpp-mask-single-nowrap): Handle whitespace at
	eol.

	(swigpp-map-extra-class-operator): Discard first arg.

2000-03-14  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-map-extra-class-operator): Fix typo.

	(swigpp-render-add-method): Take optional arg `name'.

	(swigpp-process-class): Pass class name when doing extra-class
	add-method.

	* swig/GNUmakefile (MEADINC, MEADLIBS): New vars.

	(clean): Remove writable .j files.

	(CoodPlay.py, CoordPlay_shadow.cc, CoordPlay.so): Comment out
	these explicit targets.

	(%.so : %_shadow.cc %.cc): Rewrite to use `MEADINC', `MEADLIBS'.

	(.PRECIOUS): Also include .j files.

	* swig/swigpp.el (swigpp-message-buffer): New debugging func.

	(swigpp-subvert-definition-blocks): Save block text instead of
	just a stub.

	(swigpp-tokenize): Recognize "me::".

	(swigpp-parse-list): Add debugging output.

	(swigpp-map-class-operator): Renamed from `swigpp-map-operator'.
	Rewrite internal lambda to combine `binary-op-p' and `binary-op'.

	(swigpp-map-extra-class-operator): New func.

	(swigpp-map-extra-class-methods): Flesh out.

	(swigpp-process-class): Add debugging output.

	(batch-swigpp-process-file): Include header filename in message.

2000-03-08  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-process-file): No longer clear
	`buffer-read-only'.

	* swig/swigpp.el (swigpp-tokenize): Recognize `(w . inline)'.

	(swigpp-map-extra-class-methods, swigpp-render-func): New funcs,
	stubbed.

	(swigpp-render): Handle `func' tree type.

	(swigpp-process-class): Add extra-class processing.

	(swigpp-prettify-output-buffer): Renamed from
	`swigpp-prettify-buffer'.  Update callers.

	(swigpp-scrub-input-file): New func.

	(swigpp-process-file): Use `swigpp-scrub-input-file'.  Handle
	either "class" or "struct".

2000-03-04  Don Bashford  <bashford@gage.scripps.edu>

	* SiteInMulti.cc, apps/multiflex/SiteInMulti.cc: Fixed a bug which
	caused wrong background interactions in cases where a residue has
	multiple titrating sites (like chain termini).  Bug was reported
	by Antonio Baptista.

	* NOTES: bug fix noted

2000-02-24  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Makefile.in (clean): Recurse into subdir swig.

	* swig/fe-info.sh: Commenting, no functional change.

	* swig/GNUmakefile (SWIG, PYTHON_INCLUDES): Delete vars, now set
	in paths.makefile.

	Include paths.makefile.  Replace "-dnone" w/ "$(SWIG_OPTS)".

	* Makefile.in (SWIG, PYTHONLIB, PYTHONINC): New vars, substituted.

	(all): Build in subdir swig if wrapping is configured.

	* swig/fe-info.sh: Code to determine front-end info.  Must
	coordinate w/ ../configure .

	* swig/paths.makefile.in: This snippet is included in the
	GNUmakefile.

	* GNUmakefile: Whitespace cleanup, no functional change.

	* configure.in (--enable-wrapping): New option, disabled by
	default.  (SWIG, PYTHONLIB, PYTHONINC): New vars, substituted.
	(swig/paths.makefile): New processed file for `AC_OUTPUT'.

2000-02-17  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Noted multiflex bug fix

2000-02-02  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/README: Aesthetic munging.

	* swig/README: Add directive and Python test bench info to the
	Programming section.

	* swig/README: Only .j files are generate, not .i files.

	* swig/test-CoordPlay.so.py: New file.

	* swig/README: Add new section: internals.

	* NOTES: Reference swig/README.

2000-02-01  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/README: Separate into two sections: Using and Programming.
	Expand Programming section.

	* swig/swigpp.el (swigpp-process-file): Output static swigpp
	identifier string.  Don't insert inlines -- they are included by
	the .h file.

2000-01-29  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/shadowed (Coord): Add.

	* swig/swigpp.el (swigpp-process-file): Add inline-function
	snarfing.

	* swig/swigpp.el (swigpp-map-operator): Handle "*" and "/" binary
	operators.

	* swig/swigpp.el (swigpp-map-operator): Fix bug: Take into account
	operator type.

	* swig/swigpp.el (swigpp-prettify-buffer): Move to limit of search
	when done.

	* swig/swigpp.el (swigpp-map-members): Simplify note for ignored
	operators.

	(swigpp-prettify-buffer): New func.  (swigpp-process-file): Use
	new func.

	* swig/GNUmakefile: Remove comment on "inline" flags.

	* swig/GNUmakefile (SWIG): New var, update users.

	* swig/README: Fix speeling erorr.

	* swig/CoordPlay.h: Add much of the text from CoordPlay.jbyhand,
	between lines "#if SWIGPP_LITERAL_INCLUDE" and "#endif //
	SWIGPP_LITERAL_INCLUDE".

	* swig/swigpp.el (swigpp-process-file): Handle literal text
	inclusion.

	* swig/swigpp.el (swigpp-mask, swigpp-process-file): Rewrite
	`while' loops w/ `mapc'.

	* swig/swigpp.el (swigpp-infixify): Use literal strings.

	(swigpp-map-ctor): New func, extracted from `swigpp-map-members'.
	(swigpp-map-operator): New func.  (swigpp-map-members): Use new
	funcs.

	(swigpp-untokenize): Handle literal strings.

	(swigpp-render-signature, swigpp-render-data): Do not append ";".

	(swigpp-render-note): New func.  (swigpp-render): Use
	`swigpp-render-note'.

2000-01-28  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-infixify): New func, extracted from
	`swigpp-map-members'.  (swigpp-map-members): Use
	`swigpp-infixify'.

	(batch-swigpp-process-file): Add informative output.  Emacs 20.3
	bug workaround: When finished, kill Emacs.

	* swig/swigpp.el (swigpp-map-members): Return fully tagged trees,
	w/ signatures infixified.

	(swigpp-untokenize, swigpp-render-data, swigpp-render-add-method):
	New funcs.

	(swigpp-render-signature): Use `swigpp-untokenize'.

	(swigpp-render): Accept a tree instead of trees.  Add handling for
	different tags.

	(swigpp-process-class): Update call to `swigpp-render'.

2000-01-27  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-map-members): Return class info in
	`class' node.

	(swigpp-render-signature, siwgpp-render-class): New funcs.

	(swigpp-render, swigpp-process-class): Use new format from call to
	`swigpp-map-members'.

	* configure.in: Don't do "ln -s" for gnustuff/String.h if it
	already exists.

2000-01-22  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* GNUmakefile: Use "-" in front of "include" to suppress failure
	message.

2000-01-21  Don Bashford  <bashford@gage.scripps.edu>

	* apps/multiflex/multiflex.cc, multiflex.cc: Fix bug that disabled
	membrane support.

2000-01-19  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: note makeing a snapshot

2000-01-14  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-map-members): Fix typo.

	* swig/swigpp.el (swigpp-map-members): Now handles ctors.

2000-01-13  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-mask): Don't use `run-hooks' because it
	stops processing if any member function returns nil.

	* swig/swigpp.el (swigpp-ibuf): Delete func.
	(swigpp-process-file): Use local var `ibuf' instead of global
	property.

	* swig/swigpp.el (swigpp-process-file): Remove text-munging
	kludge.

	* swig/swigpp.el (swigpp-debug): Make dependent on env var
	`SWIGPP_DEBUG' non-nil.

	(sa-point-syntax-string): Move functionality into tokenizer.

	(swigpp-tokenize): Rename from `sa-tokenize'.  Fix control flow
	bug.

	(swigpp-intangiate-region, swigpp-intangible-p, swigpp-append):
	Delete these funcs.

	(swigpp-next-member): Rewrite w/ assumption that definition blocks
	are fully subverted by the time `swigpp-next-member' is called.

	(swigpp-subvert-definition-blocks, swigpp-mask): New funcs.
	(swigpp-mask-non-public, swigpp-mask-nowrap-region,
	swigpp-mask-single-nowrap): Call `delete-region' directly.

	(swigpp-simple-re-snarf, swigpp-snarf-ctors-dtors,
	swigpp-snarf-operators, swigpp-maybe-snarf-member): Delete these
	funcs.

	(swigpp-process-class): Rewrite to use separate work buffer and to
	do more proper parsing and not just textual copy.

	(swigpp-parse-list, swigpp-parse-tree, swigpp-note-signatures):
	New funcs.  (swigpp-parse-c++-type): New func stub.

	(swigpp-map-members, swigpp-render): New func stubs.

	(swigpp-process-file): Don't operate on input buffer.  Let
	`swigpp-process-class' handle everything.

2000-01-09  Don Bashford  <bashford@gage.scripps.edu>

	* swig/testpyCoordPlay.py: testing some of the newly wrapped
	things.

	* swig/CoordPlay.jbyhand: Various other things wrapped, in
	particular comparisons (with exception handling!)

	* swig/CoordPlay.h: Deliberatly introduced a bug in operators <
	and > to test exception handling in wrapper.

2000-01-08  Don Bashford  <bashford@gage.scripps.edu>

	* swig/testpyCoordPlay.py: Test drive the CoordPlay class, in
	Python.

	* swig/test++CoordPlay.cc: Test drive the CoordPlay class, in C++.

	* swig/GNUmakefile: Added some rules for CoordPlay.

	* swig/CoordPlay.h: Something like Coord, but just to play with
	for swig stuff.

	* swig/CoordPlay.jbyhand: Swig wrapper file written by hand to
	generate a wrapping and shadowing for CoordPlay.

2000-01-08  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (swigpp-next-member): Skip inlined definitions.

	* NOTES: Add some wrapping notes.

2000-01-06  Don Bashford  <bashford@gage.scripps.edu>

	* GNUmakefile: Angle.o included but Coord.o is not

2000-01-05  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/swigpp.el (sa-tokenize): Don't signal error if last token
	is not ";".  The signature may be followed by inlined definition.

	* swig/swigpp.el (sa-tokenize): Do not promote `()' to first-class
	token.

	* swig/swigpp.el (sa-point-syntax-string, sa-tokenize): New funcs.

	(swigpp-simple-re-snarf): Call `sa-tokenize'.

	* swig/swigpp.el (swigpp-next-member): Fix mis-use of
	`next-single-property-change'.

	* swig/swigpp.el: Comment.

	(swigpp-maybe-snarf-member): Call `swigpp-append'.

	* swig/swigpp.el (swigpp-process-file): Do not write `outf' if no
	classes found.

	* swig/swigpp.el (swigpp-maybe-snarf-member): Only output when
	`swiggp-debug'.

	* swig/swigpp.el (swigpp-debug): Set to nil by default.

	* swig/swigpp.el: Massive rewrite.  Batch interface the same,
	however.

	* swig/swigpp.el (swigpp-insert, swigpp-append): New funcs.
	(swigpp-copy-member, swigpp-process-class, swigpp-process-file):
	Use new funcs.

	* swig/Coord.j: now machine-generated

	* swig/GNUmakefile (%.j : ../%.h): New rule.

	* swig/swigpp.el (batch-swigpp-process-file): New func.

	* swig/swigpp.el (swigpp-process-file): Set `buffer-read-only' nil
	for the dynamic context of the call to `swigpp-process-class'.

	* swig/swigpp.el (swigpp-process-file): Set `buffer-read-only' nil
	for the dynamic context of this function.

	* swig/swigpp.el: Require cl.el.

	* swig/swigpp.el (--test--): Remove debugging function.

	* swig/swigpp.el: New file.

1999-12-30  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Angle.h, libmead/Angle.h: Revert to pre-SWIG munging.

	* PairGenBorn.cc, Polynomial.h, Sausage.MPlex.cc,
	libmead/PairGenBorn.cc, libmead/Polynomial.h,
	libmead/Sausage.MPlex.cc, NOTES, ElectrolyteByAtoms.cc,
	GNUmakefile, Makefile.in, ManyPointCharge.h,
	libmead/ElectrolyteByAtoms.cc, libmead/ManyPointCharge.h,
	ChargeDist.h, Coord.cc, libmead/ChargeDist.h, Angle.cc, Atom.h,
	AtomID.h, libmead/Angle.cc, libmead/Atom.h, libmead/AtomID.h:
	Merge in MEAD_2_0_2_alpha_patches branch, and remove Coord.cc.

	* Coord.h, libmead/Coord.h: Revert to pre-SWIG state, plus add
	wrapping tags.

1999-12-28  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: About getting it working with SGI CC.

	* Sausage.MPlex.cc, libmead/Sausage.MPlex.cc: SGI CC needs to
	include string.h rather than cstring (non-standard?)  to get
	memset.

	* GNUmakefile: ElySphere.o belongs in elyt_objs, not elpot_objs

	* Makefile.in: Several .o files added (catching up with
	GNUmakefile)

	* PairGenBorn.cc, libmead/PairGenBorn.cc: Minor changes for SGI
	CC.

	* Polynomial.h, libmead/Polynomial.h, ManyPointCharge.h,
	libmead/ManyPointCharge.h: Add a `using namespace std' for SGI CC

	* ChargeDist.h, libmead/ChargeDist.h: Remove unnecessary `using
	namespace std' that choked SGI CC.

	* AtomID.h, libmead/AtomID.h, Atom.h, libmead/Atom.h: Silence SGI
	CC complaint about using inlined operator before definition.

	* Angle.h, libmead/Angle.h: Don't initialize static data member
	here; do in Angle.cc instead.

	* Angle.cc, libmead/Angle.cc: Must introduce a .cc file for this
	class so that static member, epsilon, can be initialized.

	* NOTES: Notes on new "patch" branch from 2.0.2, and bug fix.

	* librx/Makefile.in: Had forgotten to put this under RCS so add it
	now under CVS

	* ElectrolyteByAtoms.cc, libmead/ElectrolyteByAtoms.cc: Fix bug in
	use of delete operator.

	* GNUmakefile: Fix up top_srcdir and vpath stuff so it works top
	source dir name is "mead" which is what it is under thi's CVS
	arrangement.

1999-12-24  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* malloc.c: bye bye

1999-12-23  Don Bashford  <bashford@gage.scripps.edu>

	* PointCharge.h, libmead/PointCharge.h: Class representing a
	single point charge (this was supposed to be part of
	MEAD_2_0_2_alpha, but I had forgotten to put it under RCS)

	* Angle.h, libmead/Angle.h: Make epsilon static

	* Sausage.MPlex.cc, libmead/Sausage.MPlex.cc: include of cstring
	needed for memset function

1999-12-22  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/test-Coord.so.py: Print out data members of `c'
	individually.

	* Coord.cc: Remove all cruft related to "inline".

	* Coord.h, libmead/Coord.h: Annotate w/ wrapping directives
	(comments, no functional change).

	* Angle.cc, libmead/Angle.cc: New file.

	* Angle.h, libmead/Angle.h (Angle::epsilon): Declare as static.
	Move initialization to Angle.cc.

	(Angle::Angle): Move three ctors to Angle.cc.

	* Makefile.in (util_objs): Add Polynomial.o.

	* Makefile.in (util_objs): Add Angle.o.

	* PointCharge.h, libmead/PointCharge.h: New file.

	* Makefile.in (util_objs): Add Coord.o.

	* librx/Makefile.in: New file.

	* Coord.cc: Move non-class definitions back to Coord.h.

	* Coord.h, libmead/Coord.h: Move non-class definitions back from
	Coord.cc to here.  Surround them w/ `#ifndef SWIG'.

	* swig/README: New file.

1999-12-21  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/Coord.j: New file.

	* Coord.cc: Substitute all "inline" w/ "__s__inline" and then
	define that macro to be nil when `SWIG' is defined and "inline"
	otherwise.

	(Coord::read, operator<<, operator>>): Ifdef these out based on
	`SWIG'.

	* swig/GNUmakefile (NO_INLINE): New var, but commented out since
	it doesn't seem to work.

	(%.so.result): Also make dependent on the test-%.so.py file.

	* Coord.h, libmead/Coord.h (Coord::~Coord): New proto.

1999-12-18  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* swig/GNUmakefile (PYTHON_INCLUDES): Remove g++ specific dir, not
	needed.

	(clean): Also remove backup files.

	* swig/shadowed (SwigPlay4): New class.

	* swig/test-SwigPlay4.so.py, swig/SwigPlay4.cc, swig/SwigPlay4.j,
	swig/SwigPlay4.h: New file.

	* swig/GNUmakefile (PYTHON_INCLUDES): New var, factored out of
	callers.

	* swig/Coord.i: Bye bye.

	* swig/test-Coord.so.py: Rewrite to be more "oo".

	* swig/GNUmakefile (clean): Use easier wildcard.

	* swig/GNUmakefile (SO_WRAPPED, SO_SHADOWED): New vars.
	(SO_FILES): Combination of both wrapped and shadowed classes.

	(clean): Also delete artifacts of shadowing flow.

	(%_shadow.cc : %.j): New rule.  (%.so : %cc %_shadow.cc): New
	rule.

	(.PRECIOUS): Include %_shadow.cc files.

	* swig/SwigPlay3.h, swig/SwigPlay3.cc, swig/SwigPlay3.j,
	swig/test-SwigPlay3.so.py: New file.

	* swig/wrapped, swig/shadowed: Commenting, no functional change.

	* swig/shadowed, swig/test-SwigPlay2.so.py: New file.

	* swig/GNUmakefile (check): Handle case where all tests pass.

	* swig/wrapped (SwigPlay2): New class.

	* swig/SwigPlay2.i, swig/SwigPlay2.h, swig/SwigPlay2.cc: New file.

	* swig/GNUmakefile (SO_FILES): Consult file "wrapped" instead of
	hardcoding.

	(VPATH): New var.

	(%.o : %_wrap.cc, %.so : %.o): Elide these two targets, combining
	actions.

	(%.so.result): Rewrite to always produce a result file Target now
	depends on GNUmakefile.

	(.PRECIOUS): Add `%.so'.

	* swig/wrapped, swig/test-SwigPlay1.so.py, swig/SwigPlay1.i,
	swig/SwigPlay1.h, swig/SwigPlay1.cc: New file.

1999-12-16  Thien-Thi Nguyen  <ttnttn@shelf.scripps.edu>

	* Coord.cc: New file.

	* Coord.h, libmead/Coord.h: Move definitions to separate file:
	Coord.cc.

	* swig/test-Coord.so.py, swig/GNUmakefile, swig/Coord.i: New file.

1999-12-06  Don Bashford  <bashford@gage.scripps.edu>

	* GNUmakefile: Change MEADVERSION number

	* NOTES: Check in for snapshot MEAD_2_0_2_alpha

	* GNUmakefile: Bring Dave's Kirkwood stuff, and Dave and Alexy's
	GenBorn stuff into libmead.a

1999-11-16  Don Bashford  <bashford@gage.scripps.edu>

	* SAVanal_calc.cc, libmead/SAVanal_calc.cc: Take care of case of
	two identical spheres on top of each other

1999-11-12  Don Bashford  <bashford@gage.scripps.edu>

	* README.dist: Update locaton of Beroza programs

1999-08-06  Don Bashford  <bashford@gage.scripps.edu>

	* AnalySphere.cc: Removal of a spurious include of
	SeriesPotential.h (this allows removal of some unused source files
	from directory)

	* Kirkwood.cc, Kirkwood.h, Legendre.cc, Legendre.h,
	SeriesPotential.cc, SeriesPotential.h: REMOVED THESE UNUSED SOURCE
	FILES

1999-08-05  Don Bashford  <bashford@gage.scripps.edu>

	* AnalySphere.cc, AnalySphere.h: Dave's version which includes the
	Kirkwood formula implementation (from his test-1.1.9 directory)

	* Legendre.cc, Legendre.h, Kirkwood.cc, Kirkwood.h,
	SeriesPotential.cc, SeriesPotential.h, Angle.h, ElySphere.cc,
	ElySphere.h, Polynomial.cc, Polynomial.h, kirkwood_test.cc: New
	files copied from Lidsky's Kirkwood sphere implementation in his
	test-1.1.9 directory.

	* ElectrolyteEnvironment.h, Elstat_list_init.cc, GNUmakefile,
	Coord.h: Changes needed to get Dave's Kirkwood stuff to compile.
	(copied from or based on his test-1.1.9 directory)

	* ElstatMaker.cc: The make function tries out more different
	possibilities of one or two subclasses non-specific before giving
	up.  (Needed for Dave's Kirkwood stuff, and a significant general
	improvement.)

1999-08-03  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: check in for snapshot

	* GNUmakefile: ifeq for KCC compilation, and changes (see
	top_srcdir and vpath) for compilation in sibling directories.

	* Potat.h, FinDiffMethod.cc, PairGenBorn.cc, PairGenBorn.h: Minor
	changes for KCC compilation.

	* AtomID.h, Atom.cc, Atom.h: Adapt to new polymorpic
	iterator/container scheme.

	* Coord.h: Fix up == and != operatorions

	* AmstFitDens.h, OnePointCharge.h, OnePointCharge.cc,
	ManyPointCharge.h, AtomChargeSet.h, AtomChargeSet.cc: Adapt to new
	polymorpic iterator/container scheme.

	* ChargeDist.h, ChargeDist.cc: Revised scheme for polymorphic
	iterator and container stuff.  (see NOTES and t-stuff derectory)

	* mulsidecomp.cc: Correct backbond spec.  Add -T command line
	option.

1999-08-02  Don Bashford  <bashford@gage.scripps.edu>

	* GNUmakefile: Use libmead for the major applications.

1999-03-01  Don Bashford  <bashford@gage.scripps.edu>

	* PairGenBorn.cc: Alexey's fix: Add an offset to the Born radii,
	under some circumstances.

1999-02-25  Don Bashford  <bashford@gage.scripps.edu>

	* GNUmakefile: Modify the multiflex target to include
	PairGenBorn.o and to use libmead.a.

	* multiflex.cc: Adapt to new style of AtomicElstatMaker for
	SiteInMulti, and use it to implement a pairwise generalized Born
	option through a new flag, -GenBorn.

	* SiteUtil.h, SiteUtil.cc, SiteInMulti.cc, SiteInMulti.h,
	MultiSiteMolecule.h, MultiFlexiSiteMol.h, MultiSiteMolecule.cc,
	FlexiSite.h, MultiFlexiSiteMol.cc, FlexiSite.cc: SiteInMulti now
	stores a functional that knows how to make an elstat, given atoms,
	generating charges and center of interest.  It must be passed in
	via the ctor.  This replaces the diel_maker and ely_maker stuff.

	* PairGenBorn.cc: Blab 2 stuff

	* ElstatPot.h, ElstatPot.cc: Add an ElstatPot ctor taking and
	ElstatPot_lett pointer arg.

	* mulsidecomp.cc: Adapt to change of SiteInMulti class ctor.

1999-02-17  Don Bashford  <bashford@gage.scripps.edu>

	* gbtest.cc: Use the charge * pot multiplication properly.

	* PairGenBorn.h, PairGenBorn.cc: Define multiplication between
	PairGenBorn and AtomChargeSet.  Use the (more efficient) value
	function taking AtomID argument.

	* PairGenBorn.cc: Solve bails out if epsin is other than 1.0

	* ManyPointCharge.cc, OnePointCharge.cc, AtomChargeSet.cc,
	Debye.cc, AnalySphere.cc, AnalySlab.cc: Skip over any
	singularities in Coulomb-like terms.

	* GNUmakefile: gbtest target added.

	* gbtest.cc: New file.

	* PairGenBorn.cc: In final (nested) loop of solve make the
	outermost loop over charges, from acs, for efficiency in typical,
	multiflex-like cases where far fewer charged atoms than dielectric
	atoms.  Also further restructuring of this routine, mostly to
	remove unnecessary intermediate arrays and function-scope
	variables.

	* PairGenBorn.h: Remove unnecessary includes.  Fix up indentation.

	* PairGenBorn.h: Get rid of the set function previously used by
	ctor.

	* PairGenBorn.cc: Don't change charge units.  Use a more C++/MEAD
	like style.

1999-02-16  Don Bashford  <bashford@gage.scripps.edu>

	* PairGenBorn.cc, PairGenBorn.h: New file.

	* NOTES: Check-in for snapshot 1.1.10

	* GNUmakefile: The beginnings of making MEAD a library.  For now
	just use for mulsidecomp target.

	* SiteInMulti.cc: Don't create a local copy of all background
	charges inside calc_elstat.

1999-02-14  Don Bashford  <bashford@gage.scripps.edu>

	* SiteInMulti.h: added a public make_model_compound function
	(useful for mulsidecomp)

	* Potat.h: added operator[](const AtomID&), which is useful for
	mulsidecomp.

1999-02-12  Don Bashford  <bashford@gage.scripps.edu>

	* mulsidecomp.cc: Extensive modifications and additions.  Now
	seems to work pretty well, at least on aldolase-ab test.

1999-02-11  Don Bashford  <bashford@gage.scripps.edu>

	* mulsidecomp.cc: New file.

1999-02-09  Don Bashford  <bashford@gage.scripps.edu>

	* OnePointCharge.cc, ChargeDist.cc, MultiSiteMolecule.cc,
	AtomSet.cc, Atom.cc, Atom.h: Minor fixes

	* AtomSet.h, ChargeDist.h: For non-GNU compilers: using namespace
	std (bad form?)

1999-02-09  Don Bashford  <bashford@gage.scripps.edu>

	* OnePointCharge.cc, ChargeDist.cc, MultiSiteMolecule.cc,
	AtomSet.cc, Atom.cc, Atom.h: Minor fixes

	* AtomSet.h, ChargeDist.h: For non-GNU compilers: using namespace
	std (bad form?)

1999-02-08  Don Bashford  <bashford@gage.scripps.edu>

	* AtomChargeSet.cc: Fix have_charges

	* Potat.h, Potat.cc: Add a function to zero out a Potat.

	* SiteUtil.cc, SiteUtil.h: elstat_mol_charge_state no longer takes
	arguments pertaining to site-site interactions or pK terms.
	Instead, it returns a Potat so the caller can figure it out.

	* FlexiSite.cc: Fix a problem where the need of sites to store
	information about all other sites caused multflex to run out of
	memory for many-site systems.  SiteInMulti::calc_site now requires
	a vector of other sites and a writable vector of site-site
	interactions in its argument list to get this info back to the
	MultiSiteMolecule.  Also fix bug introduced in previous rev of
	preferring AtomSet::set_coords_to, to the old set_coords_of_a_to_b
	function.

	* SiteInMulti.h, SiteInMulti.cc, MultiSiteMolecule.cc,
	MultiSiteMolecule.h, FlexiSite.h: Fix a problem where the need of
	sites to store information about all other sites caused multflex
	to run out of memory for many-site systems.
	SiteInMulti::calc_site now requires a vector of other sites and a
	writable vector of site-site interactions in its argument list to
	get this info back to the MultiSiteMolecule.

1999-02-03  Don Bashford  <bashford@gage.scripps.edu>

	* potscan.cc, solinprot.cc, pair_enerdens_test.cc, SolvAccVol.cc,
	SiteInMulti.h, SiteInMulti.cc, Potat.cc, ElectrolyteByAtoms.cc,
	FlexiSite.cc, ChargeDist.h, AtomChargeSet.h, AtomChargeSet.cc:
	Adapt to the new, map-like version of AtomSet.

	* AtomSet.h, AtomSet.cc: Simplify AtomSet by making it a subclass
	of map<AtomID,Atom>.  No more use of list, or hiding of non-const
	operations Delta stuff left in for now, although it is not needed.

1999-01-28  Don Bashford  <bashford@gage.scripps.edu>

	* AtomSet.cc: Changes related to the switch from libg++ Map
	containers for AtomsSets to STL containers, and from a Pix to an
	iterator-based method of access.  Also, imposed a policy that
	traversal of PointCharges from ChargeDists should be iterator
	style.

	* multiflex.cc: Changes to allow a SolvAccVol to determine the
	electolyte boundary

1999-01-20  Don Bashford  <bashford@gage.scripps.edu>

	* pair_enerdens_test.cc: Fixed some run-time errors in the merge
	and shift functions.

	* pair_enerdens_test.cc: Switch to iterator style for atom sets.
	This version compiles, but has run-time problems

1999-01-14  Don Bashford  <bashford@gage.scripps.edu>

	* ChargeDist.h: Put PointCharge definition back in here, not in a
	.h file.

	* NOTES: Checkin for snapshot

	* configure.in: Removed need for hash.o from gnustuff

	* Makefile.in: Remove dependence on *Map* object files

	* GNUmakefile: Remove any dependence on the *Map* source or object
	files.  Small fix up to dependency-file generation method.

	* potscan.cc: Update and switch to STL iterator style

	* add_charge_test.cc: Update and use iterator style

	* DielByAtoms.cc, DielByAtoms.h: Provide for atom-dependent
	dielectric environments to retain a copy of their AtomSet data,
	and hand it out to users.  This is to help with generalized Born.

	* AtomID.cc, AtomID.h: Add a less-then operator, remove hash
	function (relates to switch to STL)

	* multPotxCharge.cc, solinprot.cc, SiteInMulti.h, SolvAccVol.cc,
	SiteInMulti.cc, Potat.cc, Potat.h, OnePointCharge.cc,
	OnePointCharge.h, ManyPointCharge.h, ManyPointCharge.cc, Debye.cc,
	ElectrolyteByAtoms.cc, FlexiSite.cc, ChargeDist.h, AtomSet.h,
	ChargeDist.cc, AtomChargeSet.cc, AtomChargeSet.h, AnalySlab.cc,
	AnalySphere.cc, AmstFitDens.h, AmstFitDens.cc: Changes related to
	the switch from libg++ Map containers for AtomsSets to STL
	containers, and from a Pix to an iterator-based method of access.
	Also, imposed a policy that traversal of PointCharges from
	ChargeDists should be iterator style.

1999-01-14  Don Bashford  <bashford@gage.scripps.edu>

	* GNUmakefile: Remove any dependence on the *Map* source or object
	files.  Small fix up to dependency-file generation method.

	* potscan.cc: Update and switch to STL iterator style

	* add_charge_test.cc: Update and use iterator style

	* DielByAtoms.cc, DielByAtoms.h: Provide for atom-dependent
	dielectric environments to retain a copy of their AtomSet data,
	and hand it out to users.  This is to help with generalized Born.

	* AtomID.cc, AtomID.h: Add a less-then operator, remove hash
	function (relates to switch to STL)

	* multPotxCharge.cc, solinprot.cc, SiteInMulti.h, SolvAccVol.cc,
	SiteInMulti.cc, Potat.cc, Potat.h, OnePointCharge.cc,
	OnePointCharge.h, ManyPointCharge.h, ManyPointCharge.cc, Debye.cc,
	ElectrolyteByAtoms.cc, FlexiSite.cc, ChargeDist.h, AtomSet.h,
	ChargeDist.cc, AtomSet.cc, AtomChargeSet.cc, AtomChargeSet.h,
	AnalySlab.cc, AnalySphere.cc, AmstFitDens.h, AmstFitDens.cc:
	Changes related to the switch from libg++ Map containers for
	AtomsSets to STL containers, and from a Pix to an iterator-based
	method of access.  Also, imposed a policy that traversal of
	PointCharges from ChargeDists should be iterator style.

1999-01-06  Don Bashford  <bashford@gage.scripps.edu>

	* SiteInMulti.h, multiflex.cc, MultiSiteMolecule.cc,
	SiteInMulti.cc, FlexiSite.cc: Modifications to the
	multiflex-related code to allow an electrolyte environment
	boundary to be determined by the SolvAccVol rather than an ion
	exclusion radius.

1998-12-02  Don Bashford  <bashford@gage.scripps.edu>

	* OnePointCharge.h: get_cuberep now has a real implementation

	* OnePointCharge.cc: get_cuberep now deals properly with a charge
	near edge of lattice.

	* GNUmakefile: Added mem and memhole targets, which concern
	passing charges through membranes possibly with a hole (pore).

1998-12-01  Don Bashford  <bashford@gage.scripps.edu>

	* OnePointCharge.cc: Implemented get_cuberep, but it has bug if
	charge is near edge.

1998-07-26  Don Bashford  <bashford@gage.scripps.edu>

	* NEWS: Check in for version 1.1.8

	* NOTES: Check in for snapshot 1.1.8

	* configure.in: Fix the tab problem (hope it doesn't break
	anything).

	* README: Correct version number

	* PROBLEMS: Added stuff about cutting edge pgcc probles and need
	for ANSI C for redti.

	* GNUmakefile: various fixes

	* 0README.FIRST: Updated for release 1.1.8

1998-07-25  Don Bashford  <bashford@gage.scripps.edu>

	* 0README.FIRST: New file.

1998-07-24  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.in: Comment out that RCS cancellation since it crashes
	DEC's make!

	* Makefile.in, README.dist: Fix version number

1998-07-22  Don Bashford  <bashford@gage.scripps.edu>

	* NEWS: Added more detail about the new utilities, and re-ordered
	the other items.

1998-07-20  Don Bashford  <bashford@gage.scripps.edu>

	* PROBLEMS: Added a caution about consistancy between .st and .pqr
	files.  Deleted some obsolete problems and updated others.

	* README.dist: Derived be deletion from rev 2.3 of the main README

	* README: Revisions for MEAD 1.1.7

	* NEWS: Tiny change

	* INSTALLATION: Completely new instructions since switching to
	autoconf/configure

	* globals.cc: define _POSIX_SOURCE (for portability?)

	* redti.c: Don't worry about overwriting molname.pkout.  This
	eliminates need for fexists, improves portability.  Trim long flat
	tails of whole-protein titration curve.

1998-07-17  Don Bashford  <bashford@gage.scripps.edu>

	* configure.in: Deal with IRIX strangeness about C++ booleans

	* Makefile.in: Cancel implicit RCS rules to avoid annoyances
	during testing.

	* install-sh, config.sub, config.guess: New file.

1998-06-23  Don Bashford  <bashford@gage.scripps.edu>

	* NEWS, INSTALLATION.OLD: New file.

1998-06-10  Don Bashford  <bashford@gage.scripps.edu>

	* QmElement.cc: Don't include std.h

	* SiteInMulti.cc, FlexiSite.cc: Write something useful in the
	.summ file, even for single-conformer calculations.

	* solinprot.cc, solvate.cc, potential.cc, qmsolvate.cc,
	multiflex.cc: Add -converge_oldway flag.

	* sor.cc, FDGridLevel.h: In convergence test maximum rmsdiff is
	now inversly proportional to grid_dim.  But allow conditional
	reversion to old way via new static member functions.

1998-04-23  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Check in for snapshot 1.1.7

	* configure.in: Various fixes, some related to KCC.

	* Makefile.in: Make sure that up-to-dateness libgnustuff.a is
	properly checked.

	* wrap_typeinfo: For USE_RTTI, put typeinfo stuff into global
	namespace (needed for KCC compilation).

	* AvsScalarField.h: Include iostream, instead of forward decl of
	iostreams

	* NonUnif.Plex.cc, Sausage.Plex.cc: Remove use of obsolete
	stream.h header.

	* Potat.cc: Don't use non-standard iostream openmode,
	ios::nocreate (for KCC compatability).  Use the new safeopen
	function rather than explicit ofstream stuff.

	* MultiSiteMolecule.cc, FlexiSite.cc: Don't use non-standard
	iostream openmode, ios::nocreate (for KCC compatability).  Replace
	use of ios::seekg with filebuf's pubseekpos or seekpos

	* AvsScalarField_input.cc: Don't use non-standard iostream
	openmode, ios::nocreate (for KCC compatability) Also KCC need to
	use the (standard) pubseekoff for filebuf manipulations, rather
	than (standardly protected) seekoff.

	* AvsScalarField.cc: Use the new safeopen function rather than
	explicit ofstream stuff.

	* globals.cc, globals.h: Provide the safeopen function for when we
	want to be sure an output file doesn't step on an existing one.

	* potential.cc, nlpotential.cc, SolvAccVol.cc, SiteInMulti.cc:
	Don't use non-standard iostream openmode, ios::nocreate (for KCC
	compatability)

1998-04-23  Don Bashford  <bashford@gage.scripps.edu>

	* String.cc: Make for-loops compatable with either old or new
	scope rule.  For KCC use sentries instead of ipfx to prepare
	istreams for input to Strings.

	* configure.in: Various fixes, some related to KCC.

	* Makefile.in: Make sure that up-to-dateness libgnustuff.a is
	properly checked.

	* wrap_typeinfo: For USE_RTTI, put typeinfo stuff into global
	namespace (needed for KCC compilation).

	* AvsScalarField.h: Include iostream, instead of forward decl of
	iostreams

	* NonUnif.Plex.cc, Sausage.Plex.cc: Remove use of obsolete
	stream.h header.

	* Potat.cc: Don't use non-standard iostream openmode,
	ios::nocreate (for KCC compatability).  Use the new safeopen
	function rather than explicit ofstream stuff.

	* MultiSiteMolecule.cc, FlexiSite.cc: Don't use non-standard
	iostream openmode, ios::nocreate (for KCC compatability).  Replace
	use of ios::seekg with filebuf's pubseekpos or seekpos

	* AvsScalarField_input.cc: Don't use non-standard iostream
	openmode, ios::nocreate (for KCC compatability) Also KCC need to
	use the (standard) pubseekoff for filebuf manipulations, rather
	than (standardly protected) seekoff.

	* AvsScalarField.cc: Use the new safeopen function rather than
	explicit ofstream stuff.

	* globals.cc, globals.h: Provide the safeopen function for when we
	want to be sure an output file doesn't step on an existing one.

	* potential.cc, nlpotential.cc, SolvAccVol.cc, SiteInMulti.cc:
	Don't use non-standard iostream openmode, ios::nocreate (for KCC
	compatability)

1998-04-21  Don Bashford  <bashford@gage.scripps.edu>

	* configure.in, Makefile.in: New file.

1998-04-19  Don Bashford  <bashford@gage.scripps.edu>

	* AtomID.defs.h: Reduced DEFAULT_INITIAL_CAPACITY to 1 to stop
	memory waste for large numbers of small containers (like the
	AtomChargeDists for sites in multiflex) and to fix(?) a multiflex
	crash on DEC alphas

1998-04-18  Don Bashford  <bashford@gage.scripps.edu>

	* ChargeDist.h, DielectricEnvironment.h, ElstatPot.h,
	ElectrolyteEnvironment.h, FDElstatMaker.h, ElstatMaker.h,
	AnalyMaker.h: Use the new wrap_typeinfo header.

	* wrap_typeinfo: Renamed from typeinfo to wrap_typeinfo.  This
	makes it simpler to include the real typeinfo in case of USE_RTTI.

1998-04-17  Don Bashford  <bashford@gage.scripps.edu>

	* Atom.h, AtomID.defs.h, AtomID.h, CLShell.h, ChargeDist.h,
	DielectricEnvironment.h, ElectrolyteEnvironment.h, ElstatPot.h,
	FDGridLevel.h, NLFDGridLevel.h, NonUnif.defs.h, Pair.h,
	QmMolecule.h, Sausage.defs.h, Sausage.h, SolvAccVol.h, TPShell.h,
	Vertex.h, globals.h, nlpotential.cc, potential.cc, saltscan.cc,
	sav-driver.cc, solvate.cc: removed unnecessary dependencies on
	typeinfo where no RTTI is used.

	* AtomSet.cc, NonUnif.Plex.h, Sausage.Plex.h: removed
	anachronistic dependence on std.h

1998-04-16  Don Bashford  <bashford@gage.scripps.edu>

	* GNUMakefile: Targets related to scanning and fixing
	potat-reltated data.

1998-04-16  Don Bashford  <bashford@gage.scripps.edu>

	* all Makefiles renamed to GNUMakefile.  Corresponding RCS file
	renamings too.

	* Makefile: Targets related to scanning and fixing potat-reltated
	data.

1997-09-18  Don Bashford  <bashford@gage.scripps.edu>

	* Potat.cc: The read_oldstyle function is modified so that when it
	gets a coord-rad mismatch it no longer bails out; now it rescans
	the atset looking for a match to the potat entry's coord and
	radii.  This is because older versions seem to have produced
	potats with the same atoms in different orderings (probably
	because of subtleties of the libg++ Map class) and I want to be
	able to use those old potats.

	* typeinfo: Remove the math.h hacks

Thu Jul 17 18:44:22 1997  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Check in for snapshot 1.1.6

	* CubeLatSpec.cc, AvsSF_read_header.cc: Minor changes

	* multiflex.cc: Site-wise parallelized using MPI with a
	master-slave idiom.  Master hands out sites to do, then loops back
	over sites picking up info from .potat files.  Slaves stdout
	redirected to files named according to process id and site index.
	This is a rough, first parallel version.  See notes.

	* next_typeinfo.h: Support using native RTTI under Cray Unicos.

	* DielMembAtoms.h, DielMembAtoms.cc: Added ctor that takes a
	SolvAccVol argument.  Elimiated AtomSet data member.

	* Bigmem.cc: Add debugging code activated by defining macro,
	BIGMEM_DEBUG.

	* VertElem.h, Pair.h: Fixed a strange operator= declaration
	syntax.

	* MultiSiteMolecule.h, MultiSiteMolecule.cc, MultiFlexiSiteMol.h,
	  MultiFlexiSiteMol.cc: Added constructors that take
	  DielectricEnvironment and ElectrolyteEnvironment arguments.
	  This helps with parallelization and management of SolvAccVols
	  stored in files.

	* AnalyMaker.h: Work around some strange bug on Crays.

Wed Jul  2 21:23:37 1997  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.gnu: Fix bug reported by Viseth Peang

Fri May  9 08:24:07 1997  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES, Makefile: Check in in preparation for snapshow 1.1.5

	* Makefile.dec, Makefile.dec.dist: clean the repository

Thu May  8 22:43:08 1997  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.hp.dist, Makefile.sgiIRIX6.dist,
	Makefile.sgiIRIX5.dist: Initial revision

	* Makefile.dec.dist: Update by copying Makefile.dec to here and
	removing in-house stuff.

	* PROBLEMS, README.dist, INSTALLATION, README.SAV, README: Updates
	for release of snapshot 1.1.5.

	* sav-driver.cc: Fixed output bug.

Thu May  1 04:53:09 1997  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.gnu: Added AVS related stuff.

	* Makefile.sgiIRIX5, Makefile.sgiIRIX6: Fixes to localdeps stuff.
	Use a do-localdeps target.

	* Makefile.hp: Remove the cleandeps target.

	* Makefile.dec: Update to DEC OSF1 V4.0 and DEC C++ V5.4.  Things
	are cleaner now that platform has fewer bugs.

Wed Apr 30 01:25:25 1997  Don Bashford  <bashford@gage.scripps.edu>

	* ElectrolyteEnvironment.h, ElstatPot.h, DielectricEnvironment.h,
	ChargeDist.h, AtomSet.h: Add the "class" keyword to make DEC cxx
	happy.

	* AvsSF_read_header.cc: User strncmp instead of String::operator==
	to work around a DEC String class limitation.

	* potential.cc: Pointers passed to the FinDiffElstatPot ctor must
	not be deleted later!

Tue Apr 29 19:07:24 1997  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.sgiIRIX6: Clean compiler-generated template-related
	files in ii_files.

	* Makefile.sgiIRIX5: Minor fixes.

	* Makefile.sgiIRIX6, Makefile.sgiIRIX5: Do a `touch localdeps' to
	avoid SGI's make failing an `include'.

	* Makefile.sgiIRIX5: Chage related to the forking of Makefile.sgi
	into IRIX5 and IRIX6 versions.

	* Makefile.sgiIRIX5: clean should delete the compiler-generated,
	template-related ii_files.  Other minor fixes and simplifications.

Mon Apr 28 22:48:35 1997  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.sgiIRIX6: Fork off of Makefile.sgi since IRIX6 is quite
	different from IRIX5.

	* PROBLEMS: Updates having to do with compiler flags under HPUX
	and SGI.

Fri Apr 25 01:08:13 1997  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile.hp: Tuning of CC options, particulaly optimization.
	Use HP's librx rather than GNU's.  Add avs things.  Remove the
	template repository during a clean.

Wed Apr 23 19:06:13 1997  Don Bashford  <bashford@gage.scripps.edu>

	* ChargeDist.cc: Accommodate an HP C++ restrection on where
	template definitions must go.

	* FinDiffElstatPot.h: *Trivial change.

	* Elstat_list_init.cc: A few more items in the ElstatMaker list.
	This makes liltest.cc work.  Clean up of comments.

	* SiteUtil.cc, SiteUtil.h, multiflex.cc: Added the ability to
	suppress the generation of .potat files (requested by Wendy).
	This works via a global flag in the SiteUtil module that is set in
	main according to a command line flag, -nopotat.

Tue Feb 18 23:32:36 1997  Don Bashford  <bashford@gage.scripps.edu>

	* redti.c: Modifications to include directives for compilation on
	newer HPUX and hopefully others.  Fixes bug where -cutoff and
	-pHrange flags were broken because strtod not declared properly.

Tue Oct  8 00:09:13 1996  Don Bashford  <bashford@gage.scripps.edu>

	* pair_enerdens_test.cc: More things controllable from command
	line.  (Actual changes 20 Aug)

	* integrate1D.cc: EPS --> EPS_Romberg (Change was actually Aug 17)

Tue Aug 20 21:49:21 1996  Don Bashford  <bashford@gage.scripps.edu>

	* pair_enerdens_test.cc: Make EPS in the Romberg method global
	external and modify it in main.  this allows lowering it to 10e-3
	since we need less accuracy for occluded density.  Use a shifted
	FinDiffMethod for the "rigorous" calculation.  (This allows some
	code to be moved outside the if (do_rigor) if (do_approx) loops.

Sun Aug 18 05:13:19 1996  Don Bashford  <bashford@gage.scripps.edu>

	* pair_enerdens_test.cc: Clean things up by using little functions
	for AtomSet and bounding box manipulations.  No substantive
	changes.

Sat Aug 17 20:49:12 1996  Don Bashford  <bashford@gage.scripps.edu>

	* pair_enerdens_test.cc: For the density integration part, switch
	to a strategy of calculated the occluded density and subtracting
	it from the solvation energy of the lone molecule.  Also add a
	-direction flag.

	* integrate3D.h: Add IntegrationBox, a subclass of
	IntegrationLimits3D.  This allows specification of a box to
	integrate over by giving its upper and lower corners.

	* pair_enerdens_test.cc: Make use the the more versatile
	Integrate3D and IntegrationBox to position the integration box in
	places other than the center.  But it still integrates over a
	wastefully large volume.  (These changes actually made around 26
	July.)

Fri Jul 26 23:29:43 1996  Don Bashford  <bashford@gage.scripps.edu>

	* pair_enerdens_test.cc: Many changes.  There is new one moving
	molecule and one stationary, except the for the purposes of the
	2_1 density-based calculations it is convenient (for grid
	purposes) to the mol2 calculation by a vector equivalent to the
	maximum separation.  Allow for use of different grids on the mol1
	and mol2 calculations for the density.  Make sure molecules will
	stay in lattice boxes and warn or die if they won't.  Add some
	documentary comments at the top.

Tue Jul 23 04:24:24 1996  Don Bashford  <bashford@gage.scripps.edu>

	* pair_enerdens_test.cc: Initial revision

Fri Jul 19 21:04:58 1996  Don Bashford  <bashford@gage.scripps.edu>

	* NOTES: Test RCS locking

	* AvsScalarField.cc: tiny mod.

	* Makefile.sgiIRIX5: Include avs_base_objs among .o files to make

	* AvsScalarField_input.cc: use of the openmode ios::bin restricted
	to GNU (ios::binary is standard; either is probably a no-op under
	Unix).  ios::setstate(ios::failbit) --> ios::clear(ios::failbit)
	to workaround broken SGI iostreams.  Icky.

	* AvsSF_read_header.cc: ios::setstate(ios::failbit) -->
	ios::clear(ios::failbit) to workaround broken SGI iostreams.
	Icky.

Wed Jun 26 01:16:35 1996  Don Bashford  <bashford@gage.scripps.edu>

	* enerdens.cc: Get back to original idea: comparing density
	integration versus old way of calculating energy profile of a pair
	of oppositely charged atoms.  This version works.

	* AnalySphere.cc: Removed some debugging verbosity.

	* integrate3D.cc: Switch to using the qromb function of
	integrate1D rather than nromb.

	* integrate1D.h, integrate1D.cc: Add a qromb function that is like
	the one in Numerical Recipies in that it cuts off on the basis of
	an epsilon value.

Mon Jun 24 07:36:10 1996  Don Bashford  <bashford@gage.scripps.edu>

	* enerdens.cc: More cleanup.  Use global_solvaccvol to generalize
	the analtyic function.  Use the SolvAccVol-taking ctors for
	TwoValueDielectric.

Thu Jun 20 22:26:55 1996  Don Bashford  <bashford@gage.scripps.edu>

	* DielByAtoms.h, DielByAtoms.cc: Added ctors that take SolvAccVols
	rather than AtomSets as args.  No longer use AtomSets as data
	members.

	* ElstatMaker.h, AnalyMaker.h, FDElstatMaker.h: Comment out ctor
	verbosity

	* integrate1D.cc, integrate1D.h, integrate3D.cc, integrate3D.h:
	Initial revision

	* enerdens.cc: Moved the numerical integration stuff out to other
	files and generally cleaned up.  Functionality same as before.

Wed Jun 19 19:15:24 1996  Don Bashford  <bashford@gage.scripps.edu>

	* enerdens.cc: Initial revision

Wed Jun 12 17:15:41 1996  Don Bashford  <bashford@gage.scripps.edu>

	* AnalySphere.h, AnalySphere.cc:: Implement real solution for
	special case of central charge

Tue Apr 23 17:38:11 1996  Don Bashford  <bashford@gage.scripps.edu>

	* Makefile: Added potscan target.

Sat Apr 20 05:39:56 1996  Don Bashford  <bashford@gage.scripps.edu>

	* Potat.cc: Small fix to ctor

Fri Apr  5 21:48:37 1996  Don Bashford  <bashford@gage.scripps.edu>

	* solinprot.cc: Serious bug fix: The electrolyte boundary must be
	defined by the union of the protein and solute atom sets, not just
	the protein.

Fri Mar 15 08:42:33 1996  Don Bashford  <bashford@toad.scripps.edu>

	* NOTES: Check in for snapshot 1.1.4

	* Makefile: New target and some other mods relating to new
	AvsScalarField class and its applications.

	* out2avs.cc: AvsSclarFromVec stuff moved out to own files.

	* ElstatPot.cc: Unnecessary include removed.

	* potential.cc: Added the flags -CoarseFieldInit and
	-CoarseFieldOut for doing coarse grid initialization and/or output
	from/to AVS field files, respectively.  This is experiment for
	Wendy.

	* FinDiffElstatPot.cc, FinDiffElstatPot.h: Add member functions
	that exploit the fact that FDGridMethod can write AVS field files
	and/or initialize itself by reading them.  At the moment these
	operations are only done on the coarsest grid.

	* FDGridLevel.cc, FDGridLevel.h: Inheret from AvsScalarField and
	provide some member functions that allow writing potential
	lattices as AVS field files.

	* AtomSet.cc: Correct HETATM line check.

Thu Mar 14 06:38:20 1996  Don Bashford  <bashford@toad.scripps.edu>

	* avs2avs.cc: Initial revision

	* AvsSF_read_header.cc: Minor clean ups.

	* AvsScalarField.h, AvsScalarField.cc: Added functions
	write_{uniform,rectilinar}_{native,parsing} Other fixes.

	* AvsScalarField_input.cc: Various fixes.

	* AvsSF_read_header.cc: Change debugging output to blab3.  Other
	minor fixes.

Tue Mar 12 22:28:49 1996  Don Bashford  <bashford@toad.scripps.edu>

	* AvsScalarField.cc, AvsScalarField.h: Added ability to read AVS
	fields.  Fairly complex stuff to switch between
	rectilinear/uniform and native/data-parsing mode.  Implementation
	is now split between 3 files: AvsScalarField.cc,
	AvsScalarField_input.cc and AvsSF_read_header.cc.  Code seems to
	work, at least for recilinear/data-parsing input.  Output
	functions still confined to rectilinear/data-parsing mode.  Much
	debugging output that should be removed.

	* AvsSF_read_header.cc, AvsScalarFromVec.cc, AvsScalarFromVec.h:
	  AvsScalarField_input.cc: Initial rev.

Thu Jan 11 00:35:08 1996  Don Bashford  <bashford@toad.scripps.edu>

	* out2avs.cc: Initial rev. developed on boa15 using g++ and tested
	for the myoglobin output of saltscan.

	* AvsScalarField.cc, AvsScalarField.h: Initial rev derived from
	non-RCS-controlled file previously in /home/bashford/mead

	* Makefile: Added out2avs target.

Wed Jan 10 21:42:05 1996  Don Bashford  <bashford@toad.scripps.edu>

	* try_addChargeDist.cc: This definition originally resided in
	ChargeDist.h, but for HP C++ (which uses cfront-style
	intantiation, I think) function template definitions need to sit
	in their own special files.  For now this file is used only for HP
	C++ compilation.

	* Makefile.hp: Initial version derived from Makefile.sgi.  Changes
	include try_addChargeDist.o as a new OBJ target and considerable
	revision of localdeps stuff Some of the localdeps ideas here might
	be rolled back into Makefile.sgi, etc.

	* redti.c: Minor change to port to HP cc.

	* sav-driver.cc: Add braces to a switch case containing
	declarations.

	* AmstFitDens.cc: Add return values to various un-implemented
	functions to avoid compiler errors.

	* ChargeDist.h: The HP C++ compiler wants template declarations
	and definitions to be in different places, and has a problem with
	function template declarations being in header files.  Use
	preprocesser to deal with this.  See also the new file
	try_addChargeDist.cc.

	* SolvAccVol.cc, Potat.cc: Change the preprocessor handling of the
	ios::bin issue to reflect that only GNU has ios::bin (which, by
	the way, is no longer the draft standard: now it is ios::binary)

Tue Jan  9 23:28:27 1996  Don Bashford  <bashford@toad.scripps.edu>

	* Shell.h: Minor changes because HP C++ can't deal with multiple
	return statements in an inline function.

	* SAVtag_points.cc, OnePointCharge.cc: Minor changes because HP
	C++ doesn't implement array initialization properly.

Thu Dec  7 06:58:09 1995  Don Bashford  <bashford@toad.scripps.edu>

	* ElectrolyteByAtoms.cc: Major bug fix in get_cuberep.

	* saltscan.cc: Minor bug fix.

	* saltscan.cc: Initial revision

	* Makefile: Added saltscan target

	* nlpotential.cc: Increased flexibility to specify kind of Ely and
	ion radius params for the Stern version, etc.

	* USternNonLinElytByAtoms.cc, USternNonLinElytByAtoms.h,
	ElectrolyteByAtoms.cc, ElectrolyteByAtoms.h: Add the possibility
	of using a SolvAccVol to define the ion access boundary.

Sat Dec  2 08:53:32 1995  Don Bashford  <bashford@toad.scripps.edu>

	* BoltNonLinElytByAtoms.cc: Fix sign error.

	* USternNonLinElytByAtoms.cc: Fix factor-of-phi and sign error.

Fri Dec  1 05:16:02 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Makefile.ultra: Initial revision

	* Sausage.MPlex.cc: SunPro C++ needs to include string.h for
	memset

	* Potat.cc, SolvAccVol.cc: SunPro C++ has no ios::bin either.

	* ADF_13_27_Data.h: Syntax bug fux.

Tue Nov 28 19:54:51 1995  Don Bashford  <bashford@toad.scripps.edu>

	* INSTALLATION: Remove statement that MEAD works on SGI R8000 IRIX
	6 machines.

	* PROBLEMS: Note problems with SGI R8000 IRIX 6 machines.

	* Makefile: Minor bug fix.

	* Makefile.sgi.dist, Makefile.sgi: Using the force dependency on
	localdeps caused infinite recursion.  Use *.cc instead.

	* PROBLEMS: A few more notes.

Tue Nov 28 02:09:19 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Makefile: Added dist target and redti target.  Other minor
	changes.

	* NOTES: Check in for snapshot MEAD_1_1_3

	* Makefile.gnu, PROBLEMS: Initial revision.  Goes with MEAD-1.1.3

	* README.dist: Version to go with MEAD-1.1.3

	* README: Update for MEAD-1.1.3 which will be generally
	distributed.  This is the "in-house" verion of the README file.

	* INSTALLATION: *** empty log message ***

Mon Nov 27 23:46:15 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Makefile.dec.dist, Makefile.sgi.dist: Initial revision

	* Makefile.dec, Makefile.sgi: Add redti as a target.  Minor
	mod. to recursive make and localdeps target.

	* nlpotential.cc: Initial revision.  A crude test only.

	* NLFDElstat.cc, NLFDElstat.h, NLFDGridLevel.cc, NLFDGridLevel.h,
	  nlsor.cc, USternNonLinElytByAtoms.cc, USternNonLinElytByAtoms.h:
	  Initial revision

	* NonLinElyt.cc, NonLinElyt.h: Initial revision.

	* DummyNonLinElytByAtoms.cc, DummyNonLinElytByAtoms.h, COPYING:
	Initial revision

	* BoltNonLinElytByAtoms.cc, BoltNonLinElytByAtoms.h: Rough
	preliminary implementation.

Mon Nov 27 20:05:48 1995  Don Bashford  <bashford@toad.scripps.edu>

	* FDElstatMaker.cc: Correct blab behavior

	* solvate.cc, sor.cc, multiflex.cc, potential.cc, SiteInMulti.h,
	  SiteUtil.cc, Potat.h, SiteInMulti.cc, Pair.h, Potat.cc,
	  MultiSiteMolecule.h, FlexiSite.h, MultiSiteMolecule.cc,
	  FlexiSite.cc, FinDiffMethod.cc, FinDiffMethod.h, FDGridLevel.h,
	  FinDiffElstatPot.h, FDChargeIterator.h, FDGridLevel.cc,
	  FDChargeIterator.cc, ElstatPot.cc, ElstatPot.h,
	  ElectrolyteEnvironment.cc, ElectrolyteEnvironment.h,
	  DielectricEnvironment.cc, DielectricEnvironment.h,
	  DielMembAtoms.h, DielCubeRep.cc, DielCubeRep.h, ChargeDist.h,
	  CubeLatSpec.h, ChargeCubeRep.h, ChargeDist.cc, Bigmem.cc,
	  Bigmem.h, AtomSet.h, AtomRegex.cc, AtomRegex.h,
	  AtomChargeSet.cc, AtomChargeSet.h, AnalySphere.h, AnalySlab.h:
	  Copyright message for outside distribution

	* AtomSet.cc: Allow HETATOMs and check for duplicate entries.

Fri Nov 24 22:37:33 1995  Don Bashford  <bashford@toad.scripps.edu>

	* multiflex.cc, solvate.cc, potential.cc, FDGridLevel.h,
	  FDGridLevel.cc: Implement epsave_oldway.

Fri Nov 24 20:09:54 1995  Don Bashford  <bashford@toad.scripps.edu>

	* NOTES: Check-in for snapshot MEAD_1_1_2

	* FDGridLevel.h: Minor Mod. for SGI compilation

	* Makefile.dec: Mods. so that MEAD_1_1_1 can compile.

	* multiflex.cc: Explicity return 0 from main (DEC C++ doesn't do
	it by default).

Thu Nov 23 09:00:19 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Makefile.sgi: With these mods. MEAD_1_1_1 can compile on the
	32-bit sgi.

Thu Nov 23 01:38:57 1995  Don Bashford  <bashford@toad.scripps.edu>

	* NOTES: Check in for snapshot MEAD_1_1_1.

	* Makefile: Improve building and inclusion of regex stuff.

Wed Nov 22 23:46:56 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Makefile: regex code in a local subdir, librx.  Segregate
	Amsterdam stuff.  Add NonLin stuff.  A temporary test_AnalySlab
	target.

	* FDElstatMaker.cc, FDElstatMaker.h: *** empty log message ***

	* FinDiffElstatPot.h: Made private members protected (FIXME?)  for
	use by planned subclasses (like NonLin).

	* FDGridLevel.h: Made private members protected (FIXME?) and some
	functions virtual for use by planned subclasses (like NonLin).

	* Elstat_list_init.cc: Add FDElstatMakers.  Add another AnalyMaker
	for AnalySlab.  (Changes relate to NonLin stuff and membranes).

	* ElstatPot.cc: Use an FDElstatMaker to do making (allows
	selection of NonLin, if appropriate).

	* FDGridLevel.cc: Remember to call analytic_approx->solve().

	* multiflex.cc: Implement membrane capability.

	* DielMembAtoms.h, DielMembAtoms.cc: *** empty log message ***

	* AnalySlab.cc, AnalySlab.h: Make this a real implementation.  Use
	method of images.

	* DielectricSlab.h, DielectricSlab.cc: Mods. to ctor: swap order
	of zlower and zupper args; add sanity checks.

Mon Nov 20 19:33:08 1995  Don Bashford  <bashford@toad.scripps.edu>

	* FlexiSite.h, MultiFlexiSiteMol.cc, MultiFlexiSiteMol.h,
	  MultiSiteMolecule.h SiteInMulti.h SiteInMulti.cc,
	  MultiSiteMolecule.cc: Add prot_dmf, mod_dmf, etc. as ctor args
	  for flexibility in the way Diel and Ely are built.

	* FlexiSite.cc: Add prot_dmf, mod_dmf, etc. as ctor args for
	flexibility in the way Diel and Ely are built.  Also minor changes
	to stop compiler warnings.

	* multiflex.cc: Specify functions to use for making diel and ely
	to the ctor of MultiFlexiSite.  (Preparation for membranes).

	* QmMolecule.cc, Sausage.cc AmstFitDens.cc: A few changes to avoid
	compiler warnings

	* ChargeDist.h: Fix a const declaration.

	* typeinfo: Add fabs and acos to the math.h hacks.

	* next_typeinfo.h: Location of installed libg++ headers changed.

	* solvate.cc QmMolecule.h: include typeinfo

Fri Nov 17 22:59:31 1995  Don Bashford  <bashford@toad.scripps.edu>

	* NonLin_Elstat_list_init.cc: Initial revision

Tue Oct 10 01:07:49 1995  Don Bashford  <bashford@toad.scripps.edu>

	* NOTES: Checkin for snapshot MEAD_1_1_0

Mon Oct  9 23:31:45 1995  Don Bashford  <bashford@toad.scripps.edu>

	* typeinfo, next_typeinfo.h, UniformElectrolyte.h,
	  UniformDielectric.h, OnePointCharge.h, ManyPointCharge.h,
	  FinDiffElstatPot.h, ElstatMaker.h, ElectrolyteByAtoms.h,
	  DielectricSphere.h, DielectricSlab.h, DielByAtoms.h,
	  DielAtomsMembrane.h, Debye.h, AnalySphere.h, AnalySlab.h,
	  AnalyMaker.h, multPotxCharge.cc, debye_test.cc,
	  add_charge_test.cc, UniformElectrolyte.cc, UniformDielectric.cc,
	  OnePointCharge.cc, ManyPointCharge.cc, FinDiffElstatPot.cc,
	  Elstat_list_init.cc, ElstatMaker.cc, ElectrolyteByAtoms.cc,
	  DielectricSphere.cc, DielectricSlab.cc, DielByAtoms.cc,
	  DielAtomsMembrane.cc, Debye.cc: AnalySphere.cc, AnalySlab.cc,
	  AnalyMaker.cc: Subclasses (letters) of the top-level class split
	  out according to RTTI/templates scheme.

	* solvate.cc, solinprot.cc, sav-driver.cc, qmsolvate.cc,
	  potential.cc, multiflex.cc, globals.h, Vertex.h, TPShell.h,
	  SolvAccVol.h, SiteUtil.cc, SiteInMulti.cc, Shell.h, Sausage.h,
	  Sausage.defs.h, Sausage.Plex.cc, SAVtag_points.cc,
	  SAVcalc_cuberep.cc, SAVanal_calc.cc, Pair.h, NonUnif.defs.h,
	  NonUnif.Plex.cc, MultiSiteMolecule.cc, FlexiSite.cc,
	  FinDiffMethod.cc, FDGridLevel.h, FDGridLevel.cc, ElstatPot.h,
	  ElstatPot.cc, ElectrolyteEnvironment.h,
	  ElectrolyteEnvironment.cc, DielectricEnvironment.h,
	  DielectricEnvironment.cc, DielCubeRep.cc, CubeLatSpec.cc,
	  ChargeDist.h, ChargeDist.cc, ChargeCubeRep.cc, CLShell.h,
	  Bigmem.cc, AtomID.h, AtomID.defs.h, AtomID.Atom.Map.cc,
	  AtomChargeSet.h, AtomChargeSet.cc, Atom.h, AmstFitDens.h,
	  AmstFitDens.cc, Makefile: Incorporated the RTTI/templates scheme
	  for top level classes.

Wed Oct  4 22:33:53 1995  Don Bashford  <bashford@toad.scripps.edu>

	* solinprot.cc: Enable non-zero ionic strength.

Thu Aug  3 01:38:28 1995  Don Bashford  <bashford@toad.scripps.edu>

	* NOTES: For snapshot 1.0.25

Wed Aug  2 22:45:20 1995  Don Bashford  <bashford@toad.scripps.edu>

	* SolvAccVol.cc: Atoms with zero (or less) radius will be ignored
	in SolvAccVol.

	* DielectricEnvironment.cc: Remember to close ostrstreams with
	ends.

	* Makefile: adf2sls target added

	* ADF_13_27_Data.h, ADF_13_27_Data.cc, adf2sls.cc: Initial
	revision

Fri Jul 14 05:24:07 1995  Don Bashford  <bashford@toad.scripps.edu>

	* qmsolvate.cc: Removed some debugging code.

Thu Jul 13 06:21:37 1995  Don Bashford  <bashford@toad.scripps.edu>

	* NOTES: Check in for snapshot 1.0.24

	* SiteInMulti.cc: Use the new AtomRegex class rather than Regex.
	(see NOTES entry of 12 July 95)

	* AtomRegex.h, AtomRegex.cc: Initial revision

	* Makefile: Add AtomRegex.o.  Remove malloc.o

	* Makefile.dec, Makefile.sgi: New porting scheme as described in
	NOTES entry for 12 July 95.

	* DielectricEnvironment.cc, ElectrolyteEnvironment.cc: Fix a
	serious BUG!  In several of the base class ctors leading to
	envelopes for new derived class objects, the referenceCount of the
	envelope object was not being set.  This sometimes led to the
	envelope object being deleted prematurely.

Fri Jul  7 05:08:43 1995  Don Bashford  <bashford@toad.scripps.edu>

	* NOTES: Check in for snapshot 1.0.23.

	* Makefile.port: Initial revision

Fri Jul  7 02:49:04 1995  Don Bashford  <bashford@toad.scripps.edu>
	(These changes are mostly for the Makefile.port compilation but
	also work with the regular Makefile)

	* qmsolvate.cc: Eliminate the use of fcompare function to increase
	portability.  Some command line flags with become case sensitive.

	* multiflex.cc: Use istream::operator>>(float&) to more directly
	check for presence of one or three floats after the -membhole
	flag.  Eliminate use of Regex.

	* SiteInMulti.cc: Use Regex class more directly rather than
	relying on the Regex interface within String.

	* QmMolecule.cc, DielCubeRep.cc, AtomChargeSet.cc, AmstFitDens.cc:
	Include string.h rather than memory.h for portability.

Thu Jun 29 06:46:20 1995  Don Bashford  <bashford@toad.scripps.edu>
	(Snapshot 1.0.22)

	* NOTES: Notes regarding changes to compile with gcc-2.7.0.

	* SolvAccVol.cc, SAVanal_calc.cc, SAVcalc_cuberep.cc,
	  AtomID.Atom.Map.cc, AtomSet.cc, ElectrolyteEnvironment.cc,
	  FDGridLevel.cc, FDChargeIterator.cc, AtomChargeSet.cc
	  FlexiSite.cc, MultiSiteMolecule.cc, SiteInMulti.cc, Shell.cc,
	  Sausage.MPlex.cc, SAVtag_points.cc, AtomID.Atom.VHMap.cc,
	  sor.cc, QmMolecule.cc: Adapt to new C++ for loop scope rule.
	  Should still be OK with old compilers

	* QmElement.cc: Adapt to new C++ for loop scope rule.  Should
	still be OK with old compilers Also removed include of std.h due
	to conflict in gcc-2.7.0.

Wed Jun 28 07:09:28 1995  Don Bashford  <bashford@toad.scripps.edu>
	(This is for the MEAD 1.0.21 snapshot)

	* Makefile.sgi: Adapt to some problems processing the -blab flags.
	This is for the 1.0.21 snapshot.

	* multiflex.cc: main should return an int

	* Makefile, NOTES: For the MEAD 1.0.21 snapshot.

Fri May  5 09:37:00 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Makefile.dec: Initial revision

Thu Apr 27 12:14:33 1995  Chun Yang  <cpeng@toad>

	* QmMolecule.cc: no change

Thu Apr 27 04:20:04 1995  Don Bashford  <bashford@toad.scripps.edu>

	* FDGridLevel.cc: Limits in potint changed from ">=" and "<=" to
	"<" and "<", respectively.  Fix for crashes on DEC near grid
	boundaries.

Wed Apr 26 07:17:27 1995  Don Bashford  <bashford@toad.scripps.edu>

	* SAVtag_points.cc, SAVcalc_cuberep.cc: Clarified output to blab2.

	* qmsolvate.cc: Bug Fix

	* qmsolvate.cc: Added option to write 1 or 0 in the .rf file
	according to point accessible or not, respectively.  (Still needs
	testing)

	* QmMolecule.cc: for (isum ; ...) --> for ( ; ...) to get rid of
	"statement with no effect" compiler warning.

	* SAVanal_calc.cc, FinDiffMethod.cc, DielectricEnvironment.cc,
	AmstFitDens.cc: Minor change in response to "unitialized variable"
	or "not referenced" warnings from compiler.

Tue Apr 25 23:59:19 1995  Don Bashford  <bashford@toad.scripps.edu>

	* SiteInMulti.cc: Minor change in response to "unitialized
	variable" or "not referenced" warnings from compiler.

	* multiflex.cc: Minor change in response to "unitialized variable"
	warnings from compiler.

Tue Apr 25 04:07:37 1995  Don Bashford  <bashford@toad.scripps.edu>

	* AtomChargeSet.h: A possibly risky workaround for a DEC C++
	bug/incompatability.  Used ifndef to protect compiles on other
	machines from the workaround.

	* CLShell.cc, sav-driver.cc, ElectrolyteEnvironment.h,
	  potential.cc, AtomSet.h, FDChargeIterator.cc, ChargeCubeRep.cc,
	  SiteInMulti.cc, SolvAccVol.cc, Potat.cc, multiflex.cc: Minor
	  changes for DEC C++ compilation.

Mon Apr 24 06:30:59 1995  Don Bashford  <bashford@toad.scripps.edu>

	* ChargeDist.cc, AtomChargeSet.cc, AtomChargeSet.h, ChargeDist.h:
	Separating out QM-related stuff for NO_AMST distribution

	* Makefile: removed pseudo_mult.  Other small revisions.

	* Makefile.sgi: Separating out QM-related stuff for NO_AMST
	distribution

	* FinDiffMethod.cc: Die with error if grid dimension is not odd.

	* sav-driver.cc: Minor changes for SGI compilation

	* Makefile.sgi: Initial revision

Sun Apr 23 07:09:02 1995  Don Bashford  <bashford@toad.scripps.edu>

	* globals.h, SolvAccVol.h, SiteInMulti.h, Shell.h, Potat.h,
	  MultiSiteMolecule.h, FlexiSite.h, FinDiffMethod.h,
	  FDGridLevel.h, FDChargeIterator.h, CubeLatSpec.h, AtomSet.h,
	  sor.cc, solvate.cc, solinprot.cc, qmsolvate.cc, potential.cc,
	  SiteUtil.cc, MultiSiteMolecule.cc, FinDiffMethod.cc,
	  FDGridLevel.cc, ElstatPot.cc, ElectrolyteEnvironment.cc,
	  DielectricEnvironment.cc: Added "in house" copyright notice.

Sat Apr 22 23:48:19 1995  Don Bashford  <bashford@toad.scripps.edu>

	* DielCubeRep.cc, ChargeDist.cc, ChargeCubeRep.h, Bigmem.h,
	 Bigmem.cc, QmMolecule.h, AtomChargeSet.h, AmstFitDens.cc: Added
	 "in house" copyright notice.

	* Atom.h: Revised copyright notice for SolvAccVol release.

	* NonUnif.Plex.h, AtomSet.cc, AtomID.Atom.VHMap.h, TPShell.cc,
	  SolvAccVol.cc, Sausage.Plex.h, Sausage.MPlex.h,
	  Sausage.MPlex.cc: Minor fixes for SGI CC compilation.

	* Pair.h, Potat.cc, FlexiSite.cc, FDChargeIterator.cc,
	  ElstatPot.h, ElectrolyteEnvironment.h, DielectricEnvironment.h,
	  DielCubeRep.h, ChargeDist.h, SiteInMulti.cc, QmMolecule.cc,
	  QmElement.cc, AtomChargeSet.cc, AmstFitDens.h, AtomChargeSet.cc,
	  AmstFitDens.h: Added "in house" copyright notice.  Minor fixes
	  for SGI CC compilation.

	* multiflex.cc: Added "in house" copyright notice.  Changes to
	compile with SGI include ifdef-ing many of the memory leak tests.

Tue Apr 18 08:52:26 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Makefile: Removed many test targets.  These now in misc-test
	directory.

	* sav-test.sh, Makefile.sav: Initial revision

	* VertElem.h, Vertex.h, Coord.h, sav-driver.cc, TPShell.cc,
	  globals.cc, Shell.cc, SolvAccVol.cc, SAVtag_points.cc,
	  Sausage.cc, SAVanal_calc.cc, SAVcalc_cuberep.cc, Pair.cc,
	  PhysCond.cc, CLShell.cc, CubeLatSpec.cc, AtomSet.cc, AtomID.cc,
	  Atom.cc: Copyright notice, etc. added or modified

Mon Apr 17 23:59:10 1995  Don Bashford  <bashford@toad.scripps.edu>

	* sor.cc, solinprot.cc, solvate.cc, sav-driver.cc, qmsolvate.cc,
	  SolvAccVol.cc, TPShell.cc, SiteInMulti.cc, SiteUtil.cc,
	  Shell.cc, SAVtag_points.cc, SAVanal_calc.cc, SAVcalc_cuberep.cc,
	  QmElement.cc, QmMolecule.cc, Potat.cc, PhysCond.cc,
	  MultiFlexiSiteMol.cc, MultiSiteMolecule.cc, FlexiSite.cc,
	  FDGridLevel.cc, FinDiffMethod.cc, FDChargeIterator.cc,
	  ElstatPot.cc, ElectrolyteEnvironment.cc, DielCubeRep.cc,
	  DielectricEnvironment.cc, ChargeDist.cc, CubeLatSpec.cc,
	  ChargeCubeRep.cc, AtomSet.cc, CLShell.cc, AtomID.cc,
	  AtomChargeSet.cc, AmstFitDens.cc, SolvAccVol.h, SiteUtil.h,
	  SiteInMulti.h, Potat.h, QmMolecule.h, MultiSiteMolecule.h,
	  FlexiSite.h, MultiFlexiSiteMol.h, FinDiffMethod.h,
	  FDChargeIterator.h, FDGridLevel.h, ElstatPot.h,
	  DielectricEnvironment.h, ElectrolyteEnvironment.h,
	  DielCubeRep.h, ChargeDist.h, CubeLatSpec.h, CenteringStyle.h,
	  ChargeCubeRep.h, AtomSet.h, AtomID.h, AtomChargeSet.h,
	  AmstFitDens.h, pseudo_mult.cc, multiflex.cc, globals.cc,
	  Sausage.cc, Pair.cc, Bigmem.cc, Atom.cc, globals.h, Vertex.h,
	  VertElem.h, TPShell.h, Shell.h, Sausage.h, PhysCond.h, Pair.h,
	  NonUnif.h, Coord.h, Cone.h, CLShell.h, Bigmem.h, Atom.h,
	  AccTag.h: RCS keyword substitution strings added or modified

Sat Apr 15 06:41:03 1995  Don Bashford  <bashford@toad.scripps.edu>

	* TPShell.h, TPShell.cc: Initial revision

Sat Apr 15 06:37:45 1995  Don Bashford  <bashford@toad.scripps.edu>
Most of these changes relate to adding the tag_points and accessible
functions to SolvAccVol which allow calculations of accessibility
of points not on a lattice.  This is slower.   TPShell class added
and Sausage class modified to support this.

	* sav-driver.cc: Option to use the tag_points or accessible
	functions of SolvAccVol rather than calc_cuberep.  (Only for
	testing.  Efficiency is poor.)

	* Makefile: Mods for new SAV stuff.

	* Sausage.h, Sausage.cc: New function, pt_inside.

	* SAVcalc_cuberep.cc: Unneeded junk removed.

	* SolvAccVol.h, SolvAccVol.cc: tag_points and accessible functions
	added.

	* SAVtag_points.cc: Initial revision

	* TPShell.h, TPShell.cc: Initial revision

Thu Apr  6 02:37:22 1995  Don Bashford  <bashford@toad.scripps.edu>

	* Sausage.cc, Sausage.h: Delete unused functions s_inside and
	d_inside.

Wed Apr  5 04:00:22 1995  Don Bashford  <bashford@toad.scripps.edu>
Responsibility for the half-spacing shift of the dielectric lattice
now belongs to FDGridLevel (since the shift is particular to FD-method)
rather than to DielectricEnvironment and/or SolvAccVol (since
the shift has nothing to do with dielectrics or accessibility as such).

	* NOTES: Checkin for snapshot MEAD_1_0_20.

	* FDGridLevel.cc: The half-spacing shift of the dielectric lattice
	is now the responsibility of FDGridLevel.

	* DielectricEnvironment.cc: Don't do the half-spacing shift in
	get_cuberup, let FDGridLevel do it instead.

	* README.SAV: Initial revision

Tue Apr  4 23:46:07 1995  Don Bashford  <bashford@toad.scripps.edu>
This set of check-ins is my adaptation of Tony's work on SAV code.

	* Makefile: New sav-driver target replaces driver, now obsolete.
	Targets using genclass removed.  They were a pain.

	* sav-driver.cc: Initial revision

	* SolvAccVol.h, SolvAccVol.cc: Changed interface to IO functions
	to include functions with no args (in which name data member is
	used to construct filename), functions with filename args and
	functions with iostream args.

	* Shell.cc: Initial revision

	* Shell.h: Most member functions, including Tony's IO functions,
	moved to new Shell.cc file.

	* Coord.h: Bug fix in read function.

	* CubeLatSpec.cc: Minor bug fix in print routine.

Wed Mar 29 19:04:29 1995  Don Bashford  <bashford@toad.scripps.edu>

	* driver.cc: Make the writing out of .dcr file consistent with
	older versions.

Tue Mar 28 00:17:36 1995  Tony J. You  <dragon@toad>
	(Tony's last check in, before he left, of his SolvAccVol stuff.)

	* driver.cc: Modified to include writing and reading facilities so
	that the solvent accessible volumn elements are written to both
	binary and ascii files which later can be read in.

	* SolvAccVol.cc, SolvAccVol.h, Sausage.h, Sausage.cc, Shell.h:
	Four ios functions have been implimented. They write out and read
	in both binary and ascii files containing solvent accessible
	volumn elements.

	* CLShell.cc, Sausage.cc: The half space displacement for
	grid_center_in_space has been removed. For multimead calculation,
	this half_space_displacement should be taken into account when
	specifying the center of the grid.

Sat Dec 31 15:31:26 1994  Don Bashford  <bashford@toad.scripps.edu>

	* FlexiSite.h: Add facilities for calculating self energy of
	backgroud charges.

	* AtomChargeSet.cc: Guard more rigourously against atoms outside
	the lattice causing trouble.

	* FDChargeIterator.cc: Fixed bug that cause nextevenh and nextoddh
	to be set incorrectly.

	* FlexiSite.cc: Add facilities for calculating self energy of
	backgroud charges.

	* multiflex.cc: A -SelfBack flag now turns on calculation of self
	energy of background for flexible sites.

Fri Dec 30 22:43:44 1994  Don Bashford  <bashford@toad.scripps.edu>

	* multiflex.cc: Initial revision

Fri Dec 30 22:28:19 1994  Don Bashford  <bashford@toad.scripps.edu>
	Various things for the 1.0.18 snapshot:

	* Makefile: Added Potat.o and some FlexiSite stuff.  Remove
	DielCubeRepMap stuf.

	* README, NOTES: *** empty log message ***

	* MultiSiteMolecule.cc: Minor improvements to write_titr_info.

	* AtomID.cc, SiteInMulti.cc: Fix memory leak by remembering do
	delete strings produced by ostrstreams.

	* SiteInMulti.h: Change the write_summ_header function back to
	static.

	* FlexiSite.h, FlexiSite.cc: Summary info to be written in a
	separate file for each site.  write_summ_file member function
	added to do this.

	* ElstatPot.cc, ElstatPot.h: Modify Debye class so it works
	correctly for non-zero electrolyte.

	* DielectricEnvironment.cc, DielectricEnvironment.h: Eliminated
	the use of DielCubeRepMap.  No more storing old grids.

	* ChargeDist.h, AtomChargeSet.h: Added member functions,
	first_point, next_point and get_point To ChargeDist to deal with
	the problem of implementing an analytic approx for non-zero
	electrolyte.

	* SiteUtil.cc, SiteUtil.h, MultiFlexiSiteMol.cc,
	MultiFlexiSiteMol.h: Initial revision

	* MultiSiteMolecule.cc, MultiSiteMolecule.h: Added newsite virtual
	function as a trick for constructing the appropriate kind of
	sites.  Also some adaptation to changes to the interface of
	SiteInMulti member functions.

	* SiteInMulti.h, SiteInMulti.cc: Misc. reorganization:
	elstat_mol_charge_state made a free standing utility function
	rather than a member function and removed from class.  Copy ctor
	and assignment moved to private area and made forbidden.  Added
	some "done" flags to enforce proper sequence of state changes.

	* FlexiSite.h: Initial revision

	* FlexiSite.cc: The macromolecule grid method, instead of the
	model compound method, is now used for the uniform dielectric
	calculation.

	* FlexiSite.cc: Initial revision

Thu Dec 29 07:38:54 1994  Don Bashford  <bashford@toad.scripps.edu>

	* README: Initial revision

Sat Dec 24 09:47:37 1994  Don Bashford  <bashford@toad.scripps.edu>
	Things look pretty good for multimead.  Do snapshot (1.0.17) *
	Makefile, NOTES: Check in for 1.0.17 snapshot.

	* pseudo_mult.cc: Now should have all multimead features except
	membranes.  Seems to work on simple br test case.

	* AtomSet.cc, AtomSet.h: Added new features: Delta and set_*_to
	functions.  SiteInMulti uses these.

	* SiteInMulti.h, SiteInMulti.cc, MultiSiteMolecule.h,
	MultiSiteMolecule.cc: Put in site-site interactions and writing to
	.pkint, etc.  Seems to work on simple br test case.

Fri Dec 23 06:58:53 1994  Don Bashford  <bashford@toad.scripps.edu>

	* MultiSiteMolecule.h, MultiSiteMolecule.cc, SiteInMulti.cc,
	  SiteInMulti.h: Much of the work of MultiSiteMolecule moved to
	  SiteInMulti.  Site--site interaction still needs to be
	  re-implemented.

Thu Dec 22 06:18:11 1994  Don Bashford  <bashford@toad.scripps.edu>

	* solinprot.cc, qmsolvate.cc: Removed instanceCount definitions
	now that they are defined elsewhere.

Thu Dec 22 05:57:03 1994  Don Bashford  <bashford@toad.scripps.edu>

More minor revs preperatory to a snapshot and bigger changes in
MultiSite stuff.

	* malloc.c: New version from libg++-2.6.0

	* NOTES: Check in for snapshot 1.0.15

	* Makefile: malloc.o back in some targets and -DMALLOC_STATS is on
	New target, "potential."

	* pseudo_mult.cc: Using malloc_stats to check for leaks.

	* ElectrolyteEnvironment.h: Added missing instances() member
	function.

Wed Dec 21 22:48:00 1994  Don Bashford  <bashford@toad.scripps.edu>

	* malloc.c: Initial revision

	* FDGridLevel.cc: Fix memory leak

Wed Dec 21 09:01:02 1994  Don Bashford  <bashford@toad.scripps.edu>

	Minor changes preperatory to bigger changes in MultiSiteMolecule
	et al.:

	* MultiSiteMolecule.h, MultiSiteMolecule.cc, pseudo_mult.cc:
	Changes in the way of passing epsin to MultiSiteMolecule

	* AtomSet.cc: operator= rewritten to avoid memory bug.

	* maptest.cc: Now writes out whole br atom list twice: to
	br-dup.pqr and br-dub2.pqr.

	* AtomID.cc: Changed the set_hash function to produce something
	other than zero!

Tue Dec 20 01:41:02 1994  Don Bashford  <bashford@toad.scripps.edu>

	Most of these changes have to do with modifications to the
	letter/envelope scheme for ElstatPot, ChargeDist,
	DielectricEnvironment and ElectrolyteEnvironment.  See the NOTES
	file entry for 18 Dec for more details.

	* ChargeDist.h, ChargeDist.cc: More modifications to the
	letter/envelope implementation.

	* ElstatPot.h, ElstatPot.cc: Modification of letter/envelope
	implementation.  AnalyticEP made abstract.

	* DielectricEnvironment.cc, DielectricEnvironment.h: Modification
	of letter/envelope implementation.

	* potential.cc: Initial revision

	* ElectrolyteEnvironment.cc, ElectrolyteEnvironment.h: New
	subclass, LinearElectrolyteByAtoms.  Modification of
	letter/envelope implementation.

	* MultiSiteMolecule.cc: Non-temporary construction of ChareDist
	objects for ElstatPots in calc_site.

	* solvate.cc: Include ionic strenth in calculations.

	* pseudo_mult.cc: Take a -site flag to do just one site.  Read
	.ogm and .mgm files.  Other small changes.

Sat Dec 17 10:28:11 1994  Don Bashford  <bashford@toad.scripps.edu>

	* QmMolecule.h: Added a get_info function.

	* SiteInMulti.cc, SiteInMulti.h: Simplified now since
	AtomChargeSet had default ctor.

	* AmstFitDens.cc, AmstFitDens.h, ChargeDist.h, ChargeDist.cc,
	  AtomChargeSet.cc, AtomChargeSet.h: New way of dealing with
	  letter--envelope implementation: rep and referenceCount are
	  separte now.  Base class "knows" whether it is an envelope or
	  base part of a letter.  Safer and more versitile I hope.

	* MultiSiteMolecule.cc: Minor changes in set_up_sites relating to
	AtomChargeSet use.

Fri Dec 16 20:41:31 1994  Don Bashford  <bashford@toad.scripps.edu>

	* Potat.cc, Potat.h: Initial revision

Fri Dec 16 11:03:27 1994  Don Bashford  <bashford@toad.scripps.edu>

	* MultiSiteMolecule.cc: The new Potat class used to save and
	retrieve from .potat files.  Advantage taken of AtomChargeSet's
	inheritance of AtomSet.

	* SiteInMulti.h, SiteInMulti.cc: Since AtomChargeSet is now a
	subclass of AtomSet, the separate AtomSet data items are now
	removed from SiteInMulti

	* AtomID.h, AtomID.cc: Added stream output functionality.

	* AtomChargeSet.cc, AtomChargeSet.h: Made AtomChargeSet a subclass
	of AtomSet rather than just containing an AtomSet.  This allows
	use of all of AtomSet's functions which helps a lot in multimead.

Fri Dec  2 07:18:20 1994  Don Bashford  <bashford@toad.scripps.edu>

	* FDGridLevel.h, FDGridLevel.cc: Member functions fieldint and
	displacement_int added.  They find these vector quantities by
	differencing and interpolation from grid.  Main ctor semantics
	made more reasonable; analytic_approx, now a pointer.  Several new
	ctors for creating FDGridLevels with potential pre-loaded.  The
	DielCubeRep dcrp is made a data member so that both setup_sor and
	displacement_int can use it; setup_sor aggressively deletes it,
	but disp can remake it cheaply.

	Clean ups and more checking by solve, misc_settings Potint() made
	safe for points right on the outer boundary.

	* ElstatPot.cc, ElstatPot.h: Added field and displacement member
	functions to return these vector quantities.  Real implementation
	only for FinDiffElstatPot.

	* DielCubeRep.h: eps_neg_z etc., added for getting eps along lines
	near phi points.  Helps with calculation of displacement, etc.
	Ctor that took String argument eliminated.

	* DielectricEnvironment.cc: Use of bogus String-taking ctors
	removed.  Real implementation of get_cuberep for Slab

	* interpolation_test.cc, fdgltest.cc: Initial revision

	* NOTES: Check in prior to snapshot 1.0.14

	* Makefile: New targets: fdgltest interpolation_test fieldtest
	spherepair.  An "all" target added (but doesn't really do "all").

Fri Nov 18 02:09:52 1994  Don Bashford  <bashford@toad.scripps.edu>

	* qmsolvate.cc: Make -Spin and -AdfVersion flags mandatory and
	make them take string arguments rather than integers.

	* QmMolecule.h, QmMolecule.cc: Make ctor args use enums for spin
	and version info and check for contridictions in spin info versus
	old version tape 27 files.

	* Makefile: For MEAD_1_0_13 checkin.

	* NOTES: Check in for MEAD_1_0_13 (last one wasn't really).

Wed Nov 16 03:14:47 1994  Don Bashford  <bashford@toad.scripps.edu>

	* driver.cc, solvate.cc: Remove malloc_stats calls.

	* qmsolvate.cc: Previous version by Chun Yang added -Spin and
	-AdfVersion command flags.  This version just removes malloc_stats
	calls.

Tue Nov 15 14:35:35 1994  Chun Yang  <cpeng@toad>

	* AmstFitDens.cc: *** empty log message ***

	* QmElement.cc: C. Y. Peng add more basis functions

	* qmsolvate.cc: C. Y. Peng,

	* QmMolecule.h: C. Y. Peng

	* QmMolecule.cc: Revision by C. Y. Peng -Spin command line
	argument is added some of the buggs in QmMolecule are fixed.
	There might be some more debug printing.

Tue Nov 15 10:33:54 1994  Don Bashford  <bashford@toad.scripps.edu>

	* FDChargeIterator.h: Added a print function and fixed a trivial
	bug in complete_point.

	* FDChargeIterator.cc: Added a print function (mostly for
	debugging).

	* pseudo_mult.cc: Many changes.  It more or less works now.

	* MultiSiteMolecule.cc: Many changes.  It more or less works now!

	* FDGridLevel.cc: Bug fixes: Use correct formula for inverse
	epsilon averaging.  Fix typo in k-slab initialization that cause
	bad potentials near some edges.  Changes: In phi_init, load
	initialized boundary to main grid for first iteration.  In
	phi_from_prev, initialize the WHOLE grid, not just sides.  (This
	is slow and maybe not needed!) FIXME?

	* Makefile: Some new targets, mostly for tests and debugging.

	* NOTES: Check in for snapshot MEAD_1_0_13.

Wed Oct 19 01:55:14 1994  Don Bashford  <bashford@toad.scripps.edu>

	* defs.hP, VHMap.hP, VHMap.ccP, Map.hP, Map.ccP: Fix Map prototype
	by adding const-ness and correcting Pix code errors.

	* Makefile: Use of genclass to make some of the container classes
	added.

	* NOTES: Notes as of MEAD_1_0_12.

Tue Oct 18 21:31:10 1994  Don Bashford  <bashford@griffy.scripps.edu>

	* AtomID.defs.h, AtomID.Atom.VHMap.h, AtomID.Atom.VHMap.cc,
	AtomID.Atom.Map.h, AtomID.Atom.Map.cc: Generation from new (and
	fixed by me) Map prototypes.  More const-ness.

	* NonUnif.defs.h, Sausage.MPlex.cc, Sausage.MPlex.h,
	Sausage.Plex.cc, Sausage.Plex.h, NonUnif.XPlex.h,
	NonUnif.XPlex.cc, NonUnif.Plex.h, NonUnif.Plex.cc: Generated from
	new Plex prototypes in libg++-2.6.

	* FDChargeIterator.cc, ChargeCubeRep.cc: pragma implementation
	added.

	* CLShell.cc: Place include of CLShell.h before the pragma
	implementation for compilation with gcc-2.6.0.

	* AmstFitDens.cc, DielCubeRep.cc, AtomChargeSet.cc: Switch from
	bzero to memset.

Fri Oct 14 07:13:15 1994  Don Bashford  <bashford@griffy.scripps.edu>

	* defs.hP, Map.ccP, Map.hP, VHMap.ccP, VHMap.hP: Initial revision

	* FDGridLevel.cc: Fix from Sept 22 involving boundary values for
	kappa arrays.

Thu Sep 22 06:07:32 1994  Don Bashford  <bashford@griffy.scripps.edu>

	* NOTES: For snapshot MEAD_1_0_11.

Thu Sep 22 05:58:14 1994  Don Bashford  (bashford@toad)
	(See notes for Sept 21 94) * qmsolvate.cc: epsin no longer part of
	PhysCond.  Here, enforce epsin=epsvac by forbidding use of -epsin
	flag.

	* SAVanal_calc.cc: Remove calls to Sun facility for profiling with
	function.

	* Sausage.Plex.h, Sausage.MPlex.h: Cast pointers to long rather
	than int for use with DEC C++.

	* NonUnif.Plex.h: Pointer cast to long rather than int for sake of
	DEC C++.

	* FDChargeIterator.h: Change from private to protected data in
	base needed for DEC C++.

	* Coord.h: Eliminate friend-ship of operators, not needed since
	data are public and caused trouble for DEC C++ (don't know why not
	legal though).

	* CenteringStyle.h: Initial revision

	* Sausage.Plex.cc: Don't include stream.h (not used anyway).

	* Sausage.MPlex.cc: Fix up some bzero calls and pointer casts so
	the DEC C++ compiler won't complain.

	* PhysCond.h, PhysCond.cc: Removal of epsin from PhysCond.

	* NonUnif.Plex.cc: Include of stream.h removed (was not used
	anyway).

	* FinDiffMethod.cc: operator<< definition moved here from .h file.

	* FinDiffMethod.h: enum Centering style definition included rather
	than forward declared.  operator<< definition moved to .cc file.

	* ElstatPot.cc, ElectrolyteEnvironment.cc: Replacement of
	old-style-stream form function with use of strstreams.

	* CubeLatSpec.h: Some inlines from .cc file moved to here.  enum
	Centering style definition included rather than forward
	declaration to satsfy stricter compilers.

	* CubeLatSpec.cc: Replacement of old-style-stream form function
	with use of strstreams.  Some inline functions moved to .h file.

	* AtomChargeSet.cc: const added to satisfy DEC C++ compiler

	* globals.cc: Elimination of epsin from PhysCond.

	* DielectricEnvironment.cc: Elimination of epsin from PhysCond
	implies that DielectricEnvironment cannot rely on some sort of
	global default epsin value.  So some ctors eliminated and some now
	have added epsin arguments.  Also, eliminated use of form function
	from old stream library, use strstreams instead.

	* DielectricEnvironment.h: Elimination of epsin from PhysCond
	implies that DielectricEnvironment cannot rely on some sort of
	global default epsin value.  So some ctors eliminated and some now
	have added epsin arguments.

	* solvate.cc: Coord interest = 0 (trivial)

	* solinprot.cc: -epsin1 and -epsin2 now mandatory Coord interest =
	0 (trivial)

	* solvate.cc: -epsin flag mandatory.  epsin no longer part of
	PhysCond.

Tue Sep 13 05:41:46 1994  Don Bashford  (bashford@toad)

	* Makefile: qmoltest target added.

	* NOTES: For MEAD_1_0_10 snapshot

Tue Sep 13 05:30:37 1994  Don Bashford  (bashford@toad)
	(NOTE: Something is funny with RCS, this time stamp is about 7
	hours ahead)

	* qmoltest.cc: Initial revision

	* qmtest.cc: Testing for memory leaks turned on

	* AmstFitDens.cc, QmMolecule.h, QmMolecule.cc, QmElement.cc:
	Proper copy constructors and assignment operators for QmElement,
	QmBase and QmMolecule.  Other minor fixes.

Mon Sep 12 22:22:44 1994  Don Bashford  (bashford@toad)

	* Bigmem.cc: In big_rigid_free remember to null out the "biggest"
	pointer.

	* solvate.cc: Testing for memory leaks turned on.

	* qmsolvate.cc: Testing for memory leaks turned on

Thu Sep  8 07:18:19 1994  Don Bashford  (bashford@toad)

	* Makefile: Incorparate Chen's new versions and add qmsolvate
	target.

	* NOTES: Notes just before making snapshot MEAD_1_0_9.

Thu Sep  8 06:54:25 1994  Don Bashford  (bashford@toad)

	* AmstFitDens.h, AmstFitDens.cc, qmtest.cc: Chen's Labor Day
	version of his QM density code with some modifications by Don to
	get it working with latest MEAD revision.

	* AtomChargeSet.h, AtomChargeSet.cc, ChargeDist.h, ChargeDist.cc:
	Modifications to incorporate AmstFitDens as a subclass of
	ChargeDist.

	* qmsolvate.cc, QmMolecule.h, QmMolecule.cc, QmElement.cc: Initial
	revision

        * Makefile: Incorparate Chen's new versions and add qmsolvate
	target.

Wed Sep  7 06:16:47 1994  Don Bashford  (bashford@toad)

	* NOTES: For the MEAD_1_0_8 snapshot.

	* DielectricEnvironment.h, DielectricEnvironment.cc: Adapt to new
	semantics of SolvAccVol class.

	* CLShell.h, Sausage.h, SolvAccVol.h: Don't forward declare enum
	AccTag.

	* driver.cc: New SolvAccVol semantics and much checking for memory
	leaks.  (should take latter out for more public version.)

Wed Aug 31 21:25:30 1994  Don Bashford  (bashford@toad)

	* SolvAccVol.h, SolvAccVol.cc, SAVanal_calc.cc,
	SAVcalc_cuberep.cc: SolvAccVol now uses handle--body idiom for
	clean passing and memory management.  Improved semantics of ctor
	(takes an AtomSet rather than a string), anal_calc (takes no
	args), and calc_cuberep (takes AccTag array as arg rather than
	returning array ptr).  Transfor of AtomSet information moved from
	anal_calc to ctor.  Tested and debugged for memory leaks.

	* Shell.h: Added a get_numcones access function and a
	ShellConeIterator class.  These are used in the new,
	non-derivative implementation of CLShell

	* CLShell.cc, CLShell.h: CLShell no longer a derived class of
	Shell.  Cleaner and makes memory management easier.

Mon Aug 29 22:49:44 1994  Don Bashford  (bashford@toad)

	* AtomSet.h: Added get_name function (so SolvAccVol and others can
	use it).

Sat Aug 20 05:44:29 1994  Don Bashford  (bashford@toad)

	* solinprot.cc: Capability to write out reaction fields and
	protein fields added.  * Makefile: New target, solinprot.

	* DielectricEnvironment.h: Added a ThreeValueDielectricByAtoms
	class.  * DielectricEnvironment.cc: Added a
	ThreeValueDielectricByAtoms class.  * ElectrolyteEnvironment.h:
	Made friends with ThreeValueDielectric.

	* AtomChargeSet.cc: Fixed bug in finDiffElstatPotMultiply function

	* Coord.h: Fixed bug in the read function.

	* solvate.cc: Capability to write out reaction field added.

	* qmtest.cc: Try to add use of TAPE13 and TAPE27 filenames
	constructed from command line but ran into funny semantics of
	AmstFitDens.  Shelve this till that's taken care of.

Fri Aug 19 19:39:24 1994  Don Bashford  (bashford@toad)

	* solinprot.cc: Initial revision

Thu Aug 18 00:55:16 1994  Don Bashford  (bashford@toad)

	* QmAtom.cc: Bug fix: set next to zero in constructor.

Wed Aug 17 07:39:45 1994  Don Bashford  (bashford@toad)

	* NOTES: Initial revision

Wed Aug 17 07:24:26 1994  Don Bashford  (bashford@toad)

	* Makefile: Almost all entries are sensible and compile.

	* debtest.cc: Compilation broken due to changes elsewhere.

	* proto.cc: Initial revision

	* FDChargeIterator.cc: Handle case of chodd or cheven being empty

	* driver.cc: Modify to work with new DielCubeRep scheme.

	* maptest.cc: use strstreams instead of dec(int) in SiteGetter

	* etest.cc: Misc changes to get it to compile with most recent
	changes.  Does not run properly.

	* dtest.cc, qmtest.cc: Misc changes to get it to compile with most
	recent changes.

	* dens_in_sphere.cc: Initial revision

Wed Aug 17 01:22:24 1994  Don Bashford  (bashford@toad)

	* ChargeCubeRep.h, ChargeCubeRep.cc, AtomChargeSet.cc,
	DielCubeRep.h, DielCubeRep.cc, FDGridLevel.cc, ElstatPot.h,
	ElstatPot.cc: Commented-out stuff deleted.

Tue Aug 16 23:57:58 1994  Don Bashford  (bashford@toad)

	* Makefile: Solvate should compile and run.  Changes to
	DielCubeRep and ChargeCubeRep schemes.  Memory leak fixes, etc.

	* solvate.cc: This implementation of solvate should work like that
	in MEAD-0.2.2 All old-MEAD stuff is gone now.

	* Bigmem.cc, Bigmem.h: Add a big_rigid_stats for debugging memory
	leaks and a big_rigid_delete_all for memory cleanup.

	* ElstatPot.cc: Proper destructor for FinDiffElstatPot to fix
	memory leak.

	* FDGridLevel.cc, FDGridLevel.h: Minor changes to use new
	ChargeCubeRep and DielCubeRep schemes.  Proper destructor to fix
	memory leaks.

	* sor.cc: Use the new ChargeCubeRep scheme.

	* DielectricEnvironment.h, DielectricEnvironment.cc: Changes to be
	consistant with new DielCubeRep scheme * DielCubeRepMap.cc: Add a
	proper destructor * DielCubeRepMap.h: Add a proper destructor *
	DielCubeRep.h, DielCubeRep.cc: Overhaul of DielCubeRep.  Use a
	handle-body ideom, have proper destructors, define operator[] so
	it can be used like an array of floats.  Handle is now lightweight
	so the DCR's can be passed themselves rather than pointers.

	* AmstFitDens.cc: Use the new ChargeCubeRep scheme.  *
	AtomChargeSet.cc: Use the new ChargeCubeRep scheme.  *
	FDChargeIterator.cc, FDChargeIterator.h: Initial revision *
	hargeCubeRep.h, ChargeCubeRep.cc: New CargeCubeRep scheme with CCR
	as abstract base and SparseCubeRep as concrete subclass.  CCR is
	much simpler now and has no special tools for finite difference
	iteration.  Those functions are in parallel abstract class
	FDChargeIterator and its Sparse subclass.

	* SAVcalc_cuberep.cc: Blab level checks use the pointers, in
	accord with the new blab scheme.

Thu Aug 11 06:03:37 1994  Don Bashford  (bashford@toad)

	* AmstFitDens.h, AmstFitDens.cc: Eliminate duplication between
	vacuum_coulomb and get_cuberep by introducing new functions
	vacuum_coulomb_electronic vacuum_coulomb_nuclear.  Implement
	(4.0*PI/6.0 + 1.0)/spacing factor for nuclear singularity.

Sat Aug  6 08:52:44 1994  Don Bashford  (bashford@toad)

	* Coord.h: Added a read function and >> operator that allows
	Coords to be read either as a triplet of floats with or without
	parens, with or without commas.  The read function is now a big
	hairy inline.  Maybe its time to have a Coord.cc.

	* FinDiffMethod.cc: Changed resolve function to take Coord
	geom_cent rather than an AtomSet as an argument.  This reduces
	gratuitous dependencies and improves generality.  Added a print
	function and an << operator.  Added a read function that can take
	centering as either a style or an explicit Coord.

	* FinDiffMethod.h, CubeLatSpec.cc, CubeLatSpec.h: Changed resolve
	function to take Coord geom_cent rather than an AtomSet as an
	argument.  This reduces gratuitous dependencies and improves
	generality.  Added a print function and an << operator.

	* DielectricEnvironment.cc: Various changes from back in May or
	so.

	* DielectricEnvironment.h: Tiny changes back around May 12 to work
	with newer SolvAccVol version

	* MultiSiteMolecule.cc: Use AtomSet::geom_cent per new
	FinDiffMethod requirements.

	* Makefile: New stuff for compiling a working solvate and for
	testing some of Chen's AmstFitDens stuff.

	* AtomSet.cc, AtomSet.h: geom_cent function added

	* AtomChargeSet.cc: The various member fuctions for multiplying
	times a potential are restored.  (Previously the were commented
	out to reduce file depends.)  And a real implementation of
	finDiffElstatPotMultiply.

	* AtomChargeSet.h: The various member fuctions for multiplying
	times a potential are restored.  (Previously the were commented
	out to reduce file depends.)

	* ElstatPot.cc: Made value a const function.

	* ElstatPot.h: Made value member function const.

	* solvate.cc: Initial revision

Sat Jul 30 01:29:47 1994  Don Bashford  (bashford@toad)

	* globals.cc, globals.h, blabtest.cc, driver.cc, spheretest.cc:
	Assignment of blab changed to assignment of blab pointer.

Fri Jul 29 07:48:17 1994  Don Bashford  (bashford@toad)

	* PhysCond.cc, globals.cc, PhysCond.h: Added bohr_radius and
	proton_charge to PhysCond.  So far, these are only used by
	AmstFitDens.

Thu Jul 28 21:27:50 1994  Don Bashford  (bashford@toad)

	* AmstFitDens.cc: Chen's fixed version.  Now is tested for
	agreement to potentials calculated by ADF.  Includes special
	treatment for grid point on nucleus (qeff/(0.315*spacing)).

Wed Jul 27 23:59:38 1994  Don Bashford  (bashford@toad)

	* AtomicData.h, AtomicData.cc: Initial revision

	* QmAtomSet.cc, QmAtomSet.h, QmAtom.cc, QmAtom.h: Chen's major
	rewrite of classes for representing ADF atoms.  This one compiles
	and runs with reasonable results, but it has not been extensively
	tested and it zeros the potential on the nucleus.

	* AmstFitDens.cc: Extensive rewrite by Chen.  It now runs OK but
	the density has a negative hole at points where nucleus falls on
	grid point surrounded by a positive ring.  This is caused by
	setting potential at nucleus to zero to avoid singularity.

	* AmstFitDens.h, AtomChargeSet.h: Initial revision

	* AtomChargeSet.cc, ChargeDist.cc: Commented out some operators to
	reduce interdependency.

	* ChargeDist.h: Split out AtomChargeSet to another file.
	Commented out some operators to reduce interdependency.

	* ChargeCubeRep.h, ChargeCubeRep.cc: Added splot_slice member
	function for outputting density to be plotted by gnuplot splot
	function.

Tue May 17 00:39:21 1994  Don Bashford  (bashford@toad)

	* qmtest.cc, AmstFitDens.cc, QmAtom.cc, QmAtom.h, QmAtomSet.cc,
	QmAtomSet.h: Initial revision

Fri May 13 02:05:18 1994  Tony J. You  (dragon@toad)

	* SAVanal_calc.cc: changed the variable indices in SPCOR3.

Thu May 12 22:29:09 1994  Don Bashford  (bashford@toad)

	* SAVanal_calc.cc: Added test to make sure all surviving vertices
	are reference three times.

Sat Apr 16 06:47:47 1994  Don Bashford  (bashford@toad)

	* SAVanal_calc.cc: Use the new flag value for Pairs,
	geometrically_buried.  No cones need to be generated for Pairs
	that are found to be geometrically buried during triplex checking
	since they are completely inside another cone.  On the br test
	this cuts the number of Cones in half.

	* Pair.h: Added the geometrically_buried value to the enum for the
	flag.  quickcheck_burial_by_shell is the only valid way to set
	this flag (but this rule is not really enforced by data hiding).

	* CLShell.cc: In mark_by_cones eliminated some unnecessary
	calculating of squares of sines.  This makes the code cleaner, but
	on my br test, it had very little effect on speed.

	* CLShell.cc: In mark_by_cones moved a vector subraction as far
	out of loops as possible and improved the calculation of dsq.

Fri Apr 15 00:07:29 1994  Tony J. You  (dragon@toad)

	* driver.cc: corrected a minor type error.

Thu Apr 14 23:53:19 1994  Tony J. You  (dragon@toad)

	* driver.cc: Add lib. timing function to measure the system and
	user time used for each module.

Sat Apr  9 05:47:33 1994  Don Bashford  (bashford@toad)

	* driver.cc: Must do conversion to dielectric array in the main
	program now since SolvAccVol doesn't do it.  Take specification of
	molname from command line.

	* Pair.cc: Eliminate passing in of Rij.  Store as data member
	instead.

	* Makefile: Makefile for testing SolvAccVol.  Probably won't work
	on larger program.

	* SAVcalc_cuberep.cc: Make blab-level dependent some of the runs
	through the lattice that only gather statistics to be blabbed
	about.

	* Sausage.h: Reorganized to improve semantics of public interface
	and increase privace of internal data.

	* CLShell.cc: Make use of unit vectors in Cones.  Some name
	changes as per CLShell.h changes.  Eliminated load_conelist which
	is no longer needed.

	* CLShell.h: Some changes to accommodate name change, Sphere -->
	Shell and EpsTag --> AccTag.  Don't use "ComCone."  Eliminate some
	old debugging code.

	* Cone.h: Put in a unit vector in cone axis to replace the
	atom-atom vector

	* Coord.h: Unary minus operator added.

	* Pair.h: Reorginization of public interface to be more
	understandable.  Eliminate passing in of Rij to Check_vertex_pair.

	* AccTag.h, Shell.h, SAVcalc_cuberep.cc, SAVanal_calc.cc,
	SolvAccVol.cc, SolvAccVol.h: Initial revision

Fri Apr  8 00:44:54 1994  Tony J. You  (dragon@toad)

	* Sausage.cc: corrected a small typor 6.26 -> 6.28 for 2Pi.

Thu Apr  7 21:41:31 1994  Tony J. You  (dragon@toad)

	* Sausage.cc: compiled successfully.

	* Sausage.cc: made some renames of a few variables to avoid
	confusion in nomenclature. Also deleted some unused
	statements. Have checked algorithm for excluding points from
	sausage.

Thu Apr  7 02:29:29 1994  Don Bashford  (bashford@toad)

	* Sausage.cc: New check in after some reorganization of class
	names etc.  There is still a small bug in mark_cubelat that Tony
	needs to fix.

Wed Nov 24 08:59:15 1993  Don Bashford  (bashford@toad)

	* Cone.cc: THIS FILE IS NOW OBSOLETE!!  IT SHOULD NO LONGER BE
	LINKED IN!

	* Cone.cc: New reorginized data structure for spheres and cones
	(esp. cones).  Reproduces previous version's grid on BR test.

	* driver.cc: New reorginized data structure for spheres and cones
	(esp. cones).  Reproduces previous version's grid on BR test.
	Here, just minor changes to the driver.

	* CLShell.cc: New reorginized data structure for spheres and cones
	(esp. cones).  Reproduces previous version's grid on BR test.

	* Cone.h: New reorginized data structure for spheres and cones
	(esp. cones).  Reproduces previous version's grid on BR test.
	Here, the Cone class has been simplified to a functionless struct.

	* CLShell.h: New reorginized data structure for spheres and cones
	(esp. cones).  Reproduces previous version's grid on BR test.

	* Makefile: New reorginized data structure for spheres and cones
	(esp. cones).  Reproduces previous version's grid on BR test.  I/O
	of topology data is trashed for now.  Restore later.

Sun Nov 21 20:39:01 1993  Don Bashford  (bashford@toad)

	* Makefile: Part of a general check in of several files after work
	on improving Pair::Check_vertex_pair and associates.  Here,
	reflect that VertElem.o no longer is made, and some flag changes.

	* Pair.cc: Part of a general check in of several files after work
	on improving Pair::Check_vertex_pair and associates.  Here
	Check_vertex_pair has been substantially reworked and cleaned up,
	and commented, but the basic procedure remains pretty much the
	same as Tony's version.

	* CLShell.h: Part of a general check in of several files after
	work on improving Pair::Check_vertex_pair and associates.  Only a
	minor bug fix here.

	* Pair.h: Part of a general check in of several files after work
	on improving Pair::Check_vertex_pair and associates.  Here, a
	member function vertex_angle has been added to help the work of
	Check_vertex_pair.  Other minor cleanups and cosmetic changes.

	* CubeLatSpec.cc: Part of a general check in of several files
	after work on improving Pair::Check_vertex_pair and associates.
	This file just has very minor change to get rid of a -Wall
	warning.

	* Vertex.h: Part of a general check in of several files after work
	on improving Pair::Check_vertex_pair and associates.  This file
	just has Vertex and VertElement counting optional via cpp define.

	* VertElem.h: Part of a general check in of several files after
	work on improving Pair::Check_vertex_pair and associates.
	Includes a small but important change to semantics of assignment:
	next and prev pointers don't get copied.  That way if you assign
	to a linked list element, it says in the linked list but gets new
	"content" Also has Vertex and VertElement counting optional via
	cpp define.

	* driver.cc, globals.cc: Part of a general check in of several
	files after work on improving Pair::Check_vertex_pair and
	associates.  This file just has Vertex and VertElement counting
	optional via cpp define.

Sat Nov 20 02:28:21 1993  Don Bashford  (bashford@toad)

	* VertElem.h, Pair.h, Vertex.h, Pair.cc, Coord.h: More inlining
	added.

Fri Nov 19 21:53:07 1993  Don Bashford  (bashford@toad)

	* Pair.h: Fixed bug in destructor and cleanup functions that was
	causing one VertElem to go undeleted.

	* Pair.cc: Comments added to clarify Check_vertex_pair.  No code
	changes

Wed Nov 17 02:24:23 1993  Don Bashford  (bashford@toad)

	* VertElem.h, Vertex.h, Pair.h, Sausage.defs.h, driver.cc,
	Pair.cc, AtomChargeSet.cc, FinDiffMethod.cc: Initial revision

	* Makefile, globals.h, SiteInMulti.defs.h, SiteInMulti.h,
	SiteInMulti.Plex.h, SiteInMulti.XPlex.h, NonUnif.XPlex.h,
	NonUnif.defs.h, NonUnif.h, MultiSiteMolecule.h, NonUnif.Plex.h,
	FDGridLevel.h, FinDiffMethod.h, ElstatPot.h, DielCubeRepMap.h,
	DielectricEnvironment.h, Cone.h, ChargeCubeRep.h, ChargeDist.h,
	Bigmem.h, AtomID.h, AtomSet.h, AtomID.Atom.VHMap.h, AtomID.defs.h,
	Atom.h, spheretest.cc, pseudo_mult.cc, sor.cc, globals.cc,
	maptest.cc, blabtest.cc, debtest.cc, SiteInMulti.cc,
	SiteInMulti.Plex.cc, SiteInMulti.XPlex.cc, Sausage.cc,
	NonUnif.XPlex.cc, PhysCond.cc, MultiSiteMolecule.cc,
	NonUnif.Plex.cc, ElstatPot.cc, FDGridLevel.cc,
	DielectricEnvironment.cc, ElectrolyteEnvironment.cc,
	DielCubeRep.cc, DielCubeRepMap.cc, Cone.cc, ChargeCubeRep.cc,
	ChargeDist.cc, Bigmem.cc, CLShell.cc, AtomSet.cc,
	AtomID.Atom.Map.cc, AtomID.Atom.VHMap.cc, AtomID.cc, Atom.cc:
	Tony's AnalSurfRep implementation including Vertex rings

Tue Nov 16 01:42:29 1993  Don Bashford  (bashford@toad)

	* Makefile: Checking in a moderately changed Makefile including
	build rules for some obsolete version (From 21 June) of Tony's
	driver programs but with dependency list deleted.  This check is
	just a precaution for some major editing to be done.

Mon Nov 15 21:55:21 1993  Don Bashford  (bashford@toad)

	* PhysCond.h: Fixed set_epsext to so that kappasq is reset
	properly.  (This was fixed June 21 but only now checking in.)

	* AtomID.Atom.Map.h: Fixed a libg++ bug by making length member
	functions const.  This was done 21 June, but only now checking in.

Sat Nov  6 01:18:42 1993  Don Bashford  (bashford@toad)

	* CubeLatSpec.cc: Initial revision

	* CubeLatSpec.h: Moved alot of functions to the .cc file in June

	* Coord.h: Cross products added in June

	* DielCubeRep.h: Minor changes made in September

	* CLShell.h, CLShell.cc: Initial revision

Thu Jul 29 00:08:17 1993  Don Bashford  (bashford@toad)

	* Sausage.MPlex.cc, Sausage.MPlex.h, Sausage.Plex.cc,
	Sausage.Plex.h, Cone.cc, Cone.h, Sausage.cc, Sausage.h: Initial
	revision

Tue Mar 16 22:46:34 1993  Don Bashford  (bashford@toad)

	* Bigmem.cc, Bigmem.h, ChargeCubeRep.cc, ChargeCubeRep.h,
	ChargeDist.cc, ChargeDist.h, Coord.h, CubeLatSpec.h,
	DielCubeRep.cc, DielCubeRep.h, DielectricEnvironment.cc,
	DielectricEnvironment.h, ElectrolyteEnvironment.h, ElstatPot.cc,
	ElstatPot.h, FDGridLevel.cc, FDGridLevel.h, Makefile,
	NonUnif.Plex.cc, NonUnif.Plex.h, NonUnif.XPlex.cc,
	NonUnif.XPlex.h, NonUnif.defs.h, NonUnif.h, sor.cc, spheretest.cc:
	Actual F.D. machinery put in, tests on charge at center of sphere
	work, reorganization of files needed.

Wed Mar 10 23:23:55 1993  Don Bashford  (bashford@toad)

	* Makefile: In this revision, letter/envelope idiom is added, Map
	classes are used for AtomSet implementation and blab levels are
	implemented.

	* AtomID.h, AtomID.Atom.VHMap.h, AtomID.defs.h, Atom.h,
	AtomID.Atom.Map.h, maptest.cc, ElectrolyteEnvironment.cc,
	blabtest.cc, debtest.cc, AtomSet.cc, DielCubeRepMap.cc,
	AtomID.Atom.VHMap.cc, AtomID.cc, Atom.cc, AtomID.Atom.Map.cc:
	Initial revision

	* SiteInMulti.h, globals.h, PhysCond.h, MultiSiteMolecule.h,
	FDGridLevel.h, FinDiffMethod.h, ElectrolyteEnvironment.h,
	ElstatPot.h, DielectricEnvironment.h, DielCubeRepMap.h,
	DielCubeRep.h, ChargeDist.h, Coord.h, AtomSet.h, pseudo_mult.cc,
	globals.cc, SiteInMulti.cc, PhysCond.cc, MultiSiteMolecule.cc,
	ElstatPot.cc, DielectricEnvironment.cc, DielCubeRep.cc,
	ChargeDist.cc: In this revision, letter/envelope idiom is added,
	Map classes are used for AtomSet implementation and blab levels
	are implemented.

Tue Dec  8 01:44:12 1992  Don Bashford  (bashford@toad)

	* OUTLINE, Makefile, AtomSet.h, ChargeDist.cc, ChargeDist.h,
	Coord.h, CubeLatSpec.h, DielCubeRep.cc, DielCubeRep.h,
	DielCubeRepMap.h, DielectricEnvironment.cc,
	DielectricEnvironment.h, ElectrolyteEnvironment.h, ElstatPot.cc,
	ElstatPot.h, FDGridLevel.h, FinDiffMethod.h, MultiSiteMolecule.cc,
	MultiSiteMolecule.h, PhysCond.cc, PhysCond.h, SiteInMulti.Plex.cc,
	SiteInMulti.Plex.h, SiteInMulti.XPlex.cc, SiteInMulti.XPlex.h,
	SiteInMulti.cc, SiteInMulti.defs.h, SiteInMulti.h, dtest.cc,
	etest.cc, globals.cc, globals.h, pseudo_mult.cc: Initial revision

